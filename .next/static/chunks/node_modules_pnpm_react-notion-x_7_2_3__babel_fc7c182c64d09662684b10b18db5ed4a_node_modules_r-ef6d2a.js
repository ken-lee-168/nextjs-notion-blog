"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_pnpm_react-notion-x_7_2_3__babel_fc7c182c64d09662684b10b18db5ed4a_node_modules_r-ef6d2a"],{

/***/ "./node_modules/.pnpm/react-notion-x@7.2.3_@babel_fc7c182c64d09662684b10b18db5ed4a/node_modules/react-notion-x/build/third-party/collection.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-notion-x@7.2.3_@babel_fc7c182c64d09662684b10b18db5ed4a/node_modules/react-notion-x/build/third-party/collection.js ***!
  \*****************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Collection: () => (/* binding */ Collection),\n/* harmony export */   Property: () => (/* binding */ PropertyImplMemo)\n/* harmony export */ });\n/* harmony import */ var notion_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! notion-utils */ \"./node_modules/.pnpm/notion-utils@7.1.3/node_modules/notion-utils/build/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js\");\n/* harmony import */ var react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hotkeys-hook */ \"./node_modules/.pnpm/react-hotkeys-hook@4.6.1_re_012cfc2b0087df754f24c66bdee22b9b/node_modules/react-hotkeys-hook/dist/react-hotkeys-hook.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_image__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-image */ \"./node_modules/.pnpm/react-image@4.1.0_@babel+ru_3644ed3ffd0c31bba3d2e7ea91540c7a/node_modules/react-image/umd/index.js\");\n/* harmony import */ var react_lazy_images__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-lazy-images */ \"./node_modules/.pnpm/react-lazy-images@1.1.0_rea_e0055eebdbcd1125815a49b9c5ff09b6/node_modules/react-lazy-images/dist/react-lazy-images.es.js\");\n/* harmony import */ var react_fast_compare__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-fast-compare */ \"./node_modules/.pnpm/react-fast-compare@3.2.2/node_modules/react-fast-compare/index.js\");\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// ../../node_modules/.pnpm/lodash.throttle@4.1.1/node_modules/lodash.throttle/index.js\nvar require_lodash = __commonJS({\n  \"../../node_modules/.pnpm/lodash.throttle@4.1.1/node_modules/lodash.throttle/index.js\"(exports, module) {\n    \"use strict\";\n    var FUNC_ERROR_TEXT = \"Expected a function\";\n    var NAN = 0 / 0;\n    var symbolTag = \"[object Symbol]\";\n    var reTrim = /^\\s+|\\s+$/g;\n    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n    var reIsBinary = /^0b[01]+$/i;\n    var reIsOctal = /^0o[0-7]+$/i;\n    var freeParseInt = parseInt;\n    var freeGlobal = typeof global == \"object\" && global && global.Object === Object && global;\n    var freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\n    var root = freeGlobal || freeSelf || Function(\"return this\")();\n    var objectProto = Object.prototype;\n    var objectToString = objectProto.toString;\n    var nativeMax = Math.max;\n    var nativeMin = Math.min;\n    var now = function() {\n      return root.Date.now();\n    };\n    function debounce(func, wait, options) {\n      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;\n      if (typeof func != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = \"maxWait\" in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n      }\n      function invokeFunc(time) {\n        var args = lastArgs, thisArg = lastThis;\n        lastArgs = lastThis = void 0;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n      function leadingEdge(time) {\n        lastInvokeTime = time;\n        timerId = setTimeout(timerExpired, wait);\n        return leading ? invokeFunc(time) : result;\n      }\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;\n        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;\n      }\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;\n        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n      }\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n      function trailingEdge(time) {\n        timerId = void 0;\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = void 0;\n        return result;\n      }\n      function cancel() {\n        if (timerId !== void 0) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = void 0;\n      }\n      function flush() {\n        return timerId === void 0 ? result : trailingEdge(now());\n      }\n      function debounced() {\n        var time = now(), isInvoking = shouldInvoke(time);\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n        if (isInvoking) {\n          if (timerId === void 0) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === void 0) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n    function throttle2(func, wait, options) {\n      var leading = true, trailing = true;\n      if (typeof func != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = \"leading\" in options ? !!options.leading : leading;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        \"leading\": leading,\n        \"maxWait\": wait,\n        \"trailing\": trailing\n      });\n    }\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == \"object\" || type == \"function\");\n    }\n    function isObjectLike(value) {\n      return !!value && typeof value == \"object\";\n    }\n    function isSymbol(value) {\n      return typeof value == \"symbol\" || isObjectLike(value) && objectToString.call(value) == symbolTag;\n    }\n    function toNumber(value) {\n      if (typeof value == \"number\") {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == \"function\" ? value.valueOf() : value;\n        value = isObject(other) ? other + \"\" : other;\n      }\n      if (typeof value != \"string\") {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, \"\");\n      var isBinary = reIsBinary.test(value);\n      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n    }\n    module.exports = throttle2;\n  }\n});\n\n// ../../node_modules/.pnpm/format-number@3.0.0/node_modules/format-number/index.js\nvar require_format_number = __commonJS({\n  \"../../node_modules/.pnpm/format-number@3.0.0/node_modules/format-number/index.js\"(exports, module) {\n    \"use strict\";\n    module.exports = formatter;\n    module.exports.default = formatter;\n    function formatter(options) {\n      options = options || {};\n      options.negativeType = options.negativeType || (options.negative === \"R\" ? \"right\" : \"left\");\n      if (typeof options.negativeLeftSymbol !== \"string\") {\n        switch (options.negativeType) {\n          case \"left\":\n            options.negativeLeftSymbol = \"-\";\n            break;\n          case \"brackets\":\n            options.negativeLeftSymbol = \"(\";\n            break;\n          default:\n            options.negativeLeftSymbol = \"\";\n        }\n      }\n      if (typeof options.negativeRightSymbol !== \"string\") {\n        switch (options.negativeType) {\n          case \"right\":\n            options.negativeRightSymbol = \"-\";\n            break;\n          case \"brackets\":\n            options.negativeRightSymbol = \")\";\n            break;\n          default:\n            options.negativeRightSymbol = \"\";\n        }\n      }\n      if (typeof options.negativeLeftOut !== \"boolean\") {\n        options.negativeLeftOut = options.negativeOut === false ? false : true;\n      }\n      if (typeof options.negativeRightOut !== \"boolean\") {\n        options.negativeRightOut = options.negativeOut === false ? false : true;\n      }\n      options.prefix = options.prefix || \"\";\n      options.suffix = options.suffix || \"\";\n      if (typeof options.integerSeparator !== \"string\") {\n        options.integerSeparator = typeof options.separator === \"string\" ? options.separator : \",\";\n      }\n      options.decimalsSeparator = typeof options.decimalsSeparator === \"string\" ? options.decimalsSeparator : \"\";\n      options.decimal = options.decimal || \".\";\n      options.padLeft = options.padLeft || -1;\n      options.padRight = options.padRight || -1;\n      function format2(number, overrideOptions) {\n        overrideOptions = overrideOptions || {};\n        if (number || number === 0) {\n          number = \"\" + number;\n        } else {\n          return \"\";\n        }\n        var output = [];\n        var negative = number.charAt(0) === \"-\";\n        number = number.replace(/^\\-/g, \"\");\n        if (!options.negativeLeftOut && !overrideOptions.noUnits) {\n          output.push(options.prefix);\n        }\n        if (negative) {\n          output.push(options.negativeLeftSymbol);\n        }\n        if (options.negativeLeftOut && !overrideOptions.noUnits) {\n          output.push(options.prefix);\n        }\n        number = number.split(\".\");\n        if (options.round != null) round(number, options.round);\n        if (options.truncate != null) number[1] = truncate(number[1], options.truncate);\n        if (options.padLeft > 0) number[0] = padLeft(number[0], options.padLeft);\n        if (options.padRight > 0) number[1] = padRight(number[1], options.padRight);\n        if (!overrideOptions.noSeparator && number[1]) number[1] = addDecimalSeparators(number[1], options.decimalsSeparator);\n        if (!overrideOptions.noSeparator && number[0]) number[0] = addIntegerSeparators(number[0], options.integerSeparator);\n        output.push(number[0]);\n        if (number[1]) {\n          output.push(options.decimal);\n          output.push(number[1]);\n        }\n        if (options.negativeRightOut && !overrideOptions.noUnits) {\n          output.push(options.suffix);\n        }\n        if (negative) {\n          output.push(options.negativeRightSymbol);\n        }\n        if (!options.negativeRightOut && !overrideOptions.noUnits) {\n          output.push(options.suffix);\n        }\n        return output.join(\"\");\n      }\n      format2.negative = options.negative;\n      format2.negativeOut = options.negativeOut;\n      format2.negativeType = options.negativeType;\n      format2.negativeLeftOut = options.negativeLeftOut;\n      format2.negativeLeftSymbol = options.negativeLeftSymbol;\n      format2.negativeRightOut = options.negativeRightOut;\n      format2.negativeRightSymbol = options.negativeRightSymbol;\n      format2.prefix = options.prefix;\n      format2.suffix = options.suffix;\n      format2.separate = options.separate;\n      format2.integerSeparator = options.integerSeparator;\n      format2.decimalsSeparator = options.decimalsSeparator;\n      format2.decimal = options.decimal;\n      format2.padLeft = options.padLeft;\n      format2.padRight = options.padRight;\n      format2.truncate = options.truncate;\n      format2.round = options.round;\n      function unformat(number, allowedSeparators) {\n        allowedSeparators = allowedSeparators || [];\n        if (options.allowedSeparators) {\n          options.allowedSeparators.forEach(function(s) {\n            allowedSeparators.push(s);\n          });\n        }\n        allowedSeparators.push(options.integerSeparator);\n        allowedSeparators.push(options.decimalsSeparator);\n        number = number.replace(options.prefix, \"\");\n        number = number.replace(options.suffix, \"\");\n        var newNumber = number;\n        do {\n          number = newNumber;\n          for (var i = 0; i < allowedSeparators.length; i++) {\n            newNumber = newNumber.replace(allowedSeparators[i], \"\");\n          }\n        } while (newNumber != number);\n        return number;\n      }\n      format2.unformat = unformat;\n      function validate(number, allowedSeparators) {\n        number = unformat(number, allowedSeparators);\n        number = number.split(options.decimal);\n        if (number.length > 2) {\n          return false;\n        } else if (options.truncate != null && number[1] && number[1].length > options.truncate) {\n          return false;\n        } else if (options.round != null && number[1] && number[1].length > options.round) {\n          return false;\n        } else {\n          return /^-?\\d+\\.?\\d*$/.test(number);\n        }\n      }\n      return format2;\n    }\n    function addIntegerSeparators(x, separator) {\n      x += \"\";\n      if (!separator) return x;\n      var rgx = /(\\d+)(\\d{3})/;\n      while (rgx.test(x)) {\n        x = x.replace(rgx, \"$1\" + separator + \"$2\");\n      }\n      return x;\n    }\n    function addDecimalSeparators(x, separator) {\n      x += \"\";\n      if (!separator) return x;\n      var rgx = /(\\d{3})(\\d+)/;\n      while (rgx.test(x)) {\n        x = x.replace(rgx, \"$1\" + separator + \"$2\");\n      }\n      return x;\n    }\n    function padLeft(x, padding) {\n      x = x + \"\";\n      var buf = [];\n      while (buf.length + x.length < padding) {\n        buf.push(\"0\");\n      }\n      return buf.join(\"\") + x;\n    }\n    function padRight(x, padding) {\n      if (x) {\n        x += \"\";\n      } else {\n        x = \"\";\n      }\n      var buf = [];\n      while (buf.length + x.length < padding) {\n        buf.push(\"0\");\n      }\n      return x + buf.join(\"\");\n    }\n    function truncate(x, length) {\n      if (x) {\n        x += \"\";\n      }\n      if (x && x.length > length) {\n        return x.substr(0, length);\n      } else {\n        return x;\n      }\n    }\n    function round(number, places) {\n      if (number[1] && places >= 0 && number[1].length > places) {\n        var decim = number[1].slice(0, places);\n        if (+number[1].substr(places, 1) >= 5) {\n          var leadingzeros = \"\";\n          while (decim.charAt(0) === \"0\") {\n            leadingzeros = leadingzeros + \"0\";\n            decim = decim.substr(1);\n          }\n          decim = +decim + 1 + \"\";\n          decim = leadingzeros + decim;\n          if (decim.length > places) {\n            number[0] = +number[0] + +decim.charAt(0) + \"\";\n            decim = decim.substring(1);\n          }\n        }\n        number[1] = decim;\n      }\n      return number;\n    }\n  }\n});\n\n// src/third-party/collection.tsx\n\n\n\n// src/components/page-icon.tsx\n\n\n\n\n// src/context.tsx\n\n\n\n\n// src/components/asset-wrapper.tsx\n\n\n\n// src/components/header.tsx\n\n\n\n\n// src/icons/search-icon.tsx\n\n\n// src/utils.ts\n\n\nvar cs = (...classes) => classes.filter((a) => !!a).join(\" \");\nvar getHashFragmentValue = (url) => {\n  return url.includes(\"#\") ? url.replace(/^.+(#.+)$/, \"$1\") : \"\";\n};\nvar isBrowser = typeof window !== \"undefined\";\nvar youtubeDomains = /* @__PURE__ */ new Set([\n  \"youtu.be\",\n  \"youtube.com\",\n  \"www.youtube.com\",\n  \"youtube-nocookie.com\",\n  \"www.youtube-nocookie.com\"\n]);\nvar getYoutubeId = (url) => {\n  var _a;\n  try {\n    const { hostname } = new URL(url);\n    if (!youtubeDomains.has(hostname)) {\n      return null;\n    }\n    const regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/i;\n    const match2 = url.match(regExp);\n    if (match2 && ((_a = match2[2]) == null ? void 0 : _a.length) === 11) {\n      return match2[2];\n    }\n  } catch (e) {\n  }\n  return null;\n};\nvar getUrlParams = (url) => {\n  try {\n    const { searchParams } = new URL(url);\n    const result = {};\n    for (const [key, value] of searchParams.entries()) {\n      result[key] = value;\n    }\n    return result;\n  } catch (e) {\n  }\n  return;\n};\n\n// src/icons/search-icon.tsx\n\nfunction SearchIcon(props) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { className: cs(\"notion-icon\", className), viewBox: \"0 0 17 17\", ...rest, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z\" }) });\n}\n\n// src/components/search-dialog.tsx\nvar import_lodash = __toESM(require_lodash(), 1);\n\n\n\n// src/icons/clear-icon.tsx\n\n\nfunction ClearIcon(props) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { className: cs(\"notion-icon\", className), ...rest, viewBox: \"0 0 30 30\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z\" }) });\n}\n\n// src/icons/loading-icon.tsx\n\n\nfunction LoadingIcon(props) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"svg\", { className: cs(\"notion-icon\", className), ...rest, viewBox: \"0 0 24 24\", children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"defs\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n      \"linearGradient\",\n      {\n        x1: \"28.1542969%\",\n        y1: \"63.7402344%\",\n        x2: \"74.6289062%\",\n        y2: \"17.7832031%\",\n        id: \"linearGradient-1\",\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"stop\", { stopColor: \"rgba(164, 164, 164, 1)\", offset: \"0%\" }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            \"stop\",\n            {\n              stopColor: \"rgba(164, 164, 164, 0)\",\n              stopOpacity: \"0\",\n              offset: \"100%\"\n            }\n          )\n        ]\n      }\n    ) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"g\", { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", fill: \"none\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"g\", { transform: \"translate(-236.000000, -286.000000)\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"g\", { transform: \"translate(238.000000, 286.000000)\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"circle\",\n        {\n          id: \"Oval-2\",\n          stroke: \"url(#linearGradient-1)\",\n          strokeWidth: \"4\",\n          cx: \"10\",\n          cy: \"12\",\n          r: \"10\"\n        }\n      ),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"path\",\n        {\n          d: \"M10,2 C4.4771525,2 0,6.4771525 0,12\",\n          id: \"Oval-2\",\n          stroke: \"rgba(164, 164, 164, 1)\",\n          strokeWidth: \"4\"\n        }\n      ),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"rect\",\n        {\n          id: \"Rectangle-1\",\n          fill: \"rgba(164, 164, 164, 1)\",\n          x: \"8\",\n          y: \"0\",\n          width: \"4\",\n          height: \"4\",\n          rx: \"8\"\n        }\n      )\n    ] }) }) })\n  ] });\n}\n\n// src/components/page-title.tsx\n\n\n\n\n// src/components/text.tsx\n\n\n\n\n// src/components/eoi.tsx\n\n\n// src/icons/type-github.tsx\n\nfunction SvgTypeGitHub(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 260 260\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"g\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    \"path\",\n    {\n      d: \"M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z\",\n      fill: \"#161614\"\n    }\n  ) }) });\n}\nvar type_github_default = SvgTypeGitHub;\n\n// src/components/mention-preview-card.tsx\n\nfunction capitalizeFirstLetter(str) {\n  if (!str) return \"\";\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction MentionPreviewCard({\n  owner,\n  lastUpdated,\n  externalImage,\n  title,\n  domain\n}) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-external-subtitle\", children: [\n    externalImage && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-preview-card-domain-warp\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-preview-card-logo\", children: externalImage }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-preview-card-domain\", children: capitalizeFirstLetter(domain.split(\".\")[0]) })\n    ] }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-preview-card-title\", children: title }),\n    owner && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-external-subtitle-item\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-external-subtitle-item-name\", children: \"Owner\" }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-external-subtitle-item-desc\", children: owner })\n    ] }),\n    lastUpdated && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-external-subtitle-item\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-external-subtitle-item-name\", children: \"Updated\" }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-external-subtitle-item-desc\", children: lastUpdated })\n    ] }),\n    domain === \"github.com\" && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-preview-card-github-shields\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"img\",\n        {\n          src: `https://img.shields.io/github/stars/${owner}/${title}?logo=github`,\n          alt: \"\"\n        }\n      ),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"img\",\n        {\n          src: `https://img.shields.io/github/last-commit/${owner}/${title}`,\n          alt: \"\"\n        }\n      )\n    ] })\n  ] });\n}\n\n// src/components/eoi.tsx\n\nfunction EOI({\n  block,\n  inline,\n  className\n}) {\n  var _a, _b, _c;\n  const { components } = useNotionContext();\n  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};\n  if (!original_url || !attributes) {\n    return null;\n  }\n  const title = (_a = attributes.find((attr) => attr.id === \"title\")) == null ? void 0 : _a.values[0];\n  let owner = (_b = attributes.find((attr) => attr.id === \"owner\")) == null ? void 0 : _b.values[0];\n  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === \"updated_at\")) == null ? void 0 : _c.values[0];\n  const lastUpdated = lastUpdatedAt ? (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.formatNotionDateTime)(lastUpdatedAt) : null;\n  let externalImage;\n  switch (domain) {\n    case \"github.com\":\n      externalImage = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(type_github_default, {});\n      if (owner) {\n        const parts = owner.split(\"/\");\n        owner = parts.at(-1);\n      }\n      break;\n    default:\n      if (true) {\n        console.log(\n          `Unsupported external_object_instance domain \"${domain}\"`,\n          JSON.stringify(block, null, 2)\n        );\n      }\n      return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n    components.Link,\n    {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: original_url,\n      className: cs(\n        \"notion-external\",\n        inline ? \"notion-external-mention\" : \"notion-external-block notion-row\",\n        className\n      ),\n      children: [\n        externalImage && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-external-image\", children: externalImage }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-external-description\", children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-external-title\", children: title }),\n          !inline && owner ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-external-block-desc\", children: [\n            owner,\n            lastUpdated && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { children: \" \\u2022 \" }),\n            lastUpdated && `Updated ${lastUpdated}`\n          ] }) : null,\n          inline && (owner || lastUpdated) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            MentionPreviewCard,\n            {\n              title,\n              owner,\n              lastUpdated,\n              domain,\n              externalImage\n            }\n          )\n        ] })\n      ]\n    }\n  );\n}\n\n// src/components/graceful-image.tsx\n\n\n\nfunction GracefulImage(props) {\n  if (isBrowser) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_image__WEBPACK_IMPORTED_MODULE_4__.Img, { ...props });\n  } else {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"img\", { ...props });\n  }\n}\n\n// src/components/text.tsx\n\nfunction Text({\n  value,\n  block,\n  linkProps,\n  linkProtocol\n}) {\n  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: value == null ? void 0 : value.map(([text, decorations], index) => {\n    if (!decorations) {\n      if (text === \",\") {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { style: { padding: \"0.5em\" } }, index);\n      } else {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: text }, index);\n      }\n    }\n    const formatted = decorations.reduce(\n      (element, decorator) => {\n        var _a, _b, _c, _d, _e;\n        switch (decorator[0]) {\n          case \"p\": {\n            const blockId = decorator[1];\n            const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n            if (!linkedBlock) {\n              console.log('\"p\" missing block', blockId);\n              return null;\n            }\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              components.PageLink,\n              {\n                className: \"notion-link\",\n                href: mapPageUrl(blockId),\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PageTitle, { block: linkedBlock })\n              }\n            );\n          }\n          case \"\\u2023\": {\n            const linkType = decorator[1][0];\n            const id = decorator[1][1];\n            switch (linkType) {\n              case \"u\": {\n                const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;\n                if (!user) {\n                  console.log('\"\\u2023\" missing user', id);\n                  return null;\n                }\n                const src = mapImageUrl(user.profile_photo, block);\n                if (!src) return null;\n                const name = [user.given_name, user.family_name].filter(Boolean).join(\" \");\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                  GracefulImage,\n                  {\n                    className: \"notion-user\",\n                    src,\n                    alt: name\n                  }\n                );\n              }\n              default: {\n                const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;\n                if (!linkedBlock) {\n                  console.log('\"\\u2023\" missing block', linkType, id);\n                  return null;\n                }\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                  components.PageLink,\n                  {\n                    className: \"notion-link\",\n                    href: mapPageUrl(id),\n                    ...linkProps,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PageTitle, { block: linkedBlock })\n                  }\n                );\n              }\n            }\n          }\n          case \"h\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: `notion-${decorator[1]}`, children: element });\n          case \"c\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"code\", { className: \"notion-inline-code\", children: element });\n          case \"b\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"b\", { children: element });\n          case \"i\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"em\", { children: element });\n          case \"s\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"s\", { children: element });\n          case \"_\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-inline-underscore\", children: element });\n          case \"e\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(components.Equation, { math: decorator[1], inline: true });\n          case \"m\":\n            return element;\n          //still need to return the base element\n          case \"a\": {\n            const v = decorator[1];\n            const pathname = v.slice(1);\n            const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.parsePageId)(pathname, { uuid: true });\n            if (rootDomain && v.includes(rootDomain) || id && v[0] === \"/\") {\n              const href = rootDomain && v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;\n              return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                components.PageLink,\n                {\n                  className: \"notion-link\",\n                  href,\n                  ...linkProps,\n                  children: element\n                }\n              );\n            } else {\n              return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                components.Link,\n                {\n                  className: \"notion-link\",\n                  href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1],\n                  ...linkProps,\n                  children: element\n                }\n              );\n            }\n          }\n          case \"d\": {\n            const v = decorator[1];\n            const type = v == null ? void 0 : v.type;\n            if (type === \"date\") {\n              const startDate = v.start_date;\n              return (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.formatDate)(startDate);\n            } else if (type === \"datetime\") {\n              const startDate = v.start_date;\n              const startTime = v.start_time;\n              return `${(0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.formatDate)(startDate)} ${startTime}`;\n            } else if (type === \"daterange\") {\n              const startDate = v.start_date;\n              const endDate = v.end_date;\n              return `${(0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.formatDate)(startDate)} \\u2192 ${(0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.formatDate)(endDate)}`;\n            } else {\n              return element;\n            }\n          }\n          case \"u\": {\n            const userId = decorator[1];\n            const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;\n            if (!user) {\n              console.log(\"missing user\", userId);\n              return null;\n            }\n            const src = mapImageUrl(user.profile_photo, block);\n            if (!src) return null;\n            const name = [user.given_name, user.family_name].filter(Boolean).join(\" \");\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(GracefulImage, { className: \"notion-user\", src, alt: name });\n          }\n          case \"eoi\": {\n            const blockId = decorator[1];\n            const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(EOI, { block: externalObjectInstance, inline: true });\n          }\n          default:\n            if (true) {\n              console.log(\"unsupported text format\", decorator);\n            }\n            return element;\n        }\n      },\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: text })\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: formatted }, index);\n  }) });\n}\n\n// src/components/page-title.tsx\n\nfunction PageTitleImpl({\n  block,\n  className,\n  defaultIcon,\n  ...rest\n}) {\n  var _a, _b;\n  const { recordMap } = useNotionContext();\n  if (!block) return null;\n  if (block.type === \"collection_view_page\" || block.type === \"collection_view\") {\n    const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockTitle)(block, recordMap);\n    if (!title) {\n      return null;\n    }\n    const titleDecoration = [[title]];\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"span\", { className: cs(\"notion-page-title\", className), ...rest, children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        PageIcon,\n        {\n          block,\n          defaultIcon,\n          className: \"notion-page-title-icon\"\n        }\n      ),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-page-title-text\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: titleDecoration, block }) })\n    ] });\n  }\n  if (!((_a = block.properties) == null ? void 0 : _a.title)) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"span\", { className: cs(\"notion-page-title\", className), ...rest, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      PageIcon,\n      {\n        block,\n        defaultIcon,\n        className: \"notion-page-title-icon\"\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-page-title-text\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: (_b = block.properties) == null ? void 0 : _b.title, block }) })\n  ] });\n}\nvar PageTitle = react__WEBPACK_IMPORTED_MODULE_0__.memo(PageTitleImpl);\n\n// src/components/search-dialog.tsx\n\nvar SearchDialog = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, \"state\", {\n      isLoading: false,\n      query: \"\",\n      searchResult: null,\n      searchError: null\n    });\n    __publicField(this, \"_inputRef\");\n    __publicField(this, \"_search\");\n    __publicField(this, \"_onAfterOpen\", () => {\n      if (this._inputRef.current) {\n        this._inputRef.current.focus();\n      }\n    });\n    __publicField(this, \"_onChangeQuery\", (e) => {\n      const query = e.target.value;\n      this.setState({ query });\n      if (!query.trim()) {\n        this.setState({ isLoading: false, searchResult: null, searchError: null });\n        return;\n      } else {\n        this._search();\n      }\n    });\n    __publicField(this, \"_onClearQuery\", () => {\n      this._onChangeQuery({ target: { value: \"\" } });\n    });\n    __publicField(this, \"_warmupSearch\", async () => {\n      const { searchNotion, rootBlockId } = this.props;\n      await searchNotion({\n        query: \"\",\n        ancestorId: rootBlockId\n      });\n    });\n    __publicField(this, \"_searchImpl\", async () => {\n      const { searchNotion, rootBlockId } = this.props;\n      const { query } = this.state;\n      if (!query.trim()) {\n        this.setState({ isLoading: false, searchResult: null, searchError: null });\n        return;\n      }\n      this.setState({ isLoading: true });\n      const result = await searchNotion({\n        query,\n        ancestorId: rootBlockId\n      });\n      console.log(\"search\", query, result);\n      let searchResult = null;\n      let searchError = null;\n      if (result.error || result.errorId) {\n        searchError = result;\n      } else {\n        searchResult = { ...result };\n        const results = searchResult.results.map((result2) => {\n          var _a, _b;\n          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;\n          if (!block) return;\n          const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockTitle)(block, searchResult.recordMap);\n          if (!title) {\n            return;\n          }\n          result2.title = title;\n          result2.block = block;\n          result2.recordMap = searchResult.recordMap;\n          result2.page = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockParentPage)(block, searchResult.recordMap, {\n            inclusive: true\n          }) || block;\n          if (!result2.page.id) {\n            return;\n          }\n          if ((_b = result2.highlight) == null ? void 0 : _b.text) {\n            result2.highlight.html = result2.highlight.text.replaceAll(/<gzknfouu>/gi, \"<b>\").replaceAll(/<\\/gzknfouu>/gi, \"</b>\");\n          }\n          return result2;\n        }).filter(Boolean);\n        const searchResultsMap = Object.fromEntries(\n          results.map((result2) => [result2.page.id, result2])\n        );\n        searchResult.results = Object.values(searchResultsMap);\n      }\n      if (this.state.query === query) {\n        this.setState({ isLoading: false, searchResult, searchError });\n      }\n    });\n    this._inputRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n  }\n  componentDidMount() {\n    this._search = (0, import_lodash.default)(this._searchImpl.bind(this), 1e3);\n    this._warmupSearch();\n  }\n  render() {\n    const { isOpen, onClose } = this.props;\n    const { isLoading, query, searchResult, searchError } = this.state;\n    const hasQuery = !!query.trim();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(NotionContextConsumer, { children: (ctx2) => {\n      const { components, defaultPageIcon, mapPageUrl } = ctx2;\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.Modal,\n        {\n          isOpen,\n          contentLabel: \"Search\",\n          className: \"notion-search\",\n          overlayClassName: \"notion-search-overlay\",\n          onRequestClose: onClose,\n          onAfterOpen: this._onAfterOpen,\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"quickFindMenu\", children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"searchBar\", children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"inlineIcon\", children: isLoading ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(LoadingIcon, { className: \"loadingIcon\" }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SearchIcon, {}) }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                \"input\",\n                {\n                  className: \"searchInput\",\n                  placeholder: \"Search\",\n                  value: query,\n                  ref: this._inputRef,\n                  onChange: this._onChangeQuery\n                }\n              ),\n              query && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                \"div\",\n                {\n                  role: \"button\",\n                  className: \"clearButton\",\n                  onClick: this._onClearQuery,\n                  children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ClearIcon, { className: \"clearIcon\" })\n                }\n              )\n            ] }),\n            hasQuery && searchResult && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: searchResult.results.length ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n              NotionContextProvider,\n              {\n                ...ctx2,\n                recordMap: searchResult.recordMap,\n                children: [\n                  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"resultsPane\", children: searchResult.results.map((result) => {\n                    var _a;\n                    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n                      components.PageLink,\n                      {\n                        className: cs(\"result\", \"notion-page-link\"),\n                        href: mapPageUrl(\n                          result.page.id,\n                          // TODO\n                          searchResult.recordMap\n                        ),\n                        children: [\n                          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                            PageTitle,\n                            {\n                              block: result.page,\n                              defaultIcon: defaultPageIcon\n                            }\n                          ),\n                          ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                            \"div\",\n                            {\n                              className: \"notion-search-result-highlight\",\n                              dangerouslySetInnerHTML: {\n                                __html: result.highlight.html\n                              }\n                            }\n                          )\n                        ]\n                      },\n                      result.id\n                    );\n                  }) }),\n                  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"footer\", { className: \"resultsFooter\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"resultsCount\", children: searchResult.total }),\n                    searchResult.total === 1 ? \" result\" : \" results\"\n                  ] }) })\n                ]\n              }\n            ) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"noResultsPane\", children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"noResults\", children: \"No results\" }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"noResultsDetail\", children: \"Try different search terms\" })\n            ] }) }),\n            hasQuery && !searchResult && searchError && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"noResultsPane\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"noResults\", children: \"Search error\" }) })\n          ] })\n        }\n      );\n    } });\n  }\n};\n\n// src/components/header.tsx\n\nfunction Header({\n  block\n}) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"header\", { className: \"notion-header\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-nav-header\", children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Breadcrumbs, { block }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Search, { block })\n  ] }) });\n}\nfunction Breadcrumbs({\n  block,\n  rootOnly = false\n}) {\n  const { recordMap, mapPageUrl, components } = useNotionContext();\n  const breadcrumbs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    const tempBreadcrumbs = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getPageBreadcrumbs)(recordMap, block.id);\n    if (rootOnly) {\n      return [tempBreadcrumbs == null ? void 0 : tempBreadcrumbs[0]].filter(Boolean);\n    }\n    return tempBreadcrumbs;\n  }, [recordMap, block.id, rootOnly]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"breadcrumbs\", children: breadcrumbs == null ? void 0 : breadcrumbs.map((breadcrumb, index) => {\n    if (!breadcrumb) {\n      return null;\n    }\n    const pageLinkProps = {};\n    const componentMap = {\n      pageLink: components.PageLink\n    };\n    if (breadcrumb.active) {\n      componentMap.pageLink = (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { ...props });\n    } else {\n      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n        componentMap.pageLink,\n        {\n          className: cs(\"breadcrumb\", breadcrumb.active && \"active\"),\n          ...pageLinkProps,\n          children: [\n            breadcrumb.icon && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PageIcon, { className: \"icon\", block: breadcrumb.block }),\n            breadcrumb.title && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"title\", children: breadcrumb.title })\n          ]\n        }\n      ),\n      index < breadcrumbs.length - 1 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"spacer\", children: \"/\" })\n    ] }, breadcrumb.pageId);\n  }) }, \"breadcrumbs\");\n}\nfunction Search({\n  block,\n  search,\n  title = \"Search\"\n}) {\n  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } = useNotionContext();\n  const onSearchNotion = search || searchNotion;\n  const [isSearchOpen, setIsSearchOpen] = react__WEBPACK_IMPORTED_MODULE_0__.useState(isShowingSearch);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    setIsSearchOpen(isShowingSearch);\n  }, [isShowingSearch]);\n  const onOpenSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsSearchOpen(true);\n  }, []);\n  const onCloseSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsSearchOpen(false);\n    if (onHideSearch) {\n      onHideSearch();\n    }\n  }, [onHideSearch]);\n  (0,react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_1__.useHotkeys)(\"cmd+p\", (event) => {\n    onOpenSearch();\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  (0,react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_1__.useHotkeys)(\"cmd+k\", (event) => {\n    onOpenSearch();\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  const hasSearch = !!onSearchNotion;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    hasSearch && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n      \"div\",\n      {\n        role: \"button\",\n        className: cs(\"breadcrumb\", \"button\", \"notion-search-button\"),\n        onClick: onOpenSearch,\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SearchIcon, { className: \"searchIcon\" }),\n          title && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"title\", children: title })\n        ]\n      }\n    ),\n    isSearchOpen && hasSearch && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      SearchDialog,\n      {\n        isOpen: isSearchOpen,\n        rootBlockId: rootPageId || (block == null ? void 0 : block.id),\n        onClose: onCloseSearch,\n        searchNotion: onSearchNotion\n      }\n    )\n  ] });\n}\n\n// src/components/lazy-image.tsx\n\n\n\n\nfunction LazyImage({\n  src,\n  alt,\n  className,\n  style,\n  zoomable = false,\n  priority = false,\n  height,\n  ...rest\n}) {\n  var _a, _b, _c;\n  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();\n  const zoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(zoom ? zoom.clone() : null);\n  const previewImage = previewImages ? (_c = (_a = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a[src]) != null ? _c : (_b = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b[(0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.normalizeUrl)(src)] : null;\n  const onLoad = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (e) => {\n      if (zoomable && (e.target.src || e.target.srcset)) {\n        if (zoomRef.current) {\n          ;\n          zoomRef.current.attach(e.target);\n        }\n      }\n    },\n    [zoomRef, zoomable]\n  );\n  const attachZoom = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (image) => {\n      if (zoomRef.current && image) {\n        ;\n        zoomRef.current.attach(image);\n      }\n    },\n    [zoomRef]\n  );\n  const attachZoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => zoomable ? attachZoom : void 0,\n    [zoomable, attachZoom]\n  );\n  if (previewImage) {\n    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;\n    if (components.Image) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.Image,\n        {\n          src,\n          alt,\n          style,\n          className,\n          width: previewImage.originalWidth,\n          height: previewImage.originalHeight,\n          blurDataURL: previewImage.dataURIBase64,\n          placeholder: \"blur\",\n          priority,\n          onLoad\n        }\n      );\n    }\n    return (\n      // @ts-expect-error LazyImage types are out-of-date.\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_lazy_images__WEBPACK_IMPORTED_MODULE_5__.LazyImageFull, { src, ...rest, experimentalDecode: true, children: ({ imageState, ref }) => {\n        const isLoaded = imageState === react_lazy_images__WEBPACK_IMPORTED_MODULE_5__.ImageState.LoadSuccess;\n        const wrapperStyle = {\n          width: \"100%\"\n        };\n        const imgStyle = {};\n        if (height) {\n          wrapperStyle.height = height;\n        } else {\n          imgStyle.position = \"absolute\";\n          wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;\n        }\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n          \"div\",\n          {\n            className: cs(\n              \"lazy-image-wrapper\",\n              isLoaded && \"lazy-image-loaded\",\n              className\n            ),\n            style: wrapperStyle,\n            children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                \"img\",\n                {\n                  className: \"lazy-image-preview\",\n                  src: previewImage.dataURIBase64,\n                  alt,\n                  ref,\n                  style,\n                  decoding: \"async\"\n                }\n              ),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                \"img\",\n                {\n                  className: \"lazy-image-real\",\n                  src,\n                  alt,\n                  ref: attachZoomRef,\n                  style: {\n                    ...style,\n                    ...imgStyle\n                  },\n                  width: previewImage.originalWidth,\n                  height: previewImage.originalHeight,\n                  decoding: \"async\",\n                  loading: \"lazy\"\n                }\n              )\n            ]\n          }\n        );\n      } })\n    );\n  } else {\n    if (components.Image && forceCustomImages) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.Image,\n        {\n          src,\n          alt,\n          className,\n          style,\n          width: null,\n          height: height || null,\n          priority,\n          onLoad\n        }\n      );\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      \"img\",\n      {\n        className,\n        style,\n        src,\n        alt,\n        ref: attachZoomRef,\n        loading: \"lazy\",\n        decoding: \"async\",\n        ...rest\n      }\n    );\n  }\n}\n\n// src/components/asset.tsx\n\n\n\n// src/components/lite-youtube-embed.tsx\n\n\nvar qs = (params) => {\n  return Object.keys(params).map(\n    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`\n  ).join(\"&\");\n};\nfunction LiteYouTubeEmbed({\n  id,\n  defaultPlay = false,\n  mute = false,\n  lazyImage = false,\n  iframeTitle = \"YouTube video\",\n  alt = \"Video preview\",\n  params = {},\n  adLinksPreconnect = true,\n  style,\n  className\n}) {\n  const muteParam = mute || defaultPlay ? \"1\" : \"0\";\n  const queryString = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => qs({ autoplay: \"1\", mute: muteParam, ...params }),\n    [muteParam, params]\n  );\n  const resolution = \"hqdefault\";\n  const posterUrl = `https://i.ytimg.com/vi/${id}/${resolution}.jpg`;\n  const ytUrl = \"https://www.youtube-nocookie.com\";\n  const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;\n  const [isPreconnected, setIsPreconnected] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const [iframeInitialized, setIframeInitialized] = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultPlay);\n  const [isIframeLoaded, setIsIframeLoaded] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const warmConnections = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (isPreconnected) return;\n    setIsPreconnected(true);\n  }, [isPreconnected]);\n  const onLoadIframe = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (iframeInitialized) return;\n    setIframeInitialized(true);\n  }, [iframeInitialized]);\n  const onIframeLoaded = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsIframeLoaded(true);\n  }, []);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"link\", { rel: \"preload\", href: posterUrl, as: \"image\" }),\n    isPreconnected && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"link\", { rel: \"preconnect\", href: ytUrl }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"link\", { rel: \"preconnect\", href: \"https://www.google.com\" })\n    ] }),\n    isPreconnected && adLinksPreconnect && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"link\", { rel: \"preconnect\", href: \"https://static.doubleclick.net\" }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"link\", { rel: \"preconnect\", href: \"https://googleads.g.doubleclick.net\" })\n    ] }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n      \"div\",\n      {\n        onClick: onLoadIframe,\n        onPointerOver: warmConnections,\n        className: cs(\n          \"notion-yt-lite\",\n          isIframeLoaded && \"notion-yt-loaded\",\n          iframeInitialized && \"notion-yt-initialized\",\n          className\n        ),\n        style,\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            \"img\",\n            {\n              src: posterUrl,\n              className: \"notion-yt-thumbnail\",\n              loading: lazyImage ? \"lazy\" : void 0,\n              alt\n            }\n          ),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-yt-playbtn\" }),\n          iframeInitialized && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            \"iframe\",\n            {\n              width: \"560\",\n              height: \"315\",\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true,\n              title: iframeTitle,\n              src: iframeSrc,\n              onLoad: onIframeLoaded\n            }\n          )\n        ]\n      }\n    )\n  ] });\n}\n\n// src/components/asset.tsx\n\nvar isServer = typeof window === \"undefined\";\nvar supportedAssetTypes = /* @__PURE__ */ new Set([\n  \"replit\",\n  \"video\",\n  \"image\",\n  \"embed\",\n  \"figma\",\n  \"typeform\",\n  \"excalidraw\",\n  \"maps\",\n  \"tweet\",\n  \"pdf\",\n  \"gist\",\n  \"codepen\",\n  \"drive\"\n]);\nfunction Asset({\n  block,\n  zoomable = true,\n  children\n}) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l;\n  const { recordMap, mapImageUrl, components } = useNotionContext();\n  if (!block || !supportedAssetTypes.has(block.type)) {\n    return null;\n  }\n  const style = {\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    flexDirection: \"column\"\n  };\n  const assetStyle = {};\n  if (block.format) {\n    const {\n      block_aspect_ratio,\n      block_height,\n      block_width,\n      block_full_width,\n      block_page_width,\n      block_preserve_scale\n    } = block.format;\n    if (block_full_width || block_page_width) {\n      if (block_full_width) {\n        style.width = \"100vw\";\n      } else {\n        style.width = \"100%\";\n      }\n      if (block.type === \"video\") {\n        if (block_height) {\n          style.height = block_height;\n        } else if (block_aspect_ratio) {\n          style.paddingBottom = `${block_aspect_ratio * 100}%`;\n        } else if (block_preserve_scale) {\n          style.objectFit = \"contain\";\n        }\n      } else if (block_aspect_ratio && block.type !== \"image\") {\n        style.paddingBottom = `${block_aspect_ratio * 100}%`;\n      } else if (block_height) {\n        style.height = block_height;\n      } else if (block_preserve_scale) {\n        if (block.type === \"image\") {\n          style.height = \"100%\";\n        } else {\n          style.paddingBottom = \"75%\";\n          style.minHeight = 100;\n        }\n      }\n    } else {\n      switch ((_a = block.format) == null ? void 0 : _a.block_alignment) {\n        case \"center\":\n          style.alignSelf = \"center\";\n          break;\n        case \"left\":\n          style.alignSelf = \"start\";\n          break;\n        case \"right\":\n          style.alignSelf = \"end\";\n          break;\n      }\n      if (block_width) {\n        style.width = block_width;\n      }\n      if (block_preserve_scale && block.type !== \"image\") {\n        style.paddingBottom = \"50%\";\n        style.minHeight = 100;\n      } else {\n        if (block_height && block.type !== \"image\") {\n          style.height = block_height;\n        }\n      }\n    }\n    if (block.type === \"image\") {\n      assetStyle.objectFit = \"cover\";\n    } else if (block_preserve_scale) {\n      assetStyle.objectFit = \"contain\";\n    }\n  }\n  let source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);\n  let content = null;\n  if (!source) {\n    return null;\n  }\n  if (block.type === \"tweet\") {\n    const src = source;\n    if (!src) return null;\n    const id = (_g = (_f = src.split(\"?\")) == null ? void 0 : _f[0]) == null ? void 0 : _g.split(\"/\").pop();\n    if (!id) return null;\n    content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      \"div\",\n      {\n        style: {\n          ...assetStyle,\n          maxWidth: 420,\n          width: \"100%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        },\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(components.Tweet, { id })\n      }\n    );\n  } else if (block.type === \"pdf\") {\n    style.overflow = \"auto\";\n    style.background = \"rgb(226, 226, 226)\";\n    style.display = \"block\";\n    if (!style.padding) {\n      style.padding = \"8px 16px\";\n    }\n    if (!isServer) {\n      content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(components.Pdf, { file: source });\n    }\n  } else if (block.type === \"embed\" || block.type === \"video\" || block.type === \"figma\" || block.type === \"typeform\" || block.type === \"gist\" || block.type === \"maps\" || block.type === \"excalidraw\" || block.type === \"codepen\" || block.type === \"drive\" || block.type === \"replit\") {\n    if (block.type === \"video\" && source && !source.includes(\"youtube\") && !source.includes(\"youtu.be\") && !source.includes(\"vimeo\") && !source.includes(\"wistia\") && !source.includes(\"loom\") && !source.includes(\"videoask\") && !source.includes(\"getcloudapp\") && !source.includes(\"tella\")) {\n      style.paddingBottom = void 0;\n      content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"video\",\n        {\n          playsInline: true,\n          controls: true,\n          preload: \"metadata\",\n          style: assetStyle,\n          src: source,\n          title: block.type\n        }\n      );\n    } else {\n      let src = ((_h = block.format) == null ? void 0 : _h.display_source) || source;\n      if (src) {\n        const youtubeVideoId = block.type === \"video\" ? getYoutubeId(src) : null;\n        if (youtubeVideoId) {\n          const params = getUrlParams(src);\n          content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            LiteYouTubeEmbed,\n            {\n              id: youtubeVideoId,\n              style: assetStyle,\n              className: \"notion-asset-object-fit\",\n              params\n            }\n          );\n        } else if (block.type === \"gist\") {\n          if (!src.endsWith(\".pibb\")) {\n            src = `${src}.pibb`;\n          }\n          assetStyle.width = \"100%\";\n          style.paddingBottom = \"50%\";\n          content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            \"iframe\",\n            {\n              style: assetStyle,\n              className: \"notion-asset-object-fit\",\n              src,\n              title: \"GitHub Gist\",\n              frameBorder: \"0\",\n              loading: \"lazy\",\n              scrolling: \"auto\"\n            }\n          );\n        } else {\n          src += block.type === \"typeform\" ? \"&disable-auto-focus=true\" : \"\";\n          content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            \"iframe\",\n            {\n              className: \"notion-asset-object-fit\",\n              style: assetStyle,\n              src,\n              title: `iframe ${block.type}`,\n              frameBorder: \"0\",\n              allowFullScreen: true,\n              loading: \"lazy\",\n              scrolling: \"auto\"\n            }\n          );\n        }\n      }\n    }\n  } else if (block.type === \"image\") {\n    if (source.includes(\"file.notion.so\")) {\n      source = (_k = (_j = (_i = block.properties) == null ? void 0 : _i.source) == null ? void 0 : _j[0]) == null ? void 0 : _k[0];\n    }\n    const src = mapImageUrl(source, block);\n    const caption = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getTextContent)((_l = block.properties) == null ? void 0 : _l.caption);\n    const alt = caption || \"notion image\";\n    content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      LazyImage,\n      {\n        src,\n        alt,\n        zoomable,\n        height: style.height,\n        style: assetStyle\n      }\n    );\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { style, children: [\n      content,\n      block.type === \"image\" && children\n    ] }),\n    block.type !== \"image\" && children\n  ] });\n}\n\n// src/components/asset-wrapper.tsx\n\nvar urlStyle = { width: \"100%\" };\nfunction AssetWrapper({\n  blockId,\n  block\n}) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const value = block;\n  const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();\n  let isURL = false;\n  if (block.type === \"image\") {\n    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];\n    if (caption) {\n      const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.parsePageId)(caption, { uuid: true });\n      const isPage = caption.charAt(0) === \"/\" && id;\n      if (isPage || isValidURL(caption)) {\n        isURL = true;\n      }\n    }\n  }\n  const figure = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    \"figure\",\n    {\n      className: cs(\n        \"notion-asset-wrapper\",\n        `notion-asset-wrapper-${block.type}`,\n        ((_d = value.format) == null ? void 0 : _d.block_full_width) && \"notion-asset-wrapper-full\",\n        blockId\n      ),\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Asset, { block: value, zoomable: zoom && !isURL, children: ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"figcaption\", { className: \"notion-asset-caption\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: value.properties.caption, block }) }) })\n    }\n  );\n  if (isURL) {\n    const caption = (_h = (_g = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption) == null ? void 0 : _g[0]) == null ? void 0 : _h[0];\n    const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.parsePageId)(caption, { uuid: true });\n    const isPage = (caption == null ? void 0 : caption.charAt(0)) === \"/\" && id;\n    const captionHostname = extractHostname(caption);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      components.PageLink,\n      {\n        style: urlStyle,\n        href: isPage ? mapPageUrl(id) : caption,\n        target: captionHostname && captionHostname !== rootDomain && !(caption == null ? void 0 : caption.startsWith(\"/\")) ? \"blank_\" : null,\n        children: figure\n      }\n    );\n  }\n  return figure;\n}\nfunction isValidURL(str) {\n  const pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*(\\\\?[;&a-z\\\\d%_.~+=-]*)?(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  );\n  return !!pattern.test(str);\n}\nfunction extractHostname(url) {\n  try {\n    const hostname = new URL(url).hostname;\n    return hostname;\n  } catch (e) {\n    return \"\";\n  }\n}\n\n// src/icons/check.tsx\n\nfunction SvgCheck(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z\" }) });\n}\nvar check_default = SvgCheck;\n\n// src/components/checkbox.tsx\n\nfunction Checkbox({\n  isChecked\n}) {\n  let content = null;\n  if (isChecked) {\n    content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-property-checkbox-checked\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(check_default, {}) });\n  } else {\n    content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-property-checkbox-unchecked\" });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-property notion-property-checkbox\", children: content });\n}\n\n// src/next.tsx\n\n\n\nvar wrapNextImage = (NextImage) => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.memo(function ReactNotionXNextImage({\n    src,\n    alt,\n    width,\n    height,\n    className,\n    fill,\n    ...rest\n  }) {\n    if (fill === \"undefined\") {\n      fill = !(width && height);\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      NextImage,\n      {\n        className,\n        src,\n        alt,\n        width: !fill && width && height ? width : void 0,\n        height: !fill && width && height ? height : void 0,\n        fill,\n        ...rest\n      }\n    );\n  }, react_fast_compare__WEBPACK_IMPORTED_MODULE_6__);\n};\nvar wrapNextLegacyImage = (NextLegacyImage) => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.memo(function ReactNotionXNextLegacyImage({\n    src,\n    alt,\n    width,\n    height,\n    className,\n    style,\n    layout,\n    ...rest\n  }) {\n    if (!layout) {\n      layout = width && height ? \"intrinsic\" : \"fill\";\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      NextLegacyImage,\n      {\n        className,\n        src,\n        alt,\n        width: layout === \"intrinsic\" && width,\n        height: layout === \"intrinsic\" && height,\n        objectFit: style == null ? void 0 : style.objectFit,\n        objectPosition: style == null ? void 0 : style.objectPosition,\n        layout,\n        ...rest\n      }\n    );\n  }, react_fast_compare__WEBPACK_IMPORTED_MODULE_6__);\n};\nfunction wrapNextLink(NextLink) {\n  return ({\n    href,\n    as,\n    passHref,\n    prefetch,\n    replace,\n    scroll,\n    shallow,\n    locale,\n    ...linkProps\n  }) => {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      NextLink,\n      {\n        href,\n        as,\n        passHref,\n        prefetch,\n        replace,\n        scroll,\n        shallow,\n        locale,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"a\", { ...linkProps })\n      }\n    );\n  };\n}\n\n// src/context.tsx\n\nfunction DefaultLink(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"a\", { target: \"_blank\", rel: \"noopener noreferrer\", ...props });\n}\nvar DefaultLinkMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(DefaultLink);\nfunction DefaultPageLink(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"a\", { ...props });\n}\nvar DefaultPageLinkMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(DefaultPageLink);\nfunction DefaultEmbed(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssetWrapper, { ...props });\n}\nvar DefaultHeader = Header;\nfunction dummyLink({ href, rel, target, title, ...rest }) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { ...rest });\n}\nvar dummyComponent = (name) => () => {\n  console.warn(\n    `Warning: using empty component \"${name}\" (you should override this in NotionRenderer.components)`\n  );\n  return null;\n};\nvar dummyOverrideFn = (_, defaultValueFn) => defaultValueFn();\nvar defaultComponents = {\n  Image: null,\n  // disable custom images by default\n  Link: DefaultLinkMemo,\n  PageLink: DefaultPageLinkMemo,\n  Checkbox,\n  Callout: void 0,\n  // use the built-in callout rendering by default\n  Code: dummyComponent(\"Code\"),\n  Equation: dummyComponent(\"Equation\"),\n  Collection: dummyComponent(\"Collection\"),\n  Property: void 0,\n  // use the built-in property rendering by default\n  propertyTextValue: dummyOverrideFn,\n  propertySelectValue: dummyOverrideFn,\n  propertyRelationValue: dummyOverrideFn,\n  propertyFormulaValue: dummyOverrideFn,\n  propertyTitleValue: dummyOverrideFn,\n  propertyPersonValue: dummyOverrideFn,\n  propertyFileValue: dummyOverrideFn,\n  propertyCheckboxValue: dummyOverrideFn,\n  propertyUrlValue: dummyOverrideFn,\n  propertyEmailValue: dummyOverrideFn,\n  propertyPhoneNumberValue: dummyOverrideFn,\n  propertyNumberValue: dummyOverrideFn,\n  propertyLastEditedTimeValue: dummyOverrideFn,\n  propertyCreatedTimeValue: dummyOverrideFn,\n  propertyDateValue: dummyOverrideFn,\n  propertyAutoIncrementIdValue: dummyOverrideFn,\n  Pdf: dummyComponent(\"Pdf\"),\n  Tweet: dummyComponent(\"Tweet\"),\n  Modal: dummyComponent(\"Modal\"),\n  Header: DefaultHeader,\n  Embed: DefaultEmbed\n};\nvar defaultNotionContext = {\n  recordMap: {\n    block: {},\n    collection: {},\n    collection_view: {},\n    collection_query: {},\n    notion_user: {},\n    signed_urls: {}\n  },\n  components: defaultComponents,\n  mapPageUrl: (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.defaultMapPageUrl)(),\n  mapImageUrl: notion_utils__WEBPACK_IMPORTED_MODULE_3__.defaultMapImageUrl,\n  searchNotion: void 0,\n  isShowingSearch: false,\n  onHideSearch: void 0,\n  fullPage: false,\n  darkMode: false,\n  previewImages: false,\n  forceCustomImages: false,\n  showCollectionViewDropdown: true,\n  linkTableTitleProperties: true,\n  isLinkCollectionToUrlProperty: false,\n  showTableOfContents: false,\n  minTableOfContentsItems: 3,\n  defaultPageIcon: null,\n  defaultPageCover: null,\n  defaultPageCoverPosition: 0.5,\n  zoom: null\n};\nvar ctx = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultNotionContext);\nfunction NotionContextProvider({\n  components: themeComponents = {},\n  children,\n  mapPageUrl,\n  mapImageUrl,\n  rootPageId,\n  ...rest\n}) {\n  for (const key of Object.keys(rest)) {\n    if (rest[key] === void 0) {\n      delete rest[key];\n    }\n  }\n  const wrappedThemeComponents = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => ({\n      ...themeComponents\n    }),\n    [themeComponents]\n  );\n  if (wrappedThemeComponents.nextImage && wrappedThemeComponents.nextLegacyImage) {\n    console.warn(\n      \"You should not pass both nextImage and nextLegacyImage. Only nextImage component will be used.\"\n    );\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage);\n  } else if (wrappedThemeComponents.nextImage) {\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage);\n  } else if (wrappedThemeComponents.nextLegacyImage) {\n    wrappedThemeComponents.Image = wrapNextLegacyImage(\n      themeComponents.nextLegacyImage\n    );\n  }\n  if (wrappedThemeComponents.nextLink) {\n    wrappedThemeComponents.nextLink = wrapNextLink(themeComponents.nextLink);\n  }\n  for (const key of Object.keys(wrappedThemeComponents)) {\n    if (!wrappedThemeComponents[key]) {\n      delete wrappedThemeComponents[key];\n    }\n  }\n  const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => ({\n      ...defaultNotionContext,\n      ...rest,\n      rootPageId,\n      mapPageUrl: mapPageUrl != null ? mapPageUrl : (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.defaultMapPageUrl)(rootPageId),\n      mapImageUrl: mapImageUrl != null ? mapImageUrl : notion_utils__WEBPACK_IMPORTED_MODULE_3__.defaultMapImageUrl,\n      components: { ...defaultComponents, ...wrappedThemeComponents }\n    }),\n    [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ctx.Provider, { value, children });\n}\nvar NotionContextConsumer = ctx.Consumer;\nvar useNotionContext = () => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(ctx);\n};\n\n// src/icons/default-page-icon.tsx\n\n\nfunction DefaultPageIcon(props) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { className, ...rest, viewBox: \"0 0 30 30\", width: \"16\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z\" }) });\n}\n\n// src/components/page-icon.tsx\n\nvar isIconBlock = (value) => {\n  return value.type === \"page\" || value.type === \"callout\" || value.type === \"collection_view\" || value.type === \"collection_view_page\";\n};\nfunction PageIconImpl({\n  block,\n  className,\n  inline = true,\n  hideDefaultIcon = false,\n  defaultIcon\n}) {\n  var _a;\n  const { mapImageUrl, recordMap, darkMode } = useNotionContext();\n  let isImage = false;\n  let content = null;\n  if (isIconBlock(block)) {\n    const icon = ((_a = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockIcon)(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;\n    const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockTitle)(block, recordMap);\n    if (icon && (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.isUrl)(icon)) {\n      const url = mapImageUrl(icon, block);\n      isImage = true;\n      content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        LazyImage,\n        {\n          src: url,\n          alt: title || \"page icon\",\n          className: cs(className, \"notion-page-icon\")\n        }\n      );\n    } else if (icon && icon.startsWith(\"/icons/\")) {\n      const url = \"https://www.notion.so\" + icon + \"?mode=\" + (darkMode ? \"dark\" : \"light\");\n      content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        LazyImage,\n        {\n          src: url,\n          alt: title || \"page icon\",\n          className: cs(className, \"notion-page-icon\")\n        }\n      );\n    } else if (!icon) {\n      if (!hideDefaultIcon) {\n        isImage = true;\n        content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          DefaultPageIcon,\n          {\n            className: cs(className, \"notion-page-icon\"),\n            alt: title || \"page icon\"\n          }\n        );\n      }\n    } else {\n      isImage = false;\n      content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"span\",\n        {\n          className: cs(className, \"notion-page-icon\"),\n          role: \"img\",\n          \"aria-label\": icon,\n          children: icon\n        }\n      );\n    }\n  }\n  if (!content) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    \"div\",\n    {\n      className: cs(\n        inline ? \"notion-page-icon-inline\" : \"notion-page-icon-hero\",\n        isImage ? \"notion-page-icon-image\" : \"notion-page-icon-span\"\n      ),\n      children: content\n    }\n  );\n}\nvar PageIcon = react__WEBPACK_IMPORTED_MODULE_0__.memo(PageIconImpl);\n\n// src/icons/collection-view-icon.tsx\n\n\n// src/icons/collection-view-board.tsx\n\nfunction SvgCollectionViewBoard(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h2v6H3V3zm3 0h2v8H6V3zm3 0h2v4H9V3z\" }) });\n}\nvar collection_view_board_default = SvgCollectionViewBoard;\n\n// src/icons/collection-view-calendar.tsx\n\nfunction SvgCollectionViewCalendar(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M2.564 4.004c-.586 0-.71.024-.833.09a.319.319 0 00-.141.14c-.066.124-.09.247-.09.834v6.368c0 .586.024.71.09.833a.319.319 0 00.14.141c.124.066.248.09.834.09h8.872c.586 0 .71-.024.833-.09a.319.319 0 00.141-.14c.066-.124.09-.248.09-.834V5.068c0-.587-.024-.71-.09-.834a.319.319 0 00-.14-.14c-.124-.066-.248-.09-.834-.09H2.564zm0-4.004h8.872c.892 0 1.215.093 1.54.267.327.174.583.43.757.756.174.326.267.65.267 1.54v8.873c0 .892-.093 1.215-.267 1.54-.174.327-.43.583-.756.757-.326.174-.65.267-1.54.267H2.563c-.892 0-1.215-.093-1.54-.267a1.817 1.817 0 01-.757-.756C.093 12.65 0 12.327 0 11.437V2.563c0-.892.093-1.215.267-1.54.174-.327.43-.583.756-.757C1.35.093 1.673 0 2.563 0zm4.044 7.88c.179.11.318.256.418.436.1.18.148.394.148.64 0 .304-.08.597-.238.876-.16.28-.392.498-.692.65-.299.15-.685.224-1.16.224-.46 0-.827-.055-1.1-.166a1.687 1.687 0 01-.68-.492 2.227 2.227 0 01-.404-.802l.083-.127 1.37-.182.112.08c.05.258.126.431.221.52a.507.507 0 00.364.133.495.495 0 00.386-.169c.105-.115.158-.27.158-.472 0-.205-.051-.358-.15-.463a.527.527 0 00-.407-.157 1.65 1.65 0 00-.417.077l-.127-.104.07-.98.115-.091c.072.01.127.015.164.015.154 0 .28-.047.38-.144.1-.096.15-.205.15-.335a.388.388 0 00-.106-.29c-.07-.07-.168-.105-.3-.105a.444.444 0 00-.324.118c-.083.08-.143.232-.176.457l-.117.084-1.297-.233-.079-.123c.114-.435.334-.772.66-1.006.326-.234.78-.349 1.36-.349.666 0 1.153.126 1.462.384.31.259.467.589.467.982 0 .233-.064.446-.192.636a1.43 1.43 0 01-.37.365c.1.034.182.072.248.113zm1.747-.145a5.186 5.186 0 01-.806.31l-.129-.097V6.824l.07-.096c.455-.147.807-.322 1.055-.524.246-.202.439-.45.579-.747l.09-.057h1.135l.1.1v5.021l-.1.1H8.961l-.1-.1V7.428a4.053 4.053 0 01-.506.307z\" }) });\n}\nvar collection_view_calendar_default = SvgCollectionViewCalendar;\n\n// src/icons/collection-view-gallery.tsx\n\nfunction SvgCollectionViewGallery(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h3.5v3.5H3V3zm4.5 0H11v3.5H7.5V3zM3 7.5h3.5V11H3V7.5zm4.5 0H11V11H7.5V7.5z\" }) });\n}\nvar collection_view_gallery_default = SvgCollectionViewGallery;\n\n// src/icons/collection-view-list.tsx\n\nfunction SvgCollectionViewList(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h6v1.5H3V3zm0 2.5h8V7H3V5.5zM3 8h4v1.5H3V8z\" }) });\n}\nvar collection_view_list_default = SvgCollectionViewList;\n\n// src/icons/collection-view-table.tsx\n\nfunction SvgCollectionViewTable(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3.75 5.67v2.66h6.75V5.67H5.75zm0 4.17v2.66h5.75a1 1 0 001-1V9.84H5.75zM1.5 5.67v2.66h2.75V5.67H1.5zm0 4.17v1.66a1 1 0 001 1h1.75V9.84H1.5zm1-8.34a1 1 0 00-1 1v1.66h2.75V1.5H2.5zm3.25 0v2.66h6.75V2.5a1 1 0 00-1-1H5.75z\" }) });\n}\nvar collection_view_table_default = SvgCollectionViewTable;\n\n// src/icons/collection-view-icon.tsx\nvar iconMap = {\n  table: collection_view_table_default,\n  board: collection_view_board_default,\n  gallery: collection_view_gallery_default,\n  list: collection_view_list_default,\n  calendar: collection_view_calendar_default\n};\nfunction CollectionViewIcon({ type, ...rest }) {\n  const icon = iconMap[type];\n  if (!icon) {\n    return null;\n  }\n  return icon(rest);\n}\n\n// src/third-party/collection-row.tsx\n\n\n// src/third-party/collection-column-title.tsx\n\n\n// src/icons/property-icon.tsx\n\n\n// src/icons/type-auto-increment-id.tsx\n\nfunction SvgTypeAutoIncrementId(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 16 16\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M12.252 7.9209C13.7217 7.9209 14.7266 6.93652 14.7266 5.50781C14.7266 4.0791 13.7217 3.10156 12.252 3.10156C10.8232 3.10156 9.8457 4.0791 9.8457 5.50781C9.8457 6.93652 10.8301 7.9209 12.252 7.9209ZM2.00488 13.1367C2.45605 13.1367 2.72949 12.8496 2.72949 12.3848V5.83594L7.35059 12.5967C7.6377 12.9932 7.86328 13.1367 8.20508 13.1367C8.69043 13.1367 8.96387 12.8359 8.96387 12.3232V3.8877C8.96387 3.42285 8.69043 3.12891 8.23242 3.12891C7.78809 3.12891 7.50781 3.41602 7.50781 3.8877V10.4229L2.89355 3.66895C2.60645 3.25879 2.40137 3.12891 2.03906 3.12891C1.56738 3.12891 1.27344 3.4502 1.27344 3.94238V12.3848C1.27344 12.8496 1.55371 13.1367 2.00488 13.1367ZM12.252 6.84766C11.5615 6.84766 11.0898 6.30762 11.0898 5.50781C11.0898 4.70801 11.5615 4.16797 12.252 4.16797C12.9902 4.16797 13.4756 4.70801 13.4756 5.50781C13.4756 6.30762 12.9834 6.84766 12.252 6.84766ZM10.625 9.77344H13.9541C14.3506 9.77344 14.624 9.54102 14.624 9.14453C14.624 8.74805 14.3506 8.50195 13.9541 8.50195H10.625C10.2285 8.50195 9.96191 8.74805 9.96191 9.14453C9.96191 9.54102 10.2285 9.77344 10.625 9.77344Z\" }) });\n}\nvar type_auto_increment_id_default = SvgTypeAutoIncrementId;\n\n// src/icons/type-checkbox.tsx\n\nfunction SvgTypeCheckbox(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M0 3a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H3a3 3 0 01-3-3V3zm3-1.5A1.5 1.5 0 001.5 3v8A1.5 1.5 0 003 12.5h8a1.5 1.5 0 001.5-1.5V3A1.5 1.5 0 0011 1.5H3zm-.167 5.316l.566-.542.177-.17.347-.332.346.334.176.17 1.139 1.098 3.699-3.563.177-.17.347-.335.347.334.177.17.563.543.177.171.372.36-.372.36-.177.17-4.786 4.615-.177.171-.347.334-.347-.334-.177-.17-2.23-2.15-.177-.172-.375-.361.376-.36.179-.17z\" }) });\n}\nvar type_checkbox_default = SvgTypeCheckbox;\n\n// src/icons/type-date.tsx\n\nfunction SvgTypeDate(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M10.889 5.5H3.11v1.556h7.778V5.5zm1.555-4.444h-.777V0H10.11v1.056H3.89V0H2.333v1.056h-.777c-.864 0-1.548.7-1.548 1.555L0 12.5c0 .856.692 1.5 1.556 1.5h10.888C13.3 14 14 13.356 14 12.5V2.611c0-.855-.7-1.555-1.556-1.555zm0 11.444H1.556V3.944h10.888V12.5zM8.556 8.611H3.11v1.556h5.445V8.61z\" }) });\n}\nvar type_date_default = SvgTypeDate;\n\n// src/icons/type-email.tsx\n\nfunction SvgTypeEmail(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M14 6.225c0 .822-.133 1.574-.4 2.256-.267.683-.644 1.218-1.13 1.606-.488.388-.946.6-1.494.6-.429 0-.808-.102-1.139-.305a1.753 1.753 0 01-.713-.8c-.613.736-1.563 1.104-2.531 1.104-1.027 0-1.835-.304-2.427-.912-.591-.608-.887-1.44-.887-2.496 0-1.204.389-2.175 1.166-2.911.776-.736 1.791-1.105 3.044-1.105.498 0 2.032.212 2.252.268.51.13.86.593.835 1.112l-.156 3.287c0 .794.22 1.19.66 1.19.372 0 .668-.267.888-.8.22-.534.33-1.232.33-2.094 0-.919-.194-1.731-.582-2.436a3.924 3.924 0 00-1.64-1.614c-.704-.371-1.509-.557-2.413-.557-1.172 0-2.19.237-3.053.711a4.785 4.785 0 00-1.988 2.05c-.46.894-.691 1.926-.691 3.096 0 1.576.428 2.784 1.283 3.627.855.841 2.094 1.262 3.718 1.262.615 0 1.29-.067 2.027-.2.225-.042.518-.108.877-.2a.863.863 0 011.025.527.76.76 0 01-.502.993c-1.052.316-2.17.488-3.357.516-2.204 0-3.922-.57-5.154-1.713C.616 11.146 0 9.56 0 7.527c0-1.41.315-2.69.944-3.84A6.792 6.792 0 013.63.98C4.794.327 6.131 0 7.645 0c1.276 0 2.514.29 3.418.77.905.481 1.574 1.228 2.12 2.176.544.947.817 2.04.817 3.28zm-8.615 1.01c0 1.208.488 1.811 1.466 1.811.511 0 .9-.181 1.168-.545.267-.363.429-.954.486-1.772l.11-1.896a4.638 4.638 0 00-.98-.095c-.71 0-1.263.224-1.658.67-.395.446-.592 1.055-.592 1.828z\" }) });\n}\nvar type_email_default = SvgTypeEmail;\n\n// src/icons/type-file.tsx\n\nfunction SvgTypeFile(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M5.946 14a4.975 4.975 0 01-3.497-1.415A4.731 4.731 0 011 9.174c0-1.288.515-2.5 1.449-3.41L7.456.986c1.345-1.313 3.722-1.318 5.08.007a3.453 3.453 0 010 4.961L8.03 10.241c-.867.847-2.293.848-3.17-.006a2.158 2.158 0 010-3.102l1.744-1.701 1.272 1.24-1.744 1.701a.43.43 0 000 .621c.23.223.405.223.636 0l4.503-4.288a1.723 1.723 0 00-.007-2.473c-.68-.663-1.864-.663-2.543 0L3.713 7.011a3.006 3.006 0 00-.915 2.163c0 .82.328 1.591.922 2.17 1.19 1.162 3.262 1.162 4.451 0l2.248-2.192 1.272 1.24-2.248 2.193A4.978 4.978 0 015.946 14z\" }) });\n}\nvar type_file_default = SvgTypeFile;\n\n// src/icons/type-formula.tsx\n\nfunction SvgTypeFormula(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M7.779 7.063l-3.157 4.224a.49.49 0 00-.072.218.35.35 0 00.346.357h6.242c.476 0 .862.398.862.889v.36c0 .491-.386.889-.862.889H1.862A.876.876 0 011 13.111v-.425a.82.82 0 01.177-.54L4.393 7.8a1.367 1.367 0 00-.006-1.625L1.4 2.194a.822.822 0 01-.18-.544V.89C1.22.398 1.604 0 2.08 0h8.838c.476 0 .861.398.861.889v.36c0 .491-.385.89-.86.89H5.135c-.19 0-.345.159-.345.356a.489.489 0 00.07.216l2.92 3.975c.049.062.063.107.06.188a.246.246 0 01-.062.189z\" }) });\n}\nvar type_formula_default = SvgTypeFormula;\n\n// src/icons/type-multi-select.tsx\n\nfunction SvgTypeMultiSelect(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M4 3a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zM2 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2z\" }) });\n}\nvar type_multi_select_default = SvgTypeMultiSelect;\n\n// src/icons/type-number.tsx\n\nfunction SvgTypeNumber(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M4.462 0c-.595 0-1.078.482-1.078 1.078v2.306H1.078a1.078 1.078 0 100 2.155h2.306v2.922H1.078a1.078 1.078 0 100 2.155h2.306v2.306a1.078 1.078 0 002.155 0v-2.306H8.46v2.306a1.078 1.078 0 002.156 0v-2.306h2.306a1.078 1.078 0 100-2.155h-2.306V5.539h2.306a1.078 1.078 0 100-2.155h-2.306V1.078a1.078 1.078 0 00-2.156 0v2.306H5.54V1.078C5.54.482 5.056 0 4.461 0zm1.077 8.46V5.54H8.46v2.92H5.54z\" }) });\n}\nvar type_number_default = SvgTypeNumber;\n\n// src/icons/type-person.tsx\n\nfunction SvgTypePerson(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M9.625 10.847C8.912 10.289 8.121 9.926 7 9.26v-.54a3.33 3.33 0 00.538-.888c.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046 0-.711-.438-2.625-2.625-2.625-2.188 0-2.625 1.915-2.625 2.625 0 .017.003.03.003.046-.238.156-.44.347-.44.829 0 .334.366.731.774.833.146.343.326.643.538.886v.541c-1.12.665-1.912 1.028-2.625 1.587C.041 11.498 0 12.469 0 14h10.5c0-1.531-.041-2.502-.875-3.153zm3.5-3.5c-.713-.558-1.504-.921-2.625-1.587v-.54c.212-.244.392-.544.538-.888.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046C11.375 1.914 10.937 0 8.75 0 6.562 0 6.125 1.915 6.125 2.625c0 .017.003.03.003.046-.016.012-.03.025-.047.036 1.751.359 2.516 1.841 2.647 3.04.248.262.46.65.46 1.253 0 .603-.417 1.203-1.004 1.515-.057.109-.117.214-.181.315l.437.245c.64.357 1.194.666 1.724 1.081.138.108.256.224.365.343H14c0-1.53-.041-2.5-.875-3.153z\" }) });\n}\nvar type_person_default = SvgTypePerson;\n\n// src/icons/type-person-2.tsx\n\nfunction SvgTypePerson2(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M13.125 10.035c-.571-.55-2.324-1.504-3.5-2.16v-.834c.224-.322.42-.671.566-1.055.394-.242.746-.702.746-1.173 0-.458-.005-.87-.47-1.208C10.305 1.558 9.436 0 7 0S3.695 1.558 3.533 3.605c-.465.338-.47.75-.47 1.208 0 .471.352.93.746 1.173.146.384.342.733.566 1.055v.834c-1.176.656-2.929 1.61-3.5 2.16C.165 10.72 0 11.812 0 14h14c0-2.188-.164-3.281-.875-3.965z\" }) });\n}\nvar type_person_2_default = SvgTypePerson2;\n\n// src/icons/type-phone-number.tsx\n\nfunction SvgTypePhoneNumber(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M2.207.013a.487.487 0 00-.29.02C.87.438.213 1.93.058 2.955c-.484 3.33 2.15 6.215 4.57 8.113 2.149 1.684 6.273 4.453 8.713 1.781.31-.329.678-.813.658-1.297-.058-.813-.813-1.394-1.394-1.84-.445-.329-1.375-1.239-1.956-1.22-.522.02-.851.562-1.18.891l-.582.581c-.096.097-1.336-.716-1.471-.813a9.881 9.881 0 01-1.414-1.104A9.13 9.13 0 014.86 6.732c-.097-.136-.89-1.317-.813-1.414 0 0 .677-.736.871-1.026.407-.62.717-1.104.252-1.84-.174-.27-.387-.484-.62-.716-.406-.387-.813-.794-1.278-1.123-.251-.194-.677-.542-1.065-.6z\" }) });\n}\nvar type_phone_number_default = SvgTypePhoneNumber;\n\n// src/icons/type-relation.tsx\n\nfunction SvgTypeRelation(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M4.5 1v2h5.086L1 11.586 2.414 13 11 4.414V9.5h2V1z\" }) });\n}\nvar type_relation_default = SvgTypeRelation;\n\n// src/icons/type-select.tsx\n\nfunction SvgTypeSelect(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M7 13A6 6 0 107 1a6 6 0 000 12zM3.751 5.323A.2.2 0 013.909 5h6.182a.2.2 0 01.158.323L7.158 9.297a.2.2 0 01-.316 0L3.751 5.323z\" }) });\n}\nvar type_select_default = SvgTypeSelect;\n\n// src/icons/type-status.tsx\n\nfunction SvgTypeStatus(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 16 16\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M8.75488 1.02344C8.75488 0.613281 8.41309 0.264648 8.00293 0.264648C7.59277 0.264648 7.25098 0.613281 7.25098 1.02344V3.11523C7.25098 3.51855 7.59277 3.86719 8.00293 3.86719C8.41309 3.86719 8.75488 3.51855 8.75488 3.11523V1.02344ZM3.91504 5.0293C4.20215 5.31641 4.69434 5.32324 4.97461 5.03613C5.26855 4.74902 5.26855 4.25684 4.98145 3.96973L3.53906 2.52051C3.25195 2.2334 2.7666 2.21973 2.47949 2.50684C2.19238 2.79395 2.18555 3.28613 2.47266 3.57324L3.91504 5.0293ZM10.9629 4.01758C10.6826 4.30469 10.6826 4.79688 10.9697 5.08398C11.2568 5.37109 11.749 5.36426 12.0361 5.07715L13.4854 3.62793C13.7725 3.34082 13.7725 2.84863 13.4785 2.55469C13.1982 2.27441 12.7061 2.27441 12.4189 2.56152L10.9629 4.01758ZM15.0234 8.78906C15.4336 8.78906 15.7822 8.44727 15.7822 8.03711C15.7822 7.62695 15.4336 7.28516 15.0234 7.28516H12.9385C12.5283 7.28516 12.1797 7.62695 12.1797 8.03711C12.1797 8.44727 12.5283 8.78906 12.9385 8.78906H15.0234ZM0.975586 7.28516C0.56543 7.28516 0.223633 7.62695 0.223633 8.03711C0.223633 8.44727 0.56543 8.78906 0.975586 8.78906H3.07422C3.48438 8.78906 3.83301 8.44727 3.83301 8.03711C3.83301 7.62695 3.48438 7.28516 3.07422 7.28516H0.975586ZM12.0361 10.9902C11.749 10.71 11.2568 10.71 10.9629 10.9971C10.6826 11.2842 10.6826 11.7764 10.9697 12.0635L12.4258 13.5127C12.7129 13.7998 13.2051 13.793 13.4922 13.5059C13.7793 13.2256 13.7725 12.7266 13.4854 12.4395L12.0361 10.9902ZM2.52051 12.4395C2.22656 12.7266 2.22656 13.2188 2.50684 13.5059C2.79395 13.793 3.28613 13.7998 3.57324 13.5127L5.02246 12.0703C5.31641 11.7832 5.31641 11.291 5.03613 11.0039C4.74902 10.7168 4.25684 10.71 3.96973 10.9971L2.52051 12.4395ZM8.75488 12.9658C8.75488 12.5557 8.41309 12.207 8.00293 12.207C7.59277 12.207 7.25098 12.5557 7.25098 12.9658V15.0576C7.25098 15.4609 7.59277 15.8096 8.00293 15.8096C8.41309 15.8096 8.75488 15.4609 8.75488 15.0576V12.9658Z\" }) });\n}\nvar type_status_default = SvgTypeStatus;\n\n// src/icons/type-text.tsx\n\nfunction SvgTypeText(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M7 4.568a.5.5 0 00-.5-.5h-6a.5.5 0 00-.5.5v1.046a.5.5 0 00.5.5h6a.5.5 0 00.5-.5V4.568zM.5 1a.5.5 0 00-.5.5v1.045a.5.5 0 00.5.5h12a.5.5 0 00.5-.5V1.5a.5.5 0 00-.5-.5H.5zM0 8.682a.5.5 0 00.5.5h11a.5.5 0 00.5-.5V7.636a.5.5 0 00-.5-.5H.5a.5.5 0 00-.5.5v1.046zm0 3.068a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-1.045a.5.5 0 00-.5-.5h-9a.5.5 0 00-.5.5v1.045z\" }) });\n}\nvar type_text_default = SvgTypeText;\n\n// src/icons/type-timestamp.tsx\n\nfunction SvgTypeTimestamp(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M6.986 14c-1.79 0-3.582-.69-4.944-2.068-2.723-2.72-2.723-7.172 0-9.892 2.725-2.72 7.182-2.72 9.906 0A6.972 6.972 0 0114 6.996c0 1.88-.728 3.633-2.052 4.955A7.058 7.058 0 016.986 14zm3.285-6.99v1.645H5.526v-5.47h1.841v3.63h2.904v.194zm1.89-.014c0-1.379-.542-2.67-1.522-3.648-2.006-2.005-5.287-2.007-7.297-.009l-.009.009a5.168 5.168 0 000 7.295c2.01 2.007 5.297 2.007 7.306 0a5.119 5.119 0 001.521-3.647z\" }) });\n}\nvar type_timestamp_default = SvgTypeTimestamp;\n\n// src/icons/type-title.tsx\n\nfunction SvgTypeTitle(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M7.74 8.697a.81.81 0 01.073.308.894.894 0 01-.9.888.867.867 0 01-.825-.592l-.333-.961H2.058l-.333.961a.882.882 0 01-.838.592A.884.884 0 010 9.005c0-.11.025-.222.062-.308l2.403-6.211c.222-.58.776-.986 1.442-.986.653 0 1.22.407 1.442.986l2.39 6.211zM2.6 6.824h2.613L3.907 3.102 2.6 6.824zm8.8-3.118c1.355 0 2.6.542 2.6 2.255V9.08a.8.8 0 01-.789.814.797.797 0 01-.788-.703c-.395.468-1.097.764-1.874.764-.949 0-2.07-.64-2.07-1.972 0-1.392 1.121-1.897 2.07-1.897.789 0 1.491.246 1.886.727v-.826c0-.604-.518-.998-1.306-.998-.469 0-.888.123-1.32.394a.64.64 0 01-.307.086.602.602 0 01-.592-.604c0-.221.123-.419.284-.517a3.963 3.963 0 012.206-.641zm-.222 5.188c.505 0 .998-.172 1.257-.517v-.74c-.259-.345-.752-.517-1.257-.517-.616 0-1.122.332-1.122.9 0 .554.506.874 1.122.874zM.656 11.125h12.688a.656.656 0 110 1.313H.656a.656.656 0 110-1.313z\" }) });\n}\nvar type_title_default = SvgTypeTitle;\n\n// src/icons/type-url.tsx\n\nfunction SvgTypeUrl(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M3.733 3.867h3.734c1.03 0 1.866.837 1.866 1.866 0 1.03-.837 1.867-1.866 1.867h-.934a.934.934 0 000 1.867h.934a3.734 3.734 0 000-7.467H3.733A3.73 3.73 0 001.89 8.977a4.637 4.637 0 01.314-2.18 1.854 1.854 0 01-.336-1.064c0-1.03.837-1.866 1.866-1.866zm8.377 1.422a4.6 4.6 0 01-.316 2.176c.212.303.34.67.34 1.068 0 1.03-.838 1.867-1.867 1.867H6.533a1.869 1.869 0 01-1.866-1.867c0-1.03.837-1.866 1.866-1.866h.934a.934.934 0 000-1.867h-.934a3.733 3.733 0 000 7.467h3.734a3.73 3.73 0 001.843-6.978z\" }) });\n}\nvar type_url_default = SvgTypeUrl;\n\n// src/icons/property-icon.tsx\nvar iconMap2 = {\n  title: type_title_default,\n  text: type_text_default,\n  number: type_number_default,\n  select: type_select_default,\n  status: type_status_default,\n  multi_select: type_multi_select_default,\n  date: type_date_default,\n  person: type_person_default,\n  file: type_file_default,\n  checkbox: type_checkbox_default,\n  url: type_url_default,\n  email: type_email_default,\n  phone_number: type_phone_number_default,\n  formula: type_formula_default,\n  relation: type_relation_default,\n  created_time: type_timestamp_default,\n  last_edited_time: type_timestamp_default,\n  created_by: type_person_2_default,\n  last_edited_by: type_person_2_default,\n  auto_increment_id: type_auto_increment_id_default\n};\nfunction PropertyIcon({ type, ...rest }) {\n  const icon = iconMap2[type];\n  if (!icon) return null;\n  return icon(rest);\n}\n\n// src/third-party/collection-column-title.tsx\n\nfunction CollectionColumnTitle({\n  schema\n}) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-collection-column-title\", children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      PropertyIcon,\n      {\n        className: \"notion-collection-column-title-icon\",\n        type: schema.type\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-column-title-body\", children: schema.name })\n  ] });\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatDistance.js\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\"\n  },\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\"\n  },\n  halfAMinute: \"half a minute\",\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\"\n  },\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\"\n  },\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\"\n  },\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\"\n  },\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\"\n  },\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\"\n  },\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\"\n  },\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\"\n  },\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\"\n  },\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\"\n  },\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\"\n  },\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\"\n  },\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\"\n  }\n};\nvar formatDistance = (token, count, options) => {\n  let result;\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n  if (options == null ? void 0 : options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n  return result;\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildFormatLongFn.js\nfunction buildFormatLongFn(args) {\n  return (options = {}) => {\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format2 = args.formats[width] || args.formats[args.defaultWidth];\n    return format2;\n  };\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatLong.js\nvar dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\"\n};\nvar timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\"\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\"\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\"\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\"\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\"\n  })\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatRelative.js\nvar formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\"\n};\nvar formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildLocalizeFn.js\nfunction buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = (options == null ? void 0 : options.context) ? String(options.context) : \"standalone\";\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = (options == null ? void 0 : options.width) ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = (options == null ? void 0 : options.width) ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n    return valuesArray[index];\n  };\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/localize.js\nvar eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"]\n};\nvar quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"]\n};\nvar monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ]\n};\nvar dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ]\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  }\n};\nvar ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\nvar localize = {\n  ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\"\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\"\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\"\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\"\n  })\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchFn.js\nfunction buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n    const matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n    const parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    const key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString)) : (\n      // [TODO] -- I challenge you to fix the type\n      findKey(parsePatterns, (pattern) => pattern.test(matchedString))\n    );\n    let value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? (\n      // [TODO] -- I challenge you to fix the type\n      options.valueCallback(value)\n    ) : value;\n    const rest = string.slice(matchedString.length);\n    return { value, rest };\n  };\n}\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return void 0;\n}\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return void 0;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js\nfunction buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    const rest = string.slice(matchedString.length);\n    return { value, rest };\n  };\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/match.js\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i\n  ],\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i\n  ]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10)\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\"\n  })\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US.js\nvar enUS = {\n  code: \"en-US\",\n  formatDistance,\n  formatLong,\n  formatRelative,\n  localize,\n  match,\n  options: {\n    weekStartsOn: 0,\n    firstWeekContainsDate: 1\n  }\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/defaultOptions.js\nvar defaultOptions = {};\nfunction getDefaultOptions() {\n  return defaultOptions;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constants.js\nvar daysInYear = 365.2425;\nvar maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;\nvar minTime = -maxTime;\nvar millisecondsInWeek = 6048e5;\nvar millisecondsInDay = 864e5;\nvar millisecondsInMinute = 6e4;\nvar millisecondsInHour = 36e5;\nvar secondsInHour = 3600;\nvar secondsInDay = secondsInHour * 24;\nvar secondsInWeek = secondsInDay * 7;\nvar secondsInYear = secondsInDay * daysInYear;\nvar secondsInMonth = secondsInYear / 12;\nvar secondsInQuarter = secondsInMonth * 3;\nvar constructFromSymbol = Symbol.for(\"constructDateFrom\");\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constructFrom.js\nfunction constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n  if (date instanceof Date) return new date.constructor(value);\n  return new Date(value);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/toDate.js\nfunction toDate(argument, context) {\n  return constructFrom(context || argument, argument);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js\nfunction getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds()\n    )\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/normalizeDates.js\nfunction normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\")\n  );\n  return dates.map(normalize);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfDay.js\nfunction startOfDay(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarDays.js\nfunction differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n  const laterTimestamp = +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp = +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfYear.js\nfunction startOfYear(date, options) {\n  const date_ = toDate(date, options == null ? void 0 : options.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getDayOfYear.js\nfunction getDayOfYear(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfWeek.js\nfunction startOfWeek(date, options) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const defaultOptions2 = getDefaultOptions();\n  const weekStartsOn = (_h = (_g = (_d = (_c = options == null ? void 0 : options.weekStartsOn) != null ? _c : (_b = (_a = options == null ? void 0 : options.locale) == null ? void 0 : _a.options) == null ? void 0 : _b.weekStartsOn) != null ? _d : defaultOptions2.weekStartsOn) != null ? _g : (_f = (_e = defaultOptions2.locale) == null ? void 0 : _e.options) == null ? void 0 : _f.weekStartsOn) != null ? _h : 0;\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfISOWeek.js\nfunction startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getISOWeekYear.js\nfunction getISOWeekYear(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const year = _date.getFullYear();\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfISOWeekYear.js\nfunction startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom((options == null ? void 0 : options.in) || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getISOWeek.js\nfunction getISOWeek(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getWeekYear.js\nfunction getWeekYear(date, options) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const year = _date.getFullYear();\n  const defaultOptions2 = getDefaultOptions();\n  const firstWeekContainsDate = (_h = (_g = (_d = (_c = options == null ? void 0 : options.firstWeekContainsDate) != null ? _c : (_b = (_a = options == null ? void 0 : options.locale) == null ? void 0 : _a.options) == null ? void 0 : _b.firstWeekContainsDate) != null ? _d : defaultOptions2.firstWeekContainsDate) != null ? _g : (_f = (_e = defaultOptions2.locale) == null ? void 0 : _e.options) == null ? void 0 : _f.firstWeekContainsDate) != null ? _h : 1;\n  const firstWeekOfNextYear = constructFrom((options == null ? void 0 : options.in) || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n  const firstWeekOfThisYear = constructFrom((options == null ? void 0 : options.in) || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfWeekYear.js\nfunction startOfWeekYear(date, options) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const defaultOptions2 = getDefaultOptions();\n  const firstWeekContainsDate = (_h = (_g = (_d = (_c = options == null ? void 0 : options.firstWeekContainsDate) != null ? _c : (_b = (_a = options == null ? void 0 : options.locale) == null ? void 0 : _a.options) == null ? void 0 : _b.firstWeekContainsDate) != null ? _d : defaultOptions2.firstWeekContainsDate) != null ? _g : (_f = (_e = defaultOptions2.locale) == null ? void 0 : _e.options) == null ? void 0 : _f.firstWeekContainsDate) != null ? _h : 1;\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom((options == null ? void 0 : options.in) || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getWeek.js\nfunction getWeek(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/addLeadingZeros.js\nfunction addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/lightFormatters.js\nvar lightFormatters = {\n  // Year\n  y(date, token) {\n    const signedYear = date.getFullYear();\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3)\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/formatters.js\nvar dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\"\n};\nvar formatters = {\n  // Era\n  G: function(date, token, localize2) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize2.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize2.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize2.era(era, { width: \"wide\" });\n    }\n  },\n  // Year\n  y: function(date, token, localize2) {\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize2.ordinalNumber(year, { unit: \"year\" });\n    }\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function(date, token, localize2, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n    if (token === \"Yo\") {\n      return localize2.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function(date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function(date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function(date, token, localize2) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize2.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize2.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize2.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize2.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function(date, token, localize2) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize2.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize2.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize2.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize2.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // Month\n  M: function(date, token, localize2) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize2.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize2.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize2.month(month, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize2.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n  // Stand-alone month\n  L: function(date, token, localize2) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize2.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize2.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize2.month(month, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize2.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n  // Local week of year\n  w: function(date, token, localize2, options) {\n    const week = getWeek(date, options);\n    if (token === \"wo\") {\n      return localize2.ordinalNumber(week, { unit: \"week\" });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function(date, token, localize2) {\n    const isoWeek = getISOWeek(date);\n    if (token === \"Io\") {\n      return localize2.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function(date, token, localize2) {\n    if (token === \"do\") {\n      return localize2.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function(date, token, localize2) {\n    const dayOfYear = getDayOfYear(date);\n    if (token === \"Do\") {\n      return localize2.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function(date, token, localize2) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize2.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"EEEEE\":\n        return localize2.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize2.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize2.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Local day of week\n  e: function(date, token, localize2, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize2.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize2.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"eeeee\":\n        return localize2.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize2.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize2.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function(date, token, localize2, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize2.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize2.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // T\n      case \"ccccc\":\n        return localize2.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // Tu\n      case \"cccccc\":\n        return localize2.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\"\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize2.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // ISO day of week\n  i: function(date, token, localize2) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize2.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize2.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"iiiii\":\n        return localize2.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize2.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize2.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // AM or PM\n  a: function(date, token, localize2) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"aaa\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }).toLowerCase();\n      case \"aaaaa\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"aaaa\":\n      default:\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function(date, token, localize2) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"bbb\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }).toLowerCase();\n      case \"bbbbb\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"bbbb\":\n      default:\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function(date, token, localize2) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"BBBBB\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"BBBB\":\n      default:\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function(date, token, localize2) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize2.ordinalNumber(hours, { unit: \"hour\" });\n    }\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function(date, token, localize2) {\n    if (token === \"Ho\") {\n      return localize2.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function(date, token, localize2) {\n    const hours = date.getHours() % 12;\n    if (token === \"Ko\") {\n      return localize2.ordinalNumber(hours, { unit: \"hour\" });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function(date, token, localize2) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n    if (token === \"ko\") {\n      return localize2.ordinalNumber(hours, { unit: \"hour\" });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function(date, token, localize2) {\n    if (token === \"mo\") {\n      return localize2.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function(date, token, localize2) {\n    if (token === \"so\") {\n      return localize2.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function(date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\":\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\":\n      // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function(date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\":\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\":\n      // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (GMT)\n  O: function(date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (specific non-location)\n  z: function(date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Seconds timestamp\n  t: function(date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1e3);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function(date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/longFormatters.js\nvar dateLongFormatter = (pattern, formatLong2) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong2.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong2.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong2.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong2.date({ width: \"full\" });\n  }\n};\nvar timeLongFormatter = (pattern, formatLong2) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong2.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong2.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong2.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong2.time({ width: \"full\" });\n  }\n};\nvar dateTimeLongFormatter = (pattern, formatLong2) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong2);\n  }\n  let dateTimeFormat;\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong2.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong2.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong2.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong2.dateTime({ width: \"full\" });\n      break;\n  }\n  return dateTimeFormat.replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong2)).replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong2));\n};\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/protectedTokens.js\nvar dayOfYearTokenRE = /^D+$/;\nvar weekYearTokenRE = /^Y+$/;\nvar throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\nfunction isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\nfunction isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\nfunction warnOrThrowProtectedError(token, format2, input) {\n  const _message = message(token, format2, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\nfunction message(token, format2, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format2}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isDate.js\nfunction isDate(value) {\n  return value instanceof Date || typeof value === \"object\" && Object.prototype.toString.call(value) === \"[object Date]\";\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isValid.js\nfunction isValid(date) {\n  return !(!isDate(date) && typeof date !== \"number\" || isNaN(+toDate(date)));\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/format.js\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\nfunction format(date, formatStr, options) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r;\n  const defaultOptions2 = getDefaultOptions();\n  const locale = (_b = (_a = options == null ? void 0 : options.locale) != null ? _a : defaultOptions2.locale) != null ? _b : enUS;\n  const firstWeekContainsDate = (_j = (_i = (_f = (_e = options == null ? void 0 : options.firstWeekContainsDate) != null ? _e : (_d = (_c = options == null ? void 0 : options.locale) == null ? void 0 : _c.options) == null ? void 0 : _d.firstWeekContainsDate) != null ? _f : defaultOptions2.firstWeekContainsDate) != null ? _i : (_h = (_g = defaultOptions2.locale) == null ? void 0 : _g.options) == null ? void 0 : _h.firstWeekContainsDate) != null ? _j : 1;\n  const weekStartsOn = (_r = (_q = (_n = (_m = options == null ? void 0 : options.weekStartsOn) != null ? _m : (_l = (_k = options == null ? void 0 : options.locale) == null ? void 0 : _k.options) == null ? void 0 : _l.weekStartsOn) != null ? _n : defaultOptions2.weekStartsOn) != null ? _q : (_p = (_o = defaultOptions2.locale) == null ? void 0 : _o.options) == null ? void 0 : _p.weekStartsOn) != null ? _r : 0;\n  const originalDate = toDate(date, options == null ? void 0 : options.in);\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n  let parts = formatStr.match(longFormattingTokensRegExp).map((substring) => {\n    const firstCharacter = substring[0];\n    if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n      const longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join(\"\").match(formattingTokensRegExp).map((substring) => {\n    if (substring === \"''\") {\n      return { isToken: false, value: \"'\" };\n    }\n    const firstCharacter = substring[0];\n    if (firstCharacter === \"'\") {\n      return { isToken: false, value: cleanEscapedString(substring) };\n    }\n    if (formatters[firstCharacter]) {\n      return { isToken: true, value: substring };\n    }\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError(\n        \"Format string contains an unescaped latin alphabet character `\" + firstCharacter + \"`\"\n      );\n    }\n    return { isToken: false, value: substring };\n  });\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale\n  };\n  return parts.map((part) => {\n    if (!part.isToken) return part.value;\n    const token = part.value;\n    if (!(options == null ? void 0 : options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(token) || !(options == null ? void 0 : options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(token)) {\n      warnOrThrowProtectedError(token, formatStr, String(date));\n    }\n    const formatter = formatters[token[0]];\n    return formatter(originalDate, token, locale.localize, formatterOptions);\n  }).join(\"\");\n}\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n  if (!matched) {\n    return input;\n  }\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// src/third-party/property.tsx\nvar import_format_number = __toESM(require_format_number(), 1);\n\n\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/addDays.js\nfunction addDays(date, amount, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  if (isNaN(amount)) return constructFrom((options == null ? void 0 : options.in) || date, NaN);\n  if (!amount) return _date;\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/addMonths.js\nfunction addMonths(date, amount, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  if (isNaN(amount)) return constructFrom((options == null ? void 0 : options.in) || date, NaN);\n  if (!amount) {\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n  const endOfDesiredMonth = constructFrom((options == null ? void 0 : options.in) || date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    return endOfDesiredMonth;\n  } else {\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth\n    );\n    return _date;\n  }\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/add.js\nfunction add(date, duration, options) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0\n  } = duration;\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const dateWithMonths = months || years ? addMonths(_date, months + years * 12) : _date;\n  const dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n  const minutesToAdd = minutes + hours * 60;\n  const secondsToAdd = seconds + minutesToAdd * 60;\n  const msToAdd = secondsToAdd * 1e3;\n  return constructFrom((options == null ? void 0 : options.in) || date, +dateWithDays + msToAdd);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getDate.js\nfunction getDate(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getDate();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getDay.js\nfunction getDay(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getDay();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getHours.js\nfunction getHours(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getHours();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getMinutes.js\nfunction getMinutes(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getMinutes();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getMonth.js\nfunction getMonth(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getMonth();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getYear.js\nfunction getYear(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getFullYear();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/normalizeInterval.js\nfunction normalizeInterval(context, interval) {\n  const [start, end] = normalizeDates(context, interval.start, interval.end);\n  return { start, end };\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInDays.js\nfunction differenceInDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  const sign = compareLocalAsc(laterDate_, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarDays(laterDate_, earlierDate_)\n  );\n  laterDate_.setDate(laterDate_.getDate() - sign * difference);\n  const isLastDayNotFull = Number(\n    compareLocalAsc(laterDate_, earlierDate_) === -sign\n  );\n  const result = sign * (difference - isLastDayNotFull);\n  return result === 0 ? 0 : result;\n}\nfunction compareLocalAsc(laterDate, earlierDate) {\n  const diff = laterDate.getFullYear() - earlierDate.getFullYear() || laterDate.getMonth() - earlierDate.getMonth() || laterDate.getDate() - earlierDate.getDate() || laterDate.getHours() - earlierDate.getHours() || laterDate.getMinutes() - earlierDate.getMinutes() || laterDate.getSeconds() - earlierDate.getSeconds() || laterDate.getMilliseconds() - earlierDate.getMilliseconds();\n  if (diff < 0) return -1;\n  if (diff > 0) return 1;\n  return diff;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/getRoundingMethod.js\nfunction getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    return result === 0 ? 0 : result;\n  };\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInHours.js\nfunction differenceInHours(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  const diff = (+laterDate_ - +earlierDate_) / millisecondsInHour;\n  return getRoundingMethod(options == null ? void 0 : options.roundingMethod)(diff);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInMilliseconds.js\nfunction differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInMinutes.js\nfunction differenceInMinutes(dateLeft, dateRight, options) {\n  const diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options == null ? void 0 : options.roundingMethod)(diff);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/compareAsc.js\nfunction compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n  return diff;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarMonths.js\nfunction differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/endOfDay.js\nfunction endOfDay(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/endOfMonth.js\nfunction endOfMonth(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isLastDayOfMonth.js\nfunction isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInMonths.js\nfunction differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    laterDate,\n    earlierDate\n  );\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_)\n  );\n  if (difference < 1) return 0;\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n  if (isLastDayOfMonth(laterDate_) && difference === 1 && compareAsc(laterDate_, earlierDate_) === 1) {\n    isLastMonthNotFull = false;\n  }\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInSeconds.js\nfunction differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1e3;\n  return getRoundingMethod(options == null ? void 0 : options.roundingMethod)(diff);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarYears.js\nfunction differenceInCalendarYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  return laterDate_.getFullYear() - earlierDate_.getFullYear();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInYears.js\nfunction differenceInYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  const sign = compareAsc(laterDate_, earlierDate_);\n  const diff = Math.abs(differenceInCalendarYears(laterDate_, earlierDate_));\n  laterDate_.setFullYear(1584);\n  earlierDate_.setFullYear(1584);\n  const partial = compareAsc(laterDate_, earlierDate_) === -sign;\n  const result = sign * (diff - +partial);\n  return result === 0 ? 0 : result;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/intervalToDuration.js\nfunction intervalToDuration(interval, options) {\n  const { start, end } = normalizeInterval(options == null ? void 0 : options.in, interval);\n  const duration = {};\n  const years = differenceInYears(end, start);\n  if (years) duration.years = years;\n  const remainingMonths = add(start, { years: duration.years });\n  const months = differenceInMonths(end, remainingMonths);\n  if (months) duration.months = months;\n  const remainingDays = add(remainingMonths, { months: duration.months });\n  const days = differenceInDays(end, remainingDays);\n  if (days) duration.days = days;\n  const remainingHours = add(remainingDays, { days: duration.days });\n  const hours = differenceInHours(end, remainingHours);\n  if (hours) duration.hours = hours;\n  const remainingMinutes = add(remainingHours, { hours: duration.hours });\n  const minutes = differenceInMinutes(end, remainingMinutes);\n  if (minutes) duration.minutes = minutes;\n  const remainingSeconds = add(remainingMinutes, { minutes: duration.minutes });\n  const seconds = differenceInSeconds(end, remainingSeconds);\n  if (seconds) duration.seconds = seconds;\n  return duration;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/subDays.js\nfunction subDays(date, amount, options) {\n  return addDays(date, -amount, options);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/subMonths.js\nfunction subMonths(date, amount, options) {\n  return addMonths(date, -amount, options);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/sub.js\nfunction sub(date, duration, options) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0\n  } = duration;\n  const withoutMonths = subMonths(date, months + years * 12, options);\n  const withoutDays = subDays(withoutMonths, days + weeks * 7, options);\n  const minutesToSub = minutes + hours * 60;\n  const secondsToSub = seconds + minutesToSub * 60;\n  const msToSub = secondsToSub * 1e3;\n  return constructFrom((options == null ? void 0 : options.in) || date, +withoutDays - msToSub);\n}\n\n// src/third-party/eval-formula.ts\n\nfunction evalFormula(formula, context) {\n  const { endDate, ...ctx2 } = context;\n  switch (formula == null ? void 0 : formula.type) {\n    case \"symbol\":\n      return formula.name === \"true\";\n    case \"constant\": {\n      const value = formula.value;\n      switch (formula.result_type) {\n        case \"text\":\n          return value;\n        case \"number\":\n          return Number.parseFloat(value);\n        default:\n          return value;\n      }\n    }\n    case \"property\": {\n      const value = ctx2.properties[formula.id];\n      const text = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getTextContent)(value);\n      switch (formula.result_type) {\n        case \"text\":\n          return text;\n        case \"number\":\n          return Number.parseFloat(text);\n        case \"boolean\":\n          if (typeof text === \"string\") {\n            return text === \"true\";\n          } else {\n            return !!text;\n          }\n        case \"date\": {\n          const v = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getDateValue)(value);\n          if (v) {\n            if (endDate && v.end_date) {\n              const date = new Date(v.end_date);\n              return new Date(\n                date.getUTCFullYear(),\n                date.getUTCMonth(),\n                date.getUTCDate()\n              );\n            } else {\n              const date = new Date(v.start_date);\n              return new Date(\n                date.getUTCFullYear(),\n                date.getUTCMonth(),\n                date.getUTCDate()\n              );\n            }\n          } else {\n            return new Date(text);\n          }\n        }\n        default:\n          return text;\n      }\n    }\n    case \"operator\":\n    // All operators are exposed as functions, so we handle them the same\n    // eslint-disable-next-line no-fallthrough\n    case \"function\":\n      return evalFunctionFormula(formula, ctx2);\n    default:\n      throw new Error(\n        `invalid or unsupported formula \"${formula == null ? void 0 : formula.type}`\n      );\n  }\n}\nfunction evalFunctionFormula(formula, ctx2) {\n  const args = formula == null ? void 0 : formula.args;\n  switch (formula.name) {\n    // logic\n    // ------------------------------------------------------------------------\n    case \"and\":\n      return evalFormula(args[0], ctx2) && evalFormula(args[1], ctx2);\n    case \"empty\":\n      return !evalFormula(args[0], ctx2);\n    case \"equal\":\n      return evalFormula(args[0], ctx2) == evalFormula(args[1], ctx2);\n    case \"if\":\n      return evalFormula(args[0], ctx2) ? evalFormula(args[1], ctx2) : evalFormula(args[2], ctx2);\n    case \"larger\":\n      return evalFormula(args[0], ctx2) > evalFormula(args[1], ctx2);\n    case \"largerEq\":\n      return evalFormula(args[0], ctx2) >= evalFormula(args[1], ctx2);\n    case \"not\":\n      return !evalFormula(args[0], ctx2);\n    case \"or\":\n      return evalFormula(args[0], ctx2) || evalFormula(args[1], ctx2);\n    case \"smaller\":\n      return evalFormula(args[0], ctx2) < evalFormula(args[1], ctx2);\n    case \"smallerEq\":\n      return evalFormula(args[0], ctx2) <= evalFormula(args[1], ctx2);\n    case \"unequal\":\n      return evalFormula(args[0], ctx2) != evalFormula(args[1], ctx2);\n    // numeric\n    // ------------------------------------------------------------------------\n    case \"abs\":\n      return Math.abs(evalFormula(args[0], ctx2));\n    case \"add\": {\n      const v0 = evalFormula(args[0], ctx2);\n      const v1 = evalFormula(args[1], ctx2);\n      if (typeof v0 === \"number\") {\n        return v0 + +v1;\n      } else if (typeof v0 === \"string\") {\n        return v0 + `${v1}`;\n      } else {\n        return v0;\n      }\n    }\n    case \"cbrt\":\n      return Math.cbrt(evalFormula(args[0], ctx2));\n    case \"ceil\":\n      return Math.ceil(evalFormula(args[0], ctx2));\n    case \"divide\":\n      return evalFormula(args[0], ctx2) / evalFormula(args[1], ctx2);\n    case \"exp\":\n      return Math.exp(evalFormula(args[0], ctx2));\n    case \"floor\":\n      return Math.floor(evalFormula(args[0], ctx2));\n    case \"ln\":\n      return Math.log(evalFormula(args[0], ctx2));\n    case \"log10\":\n      return Math.log10(evalFormula(args[0], ctx2));\n    case \"log2\":\n      return Math.log2(evalFormula(args[0], ctx2));\n    case \"max\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.reduce(\n        (acc, value) => Math.max(acc, value),\n        Number.NEGATIVE_INFINITY\n      );\n    }\n    case \"min\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.reduce(\n        (acc, value) => Math.min(acc, value),\n        Number.POSITIVE_INFINITY\n      );\n    }\n    case \"mod\":\n      return evalFormula(args[0], ctx2) % evalFormula(args[1], ctx2);\n    case \"multiply\":\n      return evalFormula(args[0], ctx2) * evalFormula(args[1], ctx2);\n    case \"pow\":\n      return Math.pow(\n        evalFormula(args[0], ctx2),\n        evalFormula(args[1], ctx2)\n      );\n    case \"round\":\n      return Math.round(evalFormula(args[0], ctx2));\n    case \"sign\":\n      return Math.sign(evalFormula(args[0], ctx2));\n    case \"sqrt\":\n      return Math.sqrt(evalFormula(args[0], ctx2));\n    case \"subtract\":\n      return evalFormula(args[0], ctx2) - evalFormula(args[1], ctx2);\n    case \"toNumber\":\n      return Number.parseFloat(evalFormula(args[0], ctx2));\n    case \"unaryMinus\":\n      return evalFormula(args[0], ctx2) * -1;\n    case \"unaryPlus\":\n      return Number.parseFloat(evalFormula(args[0], ctx2));\n    // text\n    // ------------------------------------------------------------------------\n    case \"concat\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.join(\"\");\n    }\n    case \"contains\":\n      return evalFormula(args[0], ctx2).includes(\n        evalFormula(args[1], ctx2)\n      );\n    case \"format\": {\n      const value = evalFormula(args[0], ctx2);\n      switch (typeof value) {\n        case \"string\":\n          return value;\n        case \"object\":\n          if (value instanceof Date) {\n            return format(value, \"MMM d, YYY\");\n          } else {\n            return `${value}`;\n          }\n        // case 'number':\n        // fallthrough\n        default:\n          return `${value}`;\n      }\n    }\n    case \"join\": {\n      const [delimiterArg, ...restArgs] = args;\n      const delimiter = evalFormula(delimiterArg, ctx2);\n      const values = restArgs.map((arg) => evalFormula(arg, ctx2));\n      return values.join(delimiter);\n    }\n    case \"length\":\n      return evalFormula(args[0], ctx2).length;\n    case \"replace\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      const replacement = evalFormula(args[2], ctx2);\n      return value.replace(new RegExp(regex), replacement);\n    }\n    case \"replaceAll\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      const replacement = evalFormula(args[2], ctx2);\n      return value.replaceAll(new RegExp(regex, \"g\"), replacement);\n    }\n    case \"slice\": {\n      const value = evalFormula(args[0], ctx2);\n      const beginIndex = evalFormula(args[1], ctx2);\n      const endIndex = args[2] ? evalFormula(args[2], ctx2) : value.length;\n      return value.slice(beginIndex, endIndex);\n    }\n    case \"test\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      return new RegExp(regex).test(value);\n    }\n    // date & time\n    // ------------------------------------------------------------------------\n    case \"date\":\n      return getDate(evalFormula(args[0], ctx2));\n    case \"dateAdd\": {\n      const date = evalFormula(args[0], ctx2);\n      const number = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return add(date, { [unit]: number });\n    }\n    case \"dateBetween\": {\n      const date1 = evalFormula(args[0], ctx2);\n      const date2 = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return intervalToDuration({\n        start: date2,\n        end: date1\n      })[unit];\n    }\n    case \"dateSubtract\": {\n      const date = evalFormula(args[0], ctx2);\n      const number = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return sub(date, { [unit]: number });\n    }\n    case \"day\":\n      return getDay(evalFormula(args[0], ctx2));\n    case \"end\":\n      return evalFormula(args[0], { ...ctx2, endDate: true });\n    case \"formatDate\": {\n      const date = evalFormula(args[0], ctx2);\n      const formatValue = evalFormula(args[1], ctx2).replace(\n        \"dddd\",\n        \"eeee\"\n      );\n      return format(date, formatValue);\n    }\n    case \"fromTimestamp\":\n      return new Date(evalFormula(args[0], ctx2));\n    case \"hour\":\n      return getHours(evalFormula(args[0], ctx2));\n    case \"minute\":\n      return getMinutes(evalFormula(args[0], ctx2));\n    case \"month\":\n      return getMonth(evalFormula(args[0], ctx2));\n    case \"now\":\n      return /* @__PURE__ */ new Date();\n    case \"start\":\n      return evalFormula(args[0], { ...ctx2, endDate: false });\n    case \"timestamp\":\n      return evalFormula(args[0], ctx2).getTime();\n    case \"year\":\n      return getYear(evalFormula(args[0], ctx2));\n    default:\n      throw new Error(\n        `invalid or unsupported function formula \"${formula == null ? void 0 : formula.type}`\n      );\n  }\n}\n\n// src/third-party/property.tsx\n\nfunction Property(props) {\n  const { components } = useNotionContext();\n  if (components.Property) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(components.Property, { ...props });\n  } else {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PropertyImplMemo, { ...props });\n  }\n}\nfunction PropertyImpl(props) {\n  var _a, _b, _c;\n  const { components, mapImageUrl, mapPageUrl } = useNotionContext();\n  const {\n    schema,\n    data,\n    block,\n    collection,\n    inline = false,\n    linkToTitlePage = true\n  } = props;\n  const renderTextValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function TextProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n    },\n    [block, data]\n  );\n  const renderDateValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function DateProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n    },\n    [block, data]\n  );\n  const renderRelationValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function RelationProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n    },\n    [block, data]\n  );\n  const renderFormulaValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function FormulaProperty() {\n      let content2;\n      if (!schema) return null;\n      try {\n        content2 = evalFormula(schema.formula, {\n          schema: collection == null ? void 0 : collection.schema,\n          properties: block == null ? void 0 : block.properties\n        });\n        if (Number.isNaN(content2)) {\n        }\n        if (content2 instanceof Date) {\n          content2 = format(content2, \"MMM d, YYY hh:mm aa\");\n        }\n      } catch (e) {\n        content2 = null;\n      }\n      return content2;\n    },\n    [block == null ? void 0 : block.properties, collection == null ? void 0 : collection.schema, schema]\n  );\n  const renderTitleValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function FormulaTitle() {\n      if (block && linkToTitlePage) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          components.PageLink,\n          {\n            className: cs(\"notion-page-link\"),\n            href: mapPageUrl(block.id),\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PageTitle, { block })\n          }\n        );\n      } else {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n      }\n    },\n    [block, components, data, linkToTitlePage, mapPageUrl]\n  );\n  const renderPersonValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function PersonProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n    },\n    [block, data]\n  );\n  const renderFileValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function FileProperty() {\n      if (!data) return null;\n      const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());\n      return files.map((file, i) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.Link,\n        {\n          className: \"notion-property-file\",\n          href: mapImageUrl(file[2], block),\n          target: \"_blank\",\n          rel: \"noreferrer noopener\",\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            GracefulImage,\n            {\n              alt: file[0],\n              src: mapImageUrl(file[2], block),\n              loading: \"lazy\"\n            }\n          )\n        },\n        i\n      ));\n    },\n    [block, components, data, mapImageUrl]\n  );\n  const renderCheckboxValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function CheckboxProperty() {\n      var _a2;\n      if (!data || !(schema == null ? void 0 : schema.name)) return null;\n      const isChecked = data && ((_a2 = data[0]) == null ? void 0 : _a2[0]) === \"Yes\";\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-property-checkbox-container\", children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Checkbox, { isChecked, blockId: void 0 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-property-checkbox-text\", children: schema.name })\n      ] });\n    },\n    [data, schema]\n  );\n  const renderUrlValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function UrlProperty() {\n      var _a2;\n      if (!data) return null;\n      const d = structuredClone(data);\n      if (inline) {\n        try {\n          const url = new URL((_a2 = d[0]) == null ? void 0 : _a2[0]);\n          d[0][0] = url.hostname.replace(/^www\\./, \"\");\n        } catch (e) {\n        }\n      }\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        Text,\n        {\n          value: d,\n          block,\n          inline,\n          linkProps: {\n            target: \"_blank\",\n            rel: \"noreferrer noopener\"\n          }\n        }\n      );\n    },\n    [block, data, inline]\n  );\n  const renderEmailValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function EmailProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, linkProtocol: \"mailto\", block });\n    },\n    [block, data]\n  );\n  const renderPhoneNumberValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function PhoneNumberProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, linkProtocol: \"tel\", block });\n    },\n    [block, data]\n  );\n  const renderNumberValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function NumberProperty() {\n      var _a2;\n      if (!data || !schema) return null;\n      const value = Number.parseFloat(((_a2 = data[0]) == null ? void 0 : _a2[0]) || \"0\");\n      let output = \"\";\n      if (Number.isNaN(value)) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n      } else {\n        switch (schema.number_format) {\n          case \"number_with_commas\":\n            output = (0, import_format_number.default)()(value);\n            break;\n          case \"percent\":\n            output = (0, import_format_number.default)({ suffix: \"%\" })(value * 100);\n            break;\n          case \"dollar\":\n            output = (0, import_format_number.default)({ prefix: \"$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"euro\":\n            output = (0, import_format_number.default)({ prefix: \"\\u20AC\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"pound\":\n            output = (0, import_format_number.default)({ prefix: \"\\xA3\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"yen\":\n            output = (0, import_format_number.default)({ prefix: \"\\xA5\", round: 0 })(value);\n            break;\n          case \"rupee\":\n            output = (0, import_format_number.default)({ prefix: \"\\u20B9\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"won\":\n            output = (0, import_format_number.default)({ prefix: \"\\u20A9\", round: 0 })(value);\n            break;\n          case \"yuan\":\n            output = (0, import_format_number.default)({ prefix: \"CN\\xA5\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"argentine_peso\":\n            output = (0, import_format_number.default)({ prefix: \"ARS \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"baht\":\n            output = (0, import_format_number.default)({ prefix: \"THB \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"canadian_dollar\":\n            output = (0, import_format_number.default)({ prefix: \"CA$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"chilean_peso\":\n            output = (0, import_format_number.default)({ prefix: \"CLP \", round: 0 })(value);\n            break;\n          case \"colombian_peso\":\n            output = (0, import_format_number.default)({ prefix: \"COP \", round: 0 })(value);\n            break;\n          case \"danish_krone\":\n            output = (0, import_format_number.default)({ prefix: \"DKK \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"dirham\":\n            output = (0, import_format_number.default)({ prefix: \"AED \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"forint\":\n            output = (0, import_format_number.default)({ prefix: \"HUF \", round: 0 })(value);\n            break;\n          case \"franc\":\n            output = (0, import_format_number.default)({ prefix: \"CHF \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"hong_kong_dollar\":\n            output = (0, import_format_number.default)({ prefix: \"HK$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"koruna\":\n            output = (0, import_format_number.default)({ prefix: \"CZK \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"krona\":\n            output = (0, import_format_number.default)({ prefix: \"SEK \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"leu\":\n            output = (0, import_format_number.default)({ prefix: \"RON \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"lira\":\n            output = (0, import_format_number.default)({ prefix: \"TRY \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"mexican_peso\":\n            output = (0, import_format_number.default)({ prefix: \"MX$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"new_taiwan_dollar\":\n            output = (0, import_format_number.default)({ prefix: \"NT$\", round: 0 })(value);\n            break;\n          case \"new_zealand_dollar\":\n            output = (0, import_format_number.default)({ prefix: \"NZ$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"norwegian_krone\":\n            output = (0, import_format_number.default)({ prefix: \"NOK \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"number\":\n            output = (0, import_format_number.default)()(value);\n            break;\n          case \"philippine_peso\":\n            output = (0, import_format_number.default)({ prefix: \"\\u20B1\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"peruvian_sol\":\n            output = (0, import_format_number.default)({ prefix: \"PEN \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"rand\":\n            output = (0, import_format_number.default)({ prefix: \"ZAR \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"real\":\n            output = (0, import_format_number.default)({ prefix: \"R$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"ringgit\":\n            output = (0, import_format_number.default)({ prefix: \"MYR \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"riyal\":\n            output = (0, import_format_number.default)({ prefix: \"SAR \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"ruble\":\n            output = (0, import_format_number.default)({ prefix: \"RUB \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"rupiah\":\n            output = (0, import_format_number.default)({ prefix: \"IDR \", round: 0 })(value);\n            break;\n          case \"shekel\":\n            output = (0, import_format_number.default)({ prefix: \"\\u20AA\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"singapore_dollar\":\n            output = (0, import_format_number.default)({ prefix: \"SGD \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"uruguayan_peso\":\n            output = (0, import_format_number.default)({ prefix: \"UYU \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"zloty\":\n            output = (0, import_format_number.default)({ prefix: \"PLN \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          default:\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n        }\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: [[output]], block });\n      }\n    },\n    [block, data, schema]\n  );\n  const renderAutoIncrementIdValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function renderAutoIncrementIdValueProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n    },\n    [block, data]\n  );\n  const renderCreatedTimeValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function CreatedTimeProperty() {\n      return format(new Date(block.created_time), \"MMM d, YYY hh:mm aa\");\n    },\n    [block]\n  );\n  const renderLastEditedTimeValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function LastEditedTimeProperty() {\n      return format(new Date(block.last_edited_time), \"MMM d, YYY hh:mm aa\");\n    },\n    [block]\n  );\n  if (!schema) {\n    return null;\n  }\n  let content = null;\n  if (data || schema.type === \"checkbox\" || schema.type === \"title\" || schema.type === \"formula\" || schema.type === \"created_by\" || schema.type === \"last_edited_by\" || schema.type === \"created_time\" || schema.type === \"last_edited_time\") {\n    switch (schema.type) {\n      case \"relation\":\n        content = components.propertyRelationValue(props, renderRelationValue);\n        break;\n      case \"formula\":\n        content = components.propertyFormulaValue(props, renderFormulaValue);\n        break;\n      case \"title\":\n        content = components.propertyTitleValue(props, renderTitleValue);\n        break;\n      case \"status\": {\n        const value = ((_a = data == null ? void 0 : data[0]) == null ? void 0 : _a[0]) || \"\";\n        const option = (_b = schema.options) == null ? void 0 : _b.find((option2) => value === option2.value);\n        const color = (option == null ? void 0 : option.color) || \"default-inferred\";\n        content = components.propertySelectValue(\n          {\n            ...props,\n            value,\n            option,\n            color\n          },\n          () => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n            \"div\",\n            {\n              className: cs(\n                `notion-property-${schema.type}-item`,\n                color && `notion-item-${color}`\n              ),\n              children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                  \"span\",\n                  {\n                    className: cs(`notion-item-bullet-${color}`),\n                    style: {\n                      marginRight: \"5px\",\n                      borderRadius: \"100%\",\n                      height: \"8px\",\n                      width: \"8px\",\n                      display: \"inline-flex\",\n                      flexShrink: 0\n                    }\n                  }\n                ),\n                value\n              ]\n            }\n          )\n        );\n        break;\n      }\n      case \"select\":\n      // intentional fallthrough\n      case \"multi_select\": {\n        const values = (((_c = data == null ? void 0 : data[0]) == null ? void 0 : _c[0]) || \"\").split(\",\");\n        content = values.map((value, index) => {\n          var _a2;\n          const option = (_a2 = schema.options) == null ? void 0 : _a2.find(\n            (option2) => value === option2.value\n          );\n          const color = option == null ? void 0 : option.color;\n          return components.propertySelectValue(\n            {\n              ...props,\n              key: index,\n              value,\n              option,\n              color\n            },\n            () => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              \"div\",\n              {\n                className: cs(\n                  `notion-property-${schema.type}-item`,\n                  color && `notion-item-${color}`\n                ),\n                children: value\n              },\n              index\n            )\n          );\n        });\n        break;\n      }\n      case \"person\":\n        content = components.propertyPersonValue(props, renderPersonValue);\n        break;\n      case \"file\":\n        content = components.propertyFileValue(props, renderFileValue);\n        break;\n      case \"checkbox\":\n        content = components.propertyCheckboxValue(props, renderCheckboxValue);\n        break;\n      case \"url\":\n        content = components.propertyUrlValue(props, renderUrlValue);\n        break;\n      case \"email\":\n        content = components.propertyEmailValue(props, renderEmailValue);\n        break;\n      case \"phone_number\":\n        content = components.propertyPhoneNumberValue(\n          props,\n          renderPhoneNumberValue\n        );\n        break;\n      case \"number\":\n        content = components.propertyNumberValue(props, renderNumberValue);\n        break;\n      case \"created_time\":\n        content = components.propertyCreatedTimeValue(\n          props,\n          renderCreatedTimeValue\n        );\n        break;\n      case \"last_edited_time\":\n        content = components.propertyLastEditedTimeValue(\n          props,\n          renderLastEditedTimeValue\n        );\n        break;\n      case \"created_by\":\n        break;\n      case \"last_edited_by\":\n        break;\n      case \"auto_increment_id\":\n        content = components.propertyTextValue(\n          props,\n          renderAutoIncrementIdValue\n        );\n        break;\n      case \"text\":\n        content = components.propertyTextValue(props, renderTextValue);\n        break;\n      case \"date\":\n        content = components.propertyDateValue(props, renderDateValue);\n        break;\n      default:\n        content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n        break;\n    }\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: `notion-property notion-property-${schema.type}`, children: content });\n}\nvar PropertyImplMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(PropertyImpl);\n\n// src/third-party/collection-row.tsx\n\nfunction CollectionRow({\n  block,\n  pageHeader = false,\n  className\n}) {\n  var _a, _b, _c, _d;\n  const { recordMap } = useNotionContext();\n  const collectionId = block.parent_id;\n  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;\n  const schemas = collection == null ? void 0 : collection.schema;\n  if (!collection || !schemas) {\n    return null;\n  }\n  let propertyIds = Object.keys(schemas).filter((id) => id !== \"title\");\n  if ((_b = collection.format) == null ? void 0 : _b.property_visibility) {\n    propertyIds = propertyIds.filter(\n      (id) => {\n        var _a2, _b2, _c2;\n        return ((_c2 = (_b2 = (_a2 = collection.format) == null ? void 0 : _a2.property_visibility) == null ? void 0 : _b2.find(\n          ({ property }) => property === id\n        )) == null ? void 0 : _c2.visibility) !== \"hide\";\n      }\n    );\n  }\n  if ((_c = collection.format) == null ? void 0 : _c.collection_page_properties) {\n    const idToIndex = Object.fromEntries(\n      (_d = collection.format) == null ? void 0 : _d.collection_page_properties.map((p, i) => [\n        p.property,\n        i\n      ])\n    );\n    propertyIds.sort((a, b) => idToIndex[a] - idToIndex[b]);\n  } else {\n    propertyIds.sort((a, b) => schemas[a].name.localeCompare(schemas[b].name));\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: cs(\"notion-collection-row\", className), children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-row-body\", children: propertyIds.map((propertyId) => {\n    var _a2;\n    const schema = schemas[propertyId];\n    if (!schema) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-collection-row-property\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionColumnTitle, { schema }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-row-value\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        Property,\n        {\n          schema,\n          data: (_a2 = block.properties) == null ? void 0 : _a2[propertyId],\n          propertyId,\n          block,\n          collection,\n          pageHeader\n        }\n      ) })\n    ] }, propertyId);\n  }) }) });\n}\n\n// src/third-party/collection-view.tsx\n\n\n// src/third-party/collection-view-board.tsx\n\n\n\n// src/icons/empty-icon.tsx\n\n\nfunction EmptyIcon(props) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { className, ...rest, viewBox: \"0 0 14 14\", width: \"14\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M11.0918,0 C11.5383,0 11.9307,0.295898 12.0533,0.725586 L13.9615,7.40332 C13.9871,7.49316 14,7.58594 14,7.67871 L14,13 C14,13.5527 13.5522,14 13,14 L1,14 C0.447754,14 0,13.5527 0,13 L0,7.67871 C0,7.58594 0.0129395,7.49316 0.0384521,7.40332 L1.94666,0.725586 C2.06934,0.295898 2.46167,0 2.9082,0 L11.0918,0 Z M4.27271,1.5 C3.83728,1.5 3.45178,1.78223 3.31982,2.19727 L1.91455,6.61328 C1.70947,7.25879 2.1908,7.91699 2.86755,7.91699 L4.70837,7.91699 C4.70837,8.93652 5.16663,10.168 7,10.168 C8.83337,10.168 9.29163,8.93652 9.29163,7.91699 L11.1478,7.89355 C11.8201,7.88477 12.2927,7.22852 12.0876,6.58887 L10.681,2.19531 C10.5485,1.78125 10.1635,1.5 9.72864,1.5 L4.27271,1.5 Z\" }) });\n}\n\n// src/third-party/collection-card.tsx\n\n\n\nfunction CollectionCard({\n  collection,\n  block,\n  cover,\n  coverSize,\n  coverAspect,\n  properties,\n  className,\n  ...rest\n}) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m;\n  const ctx2 = useNotionContext();\n  const {\n    components,\n    recordMap,\n    mapPageUrl,\n    mapImageUrl,\n    isLinkCollectionToUrlProperty\n  } = ctx2;\n  let coverContent = null;\n  const { page_cover_position = 0.5, card_cover_position = 0.5 } = block.format || {};\n  const coverPosition = (1 - page_cover_position) * 100;\n  const cardCoverPosition = (1 - card_cover_position) * 100;\n  if ((cover == null ? void 0 : cover.type) === \"page_content\") {\n    const contentBlockId = (_a = block.content) == null ? void 0 : _a.find((blockId) => {\n      var _a2;\n      const block2 = (_a2 = recordMap.block[blockId]) == null ? void 0 : _a2.value;\n      return (block2 == null ? void 0 : block2.type) === \"image\";\n    });\n    if (contentBlockId) {\n      const contentBlock = (_b = recordMap.block[contentBlockId]) == null ? void 0 : _b.value;\n      const source = (_g = (_e = (_d = (_c = contentBlock.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]) != null ? _g : (_f = contentBlock.format) == null ? void 0 : _f.display_source;\n      if (source) {\n        const src = mapImageUrl(source, contentBlock);\n        const caption = (_j = (_i = (_h = contentBlock.properties) == null ? void 0 : _h.caption) == null ? void 0 : _i[0]) == null ? void 0 : _j[0];\n        coverContent = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          LazyImage,\n          {\n            src,\n            alt: caption || \"notion image\",\n            style: {\n              objectFit: coverAspect,\n              objectPosition: `center ${cardCoverPosition}%`\n            }\n          }\n        );\n      }\n    }\n    if (!coverContent) {\n      coverContent = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-card-cover-empty\" });\n    }\n  } else if ((cover == null ? void 0 : cover.type) === \"page_cover\") {\n    const { page_cover } = block.format || {};\n    if (page_cover) {\n      const coverPosition2 = (1 - page_cover_position) * 100;\n      coverContent = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        LazyImage,\n        {\n          src: mapImageUrl(page_cover, block),\n          alt: (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getTextContent)((_k = block.properties) == null ? void 0 : _k.title),\n          style: {\n            objectFit: coverAspect,\n            objectPosition: `center ${coverPosition2}%`\n          }\n        }\n      );\n    }\n  } else if ((cover == null ? void 0 : cover.type) === \"property\") {\n    const { property } = cover;\n    if (!property) return null;\n    const schema = collection.schema[property];\n    const data = (_l = block.properties) == null ? void 0 : _l[property];\n    if (schema && data) {\n      if (schema.type === \"file\") {\n        const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());\n        const file = files[0];\n        if (file) {\n          coverContent = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: `notion-property-${schema.type}`, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            LazyImage,\n            {\n              alt: file[0],\n              src: mapImageUrl(file[2], block),\n              style: {\n                objectFit: coverAspect,\n                objectPosition: `center ${coverPosition}%`\n              }\n            }\n          ) });\n        }\n      } else {\n        coverContent = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Property, { propertyId: property, schema, data });\n      }\n    }\n  }\n  let linkProperties = [];\n  if (isLinkCollectionToUrlProperty && properties) {\n    linkProperties = properties.filter(\n      (p) => p.visible && p.property !== \"title\" && collection.schema[p.property]\n    ).filter((p) => {\n      if (!block.properties) return false;\n      const schema = collection.schema[p.property];\n      return (schema == null ? void 0 : schema.type) === \"url\";\n    }).map((p) => {\n      var _a2;\n      return (_a2 = block.properties) == null ? void 0 : _a2[p.property];\n    }).filter((p) => p == null ? void 0 : p[0]);\n  }\n  let url = null;\n  if (linkProperties && linkProperties.length > 0 && linkProperties[0].length > 0 && linkProperties[0][0].length > 0) {\n    url = linkProperties[0][0][0];\n  }\n  const innerCard = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    (coverContent || (cover == null ? void 0 : cover.type) !== \"none\") && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-card-cover\", children: coverContent }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-collection-card-body\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-card-property\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        Property,\n        {\n          schema: collection.schema.title,\n          data: (_m = block == null ? void 0 : block.properties) == null ? void 0 : _m.title,\n          block,\n          collection\n        }\n      ) }),\n      properties == null ? void 0 : properties.filter(\n        (p) => p.visible && p.property !== \"title\" && collection.schema[p.property]\n      ).map((p) => {\n        if (!block.properties || !p.property) return null;\n        const schema = collection.schema[p.property];\n        const data = block.properties[p.property];\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-card-property\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          Property,\n          {\n            schema,\n            data,\n            block,\n            collection,\n            inline: true\n          }\n        ) }, p.property);\n      })\n    ] })\n  ] });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    NotionContextProvider,\n    {\n      ...ctx2,\n      components: {\n        ...ctx2.components,\n        // Disable <a> tabs in all child components so we don't create invalid DOM\n        // trees with stacked <a> tags.\n        Link: (props) => {\n          var _a2, _b2, _c2;\n          return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"form\", { action: props.href, target: \"_blank\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            \"input\",\n            {\n              type: \"submit\",\n              value: (_c2 = (_b2 = (_a2 = props == null ? void 0 : props.children) == null ? void 0 : _a2.props) == null ? void 0 : _b2.children) != null ? _c2 : props.href,\n              className: \"nested-form-link notion-link\"\n            }\n          ) });\n        },\n        PageLink: dummyLink\n      },\n      children: isLinkCollectionToUrlProperty && url ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.Link,\n        {\n          className: cs(\n            \"notion-collection-card\",\n            `notion-collection-card-size-${coverSize}`,\n            className\n          ),\n          href: url,\n          ...rest,\n          children: innerCard\n        }\n      ) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.PageLink,\n        {\n          className: cs(\n            \"notion-collection-card\",\n            `notion-collection-card-size-${coverSize}`,\n            className\n          ),\n          href: mapPageUrl(block.id),\n          ...rest,\n          children: innerCard\n        }\n      )\n    }\n  );\n}\n\n// src/third-party/collection-group.tsx\n\nfunction CollectionGroup({\n  collectionViewComponent: CollectionViewComponent,\n  collection,\n  collectionGroup,\n  schema,\n  value,\n  hidden,\n  summaryProps,\n  detailsProps,\n  ...rest\n}) {\n  if (hidden) return null;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"details\", { open: true, className: \"notion-collection-group\", ...detailsProps, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"summary\", { className: \"notion-collection-group-title\", ...summaryProps, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Property, { schema, data: [[value]], collection }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-board-th-count\", children: collectionGroup == null ? void 0 : collectionGroup.total })\n    ] }) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionViewComponent,\n      {\n        collection,\n        collectionGroup,\n        ...rest\n      }\n    )\n  ] });\n}\n\n// src/third-party/collection-utils.ts\nfunction getCollectionGroups(collection, collectionView, collectionData, ...rest) {\n  var _a;\n  const elems = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_groups) || [];\n  return elems.map(({ property, hidden, value: { value, type } }) => {\n    var _a2, _b;\n    const isUncategorizedValue = value === void 0;\n    const isDateValue = value == null ? void 0 : value.range;\n    const queryLabel = isUncategorizedValue ? \"uncategorized\" : isDateValue ? ((_a2 = value.range) == null ? void 0 : _a2.start_date) || ((_b = value.range) == null ? void 0 : _b.end_date) : (value == null ? void 0 : value.value) || value;\n    const collectionGroup = collectionData[`results:${type}:${queryLabel}`];\n    let queryValue = !isUncategorizedValue && (isDateValue || (value == null ? void 0 : value.value) || value);\n    let schema = collection.schema[property];\n    if (type === \"checkbox\" && value) {\n      queryValue = \"Yes\";\n    }\n    if (isDateValue) {\n      schema = {\n        type: \"text\",\n        name: \"text\"\n      };\n      queryValue = format(new Date(queryLabel), \"MMM d, YYY hh:mm aa\");\n    }\n    return {\n      collectionGroup,\n      schema,\n      value: queryValue || \"No description\",\n      hidden,\n      collection,\n      collectionView,\n      collectionData,\n      blockIds: collectionGroup == null ? void 0 : collectionGroup.blockIds,\n      ...rest\n    };\n  });\n}\n\n// src/third-party/collection-view-board.tsx\n\nfunction CollectionViewBoard({\n  collection,\n  collectionView,\n  collectionData,\n  padding\n}) {\n  var _a;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData,\n      padding\n    );\n    return collectionGroups.map((group, index) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionGroup,\n      {\n        ...group,\n        summaryProps: {\n          style: {\n            paddingLeft: padding\n          }\n        },\n        collectionViewComponent: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Board, { padding, ...props })\n      },\n      index\n    ));\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    Board,\n    {\n      padding,\n      collectionView,\n      collection,\n      collectionData\n    }\n  );\n}\nfunction Board({\n  collectionView,\n  collectionData,\n  collection,\n  padding\n}) {\n  var _a, _b, _c, _d;\n  const { recordMap } = useNotionContext();\n  const {\n    board_cover = { type: \"none\" },\n    board_cover_size = \"medium\",\n    board_cover_aspect = \"cover\"\n  } = (collectionView == null ? void 0 : collectionView.format) || {};\n  const boardGroups = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.board_columns) || ((_b = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _b.board_groups2) || [];\n  const boardGroupBy = (_d = (_c = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _c.board_columns_by) == null ? void 0 : _d.groupBy;\n  const boardStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => ({\n      paddingLeft: padding\n    }),\n    [padding]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n    \"div\",\n    {\n      className: cs(\n        \"notion-board-view\",\n        `notion-board-view-size-${board_cover_size}`\n      ),\n      style: boardStyle,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-header\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-header-inner\", children: boardGroups.map((p, index) => {\n          var _a2, _b2, _c2, _d2;\n          if (!((_a2 = collectionData.board_columns) == null ? void 0 : _a2.results)) {\n            return null;\n          }\n          const group = collectionData.board_columns.results[index];\n          const schema = collection.schema[p.property];\n          if (!group || !schema || p.hidden) {\n            return null;\n          }\n          return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-th\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-board-th-body\", children: [\n            ((_b2 = group.value) == null ? void 0 : _b2.value) ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              Property,\n              {\n                schema,\n                data: [\n                  [\n                    ((_c2 = group.value) == null ? void 0 : _c2.value[boardGroupBy]) || ((_d2 = group.value) == null ? void 0 : _d2.value)\n                  ]\n                ],\n                collection\n              }\n            ) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"span\", { children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(EmptyIcon, { className: \"notion-board-th-empty\" }),\n              (schema == null ? void 0 : schema.name) ? `No ${schema.name}` : \"No Select\"\n            ] }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-board-th-count\", children: group.total })\n          ] }) }, index);\n        }) }) }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-header-placeholder\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-body\", children: boardGroups.map((p, index) => {\n          var _a2, _b2, _c2, _d2, _e;\n          const boardResults = (_a2 = collectionData.board_columns) == null ? void 0 : _a2.results;\n          if (!boardResults) return null;\n          if (!((_b2 = p == null ? void 0 : p.value) == null ? void 0 : _b2.type)) return null;\n          const schema = collection.schema[p.property];\n          const group = collectionData[`results:${(_c2 = p == null ? void 0 : p.value) == null ? void 0 : _c2.type}:${((_d2 = p == null ? void 0 : p.value) == null ? void 0 : _d2.value) || \"uncategorized\"}`];\n          if (!group || !schema || p.hidden) {\n            return null;\n          }\n          return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-group\", children: (_e = group.blockIds) == null ? void 0 : _e.map((blockId) => {\n            var _a3, _b3;\n            const block = (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;\n            if (!block) return null;\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              CollectionCard,\n              {\n                className: \"notion-board-group-card\",\n                collection,\n                block,\n                cover: board_cover,\n                coverSize: board_cover_size,\n                coverAspect: board_cover_aspect,\n                properties: (_b3 = collectionView.format) == null ? void 0 : _b3.board_properties\n              },\n              blockId\n            );\n          }) }, index);\n        }) })\n      ]\n    }\n  ) });\n}\n\n// src/third-party/collection-view-gallery.tsx\n\n\nvar defaultBlockIds = [];\nfunction CollectionViewGallery({\n  collection,\n  collectionView,\n  collectionData\n}) {\n  var _a, _b, _c, _d, _e;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData\n    );\n    return collectionGroups.map((group, index) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionGroup,\n      {\n        ...group,\n        collectionViewComponent: Gallery\n      },\n      index\n    ));\n  }\n  const blockIds = ((_e = (_d = (_b = collectionData.collection_group_results) == null ? void 0 : _b.blockIds) != null ? _d : (_c = collectionData[\"results:relation:uncategorized\"]) == null ? void 0 : _c.blockIds) != null ? _e : collectionData.blockIds) || defaultBlockIds;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    Gallery,\n    {\n      collectionView,\n      collection,\n      blockIds\n    }\n  );\n}\nfunction Gallery({\n  blockIds,\n  collectionView,\n  collection\n}) {\n  const { recordMap } = useNotionContext();\n  const {\n    gallery_cover = { type: \"none\" },\n    gallery_cover_size = \"medium\",\n    gallery_cover_aspect = \"cover\"\n  } = collectionView.format || {};\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-gallery\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-gallery-view\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    \"div\",\n    {\n      className: cs(\n        \"notion-gallery-grid\",\n        `notion-gallery-grid-size-${gallery_cover_size}`\n      ),\n      children: blockIds == null ? void 0 : blockIds.map((blockId) => {\n        var _a, _b;\n        const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n        if (!block) return null;\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          CollectionCard,\n          {\n            collection,\n            block,\n            cover: gallery_cover,\n            coverSize: gallery_cover_size,\n            coverAspect: gallery_cover_aspect,\n            properties: (_b = collectionView.format) == null ? void 0 : _b.gallery_properties\n          },\n          blockId\n        );\n      })\n    }\n  ) }) });\n}\n\n// src/third-party/collection-view-list.tsx\n\n\nvar defaultBlockIds2 = [];\nfunction CollectionViewList({\n  collection,\n  collectionView,\n  collectionData\n}) {\n  var _a, _b, _c;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData\n    );\n    return collectionGroups.map((group, key) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionGroup, { ...group, collectionViewComponent: List }, key));\n  }\n  const blockIds = ((_c = (_b = collectionData.collection_group_results) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds2;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    List,\n    {\n      blockIds,\n      collection,\n      collectionView\n    }\n  );\n}\nfunction List({\n  blockIds = [],\n  collection,\n  collectionView\n}) {\n  const { components, recordMap, mapPageUrl } = useNotionContext();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-list-collection\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-list-view\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-list-body\", children: blockIds == null ? void 0 : blockIds.map((blockId) => {\n    var _a, _b, _c, _d;\n    const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n    if (!block) return null;\n    const titleSchema = collection.schema.title;\n    const titleData = (_b = block == null ? void 0 : block.properties) == null ? void 0 : _b.title;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n      components.PageLink,\n      {\n        className: \"notion-list-item notion-page-link\",\n        href: mapPageUrl(block.id),\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-list-item-title\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            Property,\n            {\n              schema: titleSchema,\n              data: titleData,\n              block,\n              collection,\n              linkToTitlePage: false\n            }\n          ) }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-list-item-body\", children: (_d = (_c = collectionView.format) == null ? void 0 : _c.list_properties) == null ? void 0 : _d.filter((p) => p.visible).map((p) => {\n            var _a2;\n            const schema = collection.schema[p.property];\n            const data = block && ((_a2 = block.properties) == null ? void 0 : _a2[p.property]);\n            if (!schema) {\n              return null;\n            }\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              \"div\",\n              {\n                className: \"notion-list-item-property\",\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                  Property,\n                  {\n                    schema,\n                    data,\n                    block,\n                    collection\n                  }\n                )\n              },\n              p.property\n            );\n          }) })\n        ]\n      },\n      blockId\n    );\n  }) }) }) });\n}\n\n// src/third-party/collection-view-table.tsx\n\n\nvar defaultBlockIds3 = [];\nfunction CollectionViewTable({\n  collection,\n  collectionView,\n  collectionData,\n  padding,\n  width\n}) {\n  var _a, _b, _c;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData,\n      padding,\n      width\n    );\n    return collectionGroups.map((group, index) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionGroup,\n      {\n        ...group,\n        collectionViewComponent: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Table, { ...props, padding, width }),\n        summaryProps: {\n          style: {\n            paddingLeft: padding,\n            paddingRight: padding\n          }\n        }\n      },\n      index\n    ));\n  }\n  const blockIds = ((_c = (_b = collectionData.collection_group_results) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds3;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    Table,\n    {\n      blockIds,\n      collection,\n      collectionView,\n      padding,\n      width\n    }\n  );\n}\nfunction Table({\n  blockIds = [],\n  collection,\n  collectionView,\n  width,\n  padding\n}) {\n  var _a;\n  const { recordMap, linkTableTitleProperties } = useNotionContext();\n  const tableStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => ({\n      width,\n      maxWidth: width\n    }),\n    [width]\n  );\n  const tableViewStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => ({\n      paddingLeft: padding,\n      paddingRight: padding\n    }),\n    [padding]\n  );\n  let properties = [];\n  if ((_a = collectionView.format) == null ? void 0 : _a.table_properties) {\n    properties = collectionView.format.table_properties.filter(\n      (p) => p.visible && collection.schema[p.property]\n    );\n  } else {\n    properties = [{ property: \"title\" }].concat(\n      Object.keys(collection.schema).filter((p) => p !== \"title\").map((property) => ({ property }))\n    );\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table\", style: tableStyle, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-view\", style: tableViewStyle, children: !!properties.length && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-header\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-header-inner\", children: properties.map((p) => {\n      var _a2;\n      const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];\n      const isTitle = p.property === \"title\";\n      const style = {};\n      if (p.width) {\n        style.width = p.width;\n      } else if (isTitle) {\n        style.width = 280;\n      } else {\n        style.width = 200;\n      }\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-th\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"div\",\n        {\n          className: \"notion-table-view-header-cell\",\n          style,\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-view-header-cell-inner\", children: schema && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionColumnTitle, { schema }) })\n        }\n      ) }, p.property);\n    }) }) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-header-placeholder\" }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-body\", children: blockIds == null ? void 0 : blockIds.map((blockId) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-row\", children: properties.map((p) => {\n      var _a2, _b, _c;\n      const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];\n      const block = (_b = recordMap.block[blockId]) == null ? void 0 : _b.value;\n      const data = (_c = block == null ? void 0 : block.properties) == null ? void 0 : _c[p.property];\n      const isTitle = p.property === \"title\";\n      const style = {};\n      if (p.width) {\n        style.width = p.width;\n      } else if (isTitle) {\n        style.width = 280;\n      } else {\n        style.width = 200;\n      }\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"div\",\n        {\n          className: cs(\n            \"notion-table-cell\",\n            `notion-table-cell-${schema == null ? void 0 : schema.type}`\n          ),\n          style,\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            Property,\n            {\n              schema,\n              data,\n              block,\n              collection,\n              linkToTitlePage: linkTableTitleProperties\n            }\n          )\n        },\n        p.property\n      );\n    }) }, blockId)) })\n  ] }) }) });\n}\n\n// src/third-party/collection-view.tsx\n\nfunction CollectionViewImpl(props) {\n  const { collectionView } = props;\n  switch (collectionView.type) {\n    case \"table\":\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionViewTable, { ...props });\n    case \"gallery\":\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionViewGallery, { ...props });\n    case \"list\":\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionViewList, { ...props });\n    case \"board\":\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionViewBoard, { ...props });\n    default:\n      console.warn(\"unsupported collection view\", collectionView);\n      return null;\n  }\n}\nvar CollectionView = react__WEBPACK_IMPORTED_MODULE_0__.memo(CollectionViewImpl);\n\n// src/third-party/react-use.ts\n\nvar noop = () => {\n};\nfunction on(obj, ...args) {\n  if (obj && obj.addEventListener) {\n    obj.addEventListener(\n      ...args\n    );\n  }\n}\nfunction off(obj, ...args) {\n  if (obj && obj.removeEventListener) {\n    obj.removeEventListener(\n      ...args\n    );\n  }\n}\nvar isBrowser2 = typeof window !== \"undefined\";\nvar useWindowSize = (initialWidth = Infinity, initialHeight = Infinity) => {\n  const [state, setState] = useRafState({\n    width: isBrowser2 ? window.innerWidth : initialWidth,\n    height: isBrowser2 ? window.innerHeight : initialHeight\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (isBrowser2) {\n      const handler = () => {\n        setState({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      };\n      on(window, \"resize\", handler);\n      return () => {\n        off(window, \"resize\", handler);\n      };\n    }\n  }, []);\n  return state;\n};\nvar useEffectOnce = (effect) => {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(effect, []);\n};\nvar useUnmount = (fn) => {\n  const fnRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(fn);\n  fnRef.current = fn;\n  useEffectOnce(() => () => fnRef.current());\n};\nvar useRafState = (initialState) => {\n  const frame = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialState);\n  const setRafState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value) => {\n    cancelAnimationFrame(frame.current);\n    frame.current = requestAnimationFrame(() => {\n      setState(value);\n    });\n  }, []);\n  useUnmount(() => {\n    cancelAnimationFrame(frame.current);\n  });\n  return [state, setRafState];\n};\nvar useLocalStorage = (key, initialValue, options) => {\n  if (!isBrowser2) {\n    return [initialValue, noop, noop];\n  }\n  if (!key) {\n    throw new Error(\"useLocalStorage key may not be falsy\");\n  }\n  const deserializer = options ? options.raw ? (value) => value : options.deserializer : JSON.parse;\n  const initializer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)((key2) => {\n    try {\n      const serializer = options ? options.raw ? String : options.serializer : JSON.stringify;\n      const localStorageValue = localStorage.getItem(key2);\n      if (localStorageValue !== null) {\n        return deserializer(localStorageValue);\n      } else {\n        if (initialValue) {\n          localStorage.setItem(key2, serializer(initialValue));\n        }\n        return initialValue;\n      }\n    } catch (e) {\n      return initialValue;\n    }\n  });\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    () => initializer.current(key)\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => setState(initializer.current(key)), [key]);\n  const set = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (valOrFunc) => {\n      try {\n        const newState = typeof valOrFunc === \"function\" ? valOrFunc(state) : valOrFunc;\n        if (newState === void 0) return;\n        let value;\n        if (options)\n          if (options.raw)\n            if (typeof newState === \"string\") value = newState;\n            else value = JSON.stringify(newState);\n          else if (options.serializer) value = options.serializer(newState);\n          else value = JSON.stringify(newState);\n        else value = JSON.stringify(newState);\n        localStorage.setItem(key, value);\n        setState(deserializer(value));\n      } catch (e) {\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [key, setState]\n  );\n  const remove = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    try {\n      localStorage.removeItem(key);\n      setState(void 0);\n    } catch (e) {\n    }\n  }, [key, setState]);\n  return [state, set, remove];\n};\n\n// src/third-party/collection.tsx\n\nvar isServer2 = typeof window === \"undefined\";\nfunction Collection({\n  block,\n  className,\n  ctx: ctx2\n}) {\n  const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => ({\n      ...ctx2\n    }),\n    [ctx2]\n  );\n  if (block.type === \"page\") {\n    if (block.parent_table !== \"collection\") {\n      return null;\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(NotionContextProvider, { ...context, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-page-properties\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionRow,\n      {\n        block,\n        pageHeader: true,\n        className\n      }\n    ) }) });\n  } else {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(NotionContextProvider, { ...context, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionViewBlock, { block, className }) });\n  }\n}\nfunction CollectionViewBlock({\n  block,\n  className\n}) {\n  var _a, _b, _c, _d;\n  const { recordMap, showCollectionViewDropdown } = useNotionContext();\n  const { view_ids: viewIds } = block;\n  const collectionId = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockCollectionId)(block, recordMap);\n  const [isMounted, setIsMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    setIsMounted(true);\n  }, []);\n  const defaultCollectionViewId = viewIds[0];\n  const [collectionState, setCollectionState] = useLocalStorage(block.id, {\n    collectionViewId: defaultCollectionViewId\n  });\n  const collectionViewId = isMounted && viewIds.find((id) => id && id === (collectionState == null ? void 0 : collectionState.collectionViewId)) || defaultCollectionViewId;\n  const onChangeView = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (collectionViewId2) => {\n      console.log(\"change collection view\", collectionViewId2);\n      setCollectionState({\n        ...collectionState,\n        collectionViewId: collectionViewId2\n      });\n    },\n    [collectionState, setCollectionState]\n  );\n  let { width: windowWidth } = useWindowSize();\n  if (isServer2) {\n    windowWidth = 1024;\n  }\n  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;\n  const collectionView = (_b = recordMap.collection_view[collectionViewId]) == null ? void 0 : _b.value;\n  const collectionData = (_c = recordMap.collection_query[collectionId]) == null ? void 0 : _c[collectionViewId];\n  const parentPage = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockParentPage)(block, recordMap);\n  const { width, padding } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    var _a2;\n    const style = {};\n    if ((collectionView == null ? void 0 : collectionView.type) !== \"table\" && (collectionView == null ? void 0 : collectionView.type) !== \"board\") {\n      return {\n        style,\n        width: 0,\n        padding: 0\n      };\n    }\n    const width2 = windowWidth;\n    const maxNotionBodyWidth = 708;\n    let notionBodyWidth = maxNotionBodyWidth;\n    if ((_a2 = parentPage == null ? void 0 : parentPage.format) == null ? void 0 : _a2.page_full_width) {\n      notionBodyWidth = Math.trunc(width2 - 2 * Math.min(96, width2 * 0.08));\n    } else {\n      notionBodyWidth = width2 < maxNotionBodyWidth ? Math.trunc(width2 - width2 * 0.02) : maxNotionBodyWidth;\n    }\n    const padding2 = isServer2 && !isMounted ? 96 : Math.trunc((width2 - notionBodyWidth) / 2);\n    style.paddingLeft = padding2;\n    style.paddingRight = padding2;\n    return {\n      style,\n      width: width2,\n      padding: padding2\n    };\n  }, [windowWidth, parentPage, collectionView == null ? void 0 : collectionView.type, isMounted]);\n  if (!(collection && collectionView && collectionData)) {\n    console.warn(\"skipping missing collection view for block\", block.id, {\n      collectionId,\n      collectionViewId,\n      collectionView,\n      collectionData,\n      recordMap\n    });\n    return null;\n  }\n  const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getTextContent)(collection.name).trim();\n  const showTitle = ((_d = collectionView.format) == null ? void 0 : _d.hide_linked_collection_name) !== true && title;\n  if (collection.icon) {\n    block.format = {\n      ...block.format,\n      page_icon: collection.icon\n    };\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { children: viewIds.length > 1 && showCollectionViewDropdown && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        CollectionViewTabs,\n        {\n          collectionViewId,\n          viewIds,\n          onChangeView\n        }\n      ) }),\n      showTitle && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-header\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-collection-header-title\", children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          PageIcon,\n          {\n            block,\n            className: \"notion-page-title-icon\",\n            hideDefaultIcon: true\n          }\n        ),\n        title\n      ] }) })\n    ] }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: cs(\"notion-collection\", className), children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionView,\n      {\n        collection,\n        collectionView,\n        collectionData,\n        padding,\n        width\n      }\n    ) })\n  ] });\n}\nfunction CollectionViewTabs({\n  collectionViewId,\n  viewIds,\n  onChangeView\n}) {\n  const { recordMap } = useNotionContext();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-view-tabs-row\", children: viewIds.map((viewId) => {\n    var _a;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      \"button\",\n      {\n        onClick: () => onChangeView(viewId),\n        className: cs(\n          \"notion-collection-view-tabs-content-item\",\n          collectionViewId === viewId && \"notion-collection-view-tabs-content-item-active\"\n        ),\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          CollectionViewColumnDesc,\n          {\n            collectionView: (_a = recordMap.collection_view[viewId]) == null ? void 0 : _a.value\n          }\n        )\n      },\n      viewId\n    );\n  }) });\n}\nfunction CollectionViewColumnDesc({\n  collectionView,\n  className,\n  children,\n  ...rest\n}) {\n  if (!collectionView) return null;\n  const { type } = collectionView;\n  const name = collectionView.name || `${type[0].toUpperCase()}${type.slice(1)} view`;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: cs(\"notion-collection-view-type\", className), ...rest, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionViewIcon,\n      {\n        className: \"notion-collection-view-type-icon\",\n        type\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-collection-view-type-title\", children: name }),\n    children\n  ] });\n}\n\n//# sourceMappingURL=collection.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvLnBucG0vcmVhY3Qtbm90aW9uLXhANy4yLjNfQGJhYmVsX2ZjN2MxODJjNjRkMDk2NjI2ODRiMTBiMThkYjVlZDRhL25vZGVfbW9kdWxlcy9yZWFjdC1ub3Rpb24teC9idWlsZC90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDQSwyREFBMkQsYUFBYTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQSxtR0FBbUc7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsOEJBQThCO0FBQ3ZHO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDhCQUE4QjtBQUN4RDtBQUNBO0FBQ0EsVUFBVTtBQUNW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Q0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isb0JBQW9CO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkIsNkJBQTZCO0FBQzFEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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QTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELGFBQWE7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxhQUFhO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxjQUFjO0FBQ3RFO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxnQkFBZ0I7QUFDMUU7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsZ0JBQWdCO0FBQzFFO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGdCQUFnQjtBQUNoRDtBQUNBLGdDQUFnQyxpQkFBaUI7QUFDakQ7QUFDQSxnQ0FBZ0MsZUFBZTtBQUMvQztBQUNBO0FBQ0EsZ0NBQWdDLGVBQWU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxnQkFBZ0I7QUFDaEQ7QUFDQSxnQ0FBZ0MsaUJBQWlCO0FBQ2pEO0FBQ0EsZ0NBQWdDLGVBQWU7QUFDL0M7QUFDQTtBQUNBLGdDQUFnQyxlQUFlO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxnQkFBZ0I7QUFDOUQ7QUFDQTtBQUNBLDhDQUE4QyxpQkFBaUI7QUFDL0Q7QUFDQTtBQUNBLDhDQUE4QyxlQUFlO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxlQUFlO0FBQzdEO0FBQ0E7QUFDQSxtQ0FBbUMsTUFBTSwyREFBMkQsTUFBTTtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isb0JBQW9CLGtCQUFrQixNQUFNLFdBQVcsUUFBUSxxQkFBcUIsU0FBUyxpQkFBaUIsTUFBTSxJQUFJO0FBQzFJOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDc0I7QUFDVzs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FB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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxHQUFHO0FBQ1osT0FBTztBQUNQLG9CQUFvQixzREFBSyxVQUFVLHlFQUF5RSxzREFBSztBQUNqSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELFVBQVUsWUFBWTtBQUN0Qix5QkFBeUIsc0RBQUssVUFBVTtBQUN4QztBQUNBLDJCQUEyQixzREFBSztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxzREFBSztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxHQUFHLEdBQUc7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxVQUFVLE9BQU87QUFDakIseUNBQXlDLHNCQUFzQixFQUFFLGVBQWU7QUFDaEYseUJBQXlCLHVEQUFNLFVBQVU7QUFDekMsb0JBQW9CLHNEQUFLO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzREFBSyxXQUFXLGdFQUFnRTtBQUNwRztBQUNBLEtBQUs7QUFDTDtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5pc3RyYXRvclxcRGVza3RvcFxca2VuXFxDb2RlXFxuZXh0anMtbm90aW9uLXN0YXJ0ZXIta2l0LW1haW5cXG5vZGVfbW9kdWxlc1xcLnBucG1cXHJlYWN0LW5vdGlvbi14QDcuMi4zX0BiYWJlbF9mYzdjMTgyYzY0ZDA5NjYyNjg0YjEwYjE4ZGI1ZWQ0YVxcbm9kZV9tb2R1bGVzXFxyZWFjdC1ub3Rpb24teFxcYnVpbGRcXHRoaXJkLXBhcnR5XFxjb2xsZWN0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2NyZWF0ZSA9IE9iamVjdC5jcmVhdGU7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIF9fZ2V0T3duUHJvcE5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgX19nZXRQcm90b09mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19jb21tb25KUyA9IChjYiwgbW9kKSA9PiBmdW5jdGlvbiBfX3JlcXVpcmUoKSB7XG4gIHJldHVybiBtb2QgfHwgKDAsIGNiW19fZ2V0T3duUHJvcE5hbWVzKGNiKVswXV0pKChtb2QgPSB7IGV4cG9ydHM6IHt9IH0pLmV4cG9ydHMsIG1vZCksIG1vZC5leHBvcnRzO1xufTtcbnZhciBfX2NvcHlQcm9wcyA9ICh0bywgZnJvbSwgZXhjZXB0LCBkZXNjKSA9PiB7XG4gIGlmIChmcm9tICYmIHR5cGVvZiBmcm9tID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBmcm9tID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBmb3IgKGxldCBrZXkgb2YgX19nZXRPd25Qcm9wTmFtZXMoZnJvbSkpXG4gICAgICBpZiAoIV9faGFzT3duUHJvcC5jYWxsKHRvLCBrZXkpICYmIGtleSAhPT0gZXhjZXB0KVxuICAgICAgICBfX2RlZlByb3AodG8sIGtleSwgeyBnZXQ6ICgpID0+IGZyb21ba2V5XSwgZW51bWVyYWJsZTogIShkZXNjID0gX19nZXRPd25Qcm9wRGVzYyhmcm9tLCBrZXkpKSB8fCBkZXNjLmVudW1lcmFibGUgfSk7XG4gIH1cbiAgcmV0dXJuIHRvO1xufTtcbnZhciBfX3RvRVNNID0gKG1vZCwgaXNOb2RlTW9kZSwgdGFyZ2V0KSA9PiAodGFyZ2V0ID0gbW9kICE9IG51bGwgPyBfX2NyZWF0ZShfX2dldFByb3RvT2YobW9kKSkgOiB7fSwgX19jb3B5UHJvcHMoXG4gIC8vIElmIHRoZSBpbXBvcnRlciBpcyBpbiBub2RlIGNvbXBhdGliaWxpdHkgbW9kZSBvciB0aGlzIGlzIG5vdCBhbiBFU01cbiAgLy8gZmlsZSB0aGF0IGhhcyBiZWVuIGNvbnZlcnRlZCB0byBhIENvbW1vbkpTIGZpbGUgdXNpbmcgYSBCYWJlbC1cbiAgLy8gY29tcGF0aWJsZSB0cmFuc2Zvcm0gKGkuZS4gXCJfX2VzTW9kdWxlXCIgaGFzIG5vdCBiZWVuIHNldCksIHRoZW4gc2V0XG4gIC8vIFwiZGVmYXVsdFwiIHRvIHRoZSBDb21tb25KUyBcIm1vZHVsZS5leHBvcnRzXCIgZm9yIG5vZGUgY29tcGF0aWJpbGl0eS5cbiAgaXNOb2RlTW9kZSB8fCAhbW9kIHx8ICFtb2QuX19lc01vZHVsZSA/IF9fZGVmUHJvcCh0YXJnZXQsIFwiZGVmYXVsdFwiLCB7IHZhbHVlOiBtb2QsIGVudW1lcmFibGU6IHRydWUgfSkgOiB0YXJnZXQsXG4gIG1vZFxuKSk7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9sb2Rhc2gudGhyb3R0bGVANC4xLjEvbm9kZV9tb2R1bGVzL2xvZGFzaC50aHJvdHRsZS9pbmRleC5qc1xudmFyIHJlcXVpcmVfbG9kYXNoID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2xvZGFzaC50aHJvdHRsZUA0LjEuMS9ub2RlX21vZHVsZXMvbG9kYXNoLnRocm90dGxlL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgdmFyIEZVTkNfRVJST1JfVEVYVCA9IFwiRXhwZWN0ZWQgYSBmdW5jdGlvblwiO1xuICAgIHZhciBOQU4gPSAwIC8gMDtcbiAgICB2YXIgc3ltYm9sVGFnID0gXCJbb2JqZWN0IFN5bWJvbF1cIjtcbiAgICB2YXIgcmVUcmltID0gL15cXHMrfFxccyskL2c7XG4gICAgdmFyIHJlSXNCYWRIZXggPSAvXlstK10weFswLTlhLWZdKyQvaTtcbiAgICB2YXIgcmVJc0JpbmFyeSA9IC9eMGJbMDFdKyQvaTtcbiAgICB2YXIgcmVJc09jdGFsID0gL14wb1swLTddKyQvaTtcbiAgICB2YXIgZnJlZVBhcnNlSW50ID0gcGFyc2VJbnQ7XG4gICAgdmFyIGZyZWVHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsID09IFwib2JqZWN0XCIgJiYgZ2xvYmFsICYmIGdsb2JhbC5PYmplY3QgPT09IE9iamVjdCAmJiBnbG9iYWw7XG4gICAgdmFyIGZyZWVTZWxmID0gdHlwZW9mIHNlbGYgPT0gXCJvYmplY3RcIiAmJiBzZWxmICYmIHNlbGYuT2JqZWN0ID09PSBPYmplY3QgJiYgc2VsZjtcbiAgICB2YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xuICAgIHZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG4gICAgdmFyIG9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG4gICAgdmFyIG5hdGl2ZU1heCA9IE1hdGgubWF4O1xuICAgIHZhciBuYXRpdmVNaW4gPSBNYXRoLm1pbjtcbiAgICB2YXIgbm93ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gcm9vdC5EYXRlLm5vdygpO1xuICAgIH07XG4gICAgZnVuY3Rpb24gZGVib3VuY2UoZnVuYywgd2FpdCwgb3B0aW9ucykge1xuICAgICAgdmFyIGxhc3RBcmdzLCBsYXN0VGhpcywgbWF4V2FpdCwgcmVzdWx0LCB0aW1lcklkLCBsYXN0Q2FsbFRpbWUsIGxhc3RJbnZva2VUaW1lID0gMCwgbGVhZGluZyA9IGZhbHNlLCBtYXhpbmcgPSBmYWxzZSwgdHJhaWxpbmcgPSB0cnVlO1xuICAgICAgaWYgKHR5cGVvZiBmdW5jICE9IFwiZnVuY3Rpb25cIikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEZVTkNfRVJST1JfVEVYVCk7XG4gICAgICB9XG4gICAgICB3YWl0ID0gdG9OdW1iZXIod2FpdCkgfHwgMDtcbiAgICAgIGlmIChpc09iamVjdChvcHRpb25zKSkge1xuICAgICAgICBsZWFkaW5nID0gISFvcHRpb25zLmxlYWRpbmc7XG4gICAgICAgIG1heGluZyA9IFwibWF4V2FpdFwiIGluIG9wdGlvbnM7XG4gICAgICAgIG1heFdhaXQgPSBtYXhpbmcgPyBuYXRpdmVNYXgodG9OdW1iZXIob3B0aW9ucy5tYXhXYWl0KSB8fCAwLCB3YWl0KSA6IG1heFdhaXQ7XG4gICAgICAgIHRyYWlsaW5nID0gXCJ0cmFpbGluZ1wiIGluIG9wdGlvbnMgPyAhIW9wdGlvbnMudHJhaWxpbmcgOiB0cmFpbGluZztcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGludm9rZUZ1bmModGltZSkge1xuICAgICAgICB2YXIgYXJncyA9IGxhc3RBcmdzLCB0aGlzQXJnID0gbGFzdFRoaXM7XG4gICAgICAgIGxhc3RBcmdzID0gbGFzdFRoaXMgPSB2b2lkIDA7XG4gICAgICAgIGxhc3RJbnZva2VUaW1lID0gdGltZTtcbiAgICAgICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGxlYWRpbmdFZGdlKHRpbWUpIHtcbiAgICAgICAgbGFzdEludm9rZVRpbWUgPSB0aW1lO1xuICAgICAgICB0aW1lcklkID0gc2V0VGltZW91dCh0aW1lckV4cGlyZWQsIHdhaXQpO1xuICAgICAgICByZXR1cm4gbGVhZGluZyA/IGludm9rZUZ1bmModGltZSkgOiByZXN1bHQ7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiByZW1haW5pbmdXYWl0KHRpbWUpIHtcbiAgICAgICAgdmFyIHRpbWVTaW5jZUxhc3RDYWxsID0gdGltZSAtIGxhc3RDYWxsVGltZSwgdGltZVNpbmNlTGFzdEludm9rZSA9IHRpbWUgLSBsYXN0SW52b2tlVGltZSwgcmVzdWx0MiA9IHdhaXQgLSB0aW1lU2luY2VMYXN0Q2FsbDtcbiAgICAgICAgcmV0dXJuIG1heGluZyA/IG5hdGl2ZU1pbihyZXN1bHQyLCBtYXhXYWl0IC0gdGltZVNpbmNlTGFzdEludm9rZSkgOiByZXN1bHQyO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gc2hvdWxkSW52b2tlKHRpbWUpIHtcbiAgICAgICAgdmFyIHRpbWVTaW5jZUxhc3RDYWxsID0gdGltZSAtIGxhc3RDYWxsVGltZSwgdGltZVNpbmNlTGFzdEludm9rZSA9IHRpbWUgLSBsYXN0SW52b2tlVGltZTtcbiAgICAgICAgcmV0dXJuIGxhc3RDYWxsVGltZSA9PT0gdm9pZCAwIHx8IHRpbWVTaW5jZUxhc3RDYWxsID49IHdhaXQgfHwgdGltZVNpbmNlTGFzdENhbGwgPCAwIHx8IG1heGluZyAmJiB0aW1lU2luY2VMYXN0SW52b2tlID49IG1heFdhaXQ7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiB0aW1lckV4cGlyZWQoKSB7XG4gICAgICAgIHZhciB0aW1lID0gbm93KCk7XG4gICAgICAgIGlmIChzaG91bGRJbnZva2UodGltZSkpIHtcbiAgICAgICAgICByZXR1cm4gdHJhaWxpbmdFZGdlKHRpbWUpO1xuICAgICAgICB9XG4gICAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgcmVtYWluaW5nV2FpdCh0aW1lKSk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiB0cmFpbGluZ0VkZ2UodGltZSkge1xuICAgICAgICB0aW1lcklkID0gdm9pZCAwO1xuICAgICAgICBpZiAodHJhaWxpbmcgJiYgbGFzdEFyZ3MpIHtcbiAgICAgICAgICByZXR1cm4gaW52b2tlRnVuYyh0aW1lKTtcbiAgICAgICAgfVxuICAgICAgICBsYXN0QXJncyA9IGxhc3RUaGlzID0gdm9pZCAwO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgICAgICBpZiAodGltZXJJZCAhPT0gdm9pZCAwKSB7XG4gICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVySWQpO1xuICAgICAgICB9XG4gICAgICAgIGxhc3RJbnZva2VUaW1lID0gMDtcbiAgICAgICAgbGFzdEFyZ3MgPSBsYXN0Q2FsbFRpbWUgPSBsYXN0VGhpcyA9IHRpbWVySWQgPSB2b2lkIDA7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBmbHVzaCgpIHtcbiAgICAgICAgcmV0dXJuIHRpbWVySWQgPT09IHZvaWQgMCA/IHJlc3VsdCA6IHRyYWlsaW5nRWRnZShub3coKSk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBkZWJvdW5jZWQoKSB7XG4gICAgICAgIHZhciB0aW1lID0gbm93KCksIGlzSW52b2tpbmcgPSBzaG91bGRJbnZva2UodGltZSk7XG4gICAgICAgIGxhc3RBcmdzID0gYXJndW1lbnRzO1xuICAgICAgICBsYXN0VGhpcyA9IHRoaXM7XG4gICAgICAgIGxhc3RDYWxsVGltZSA9IHRpbWU7XG4gICAgICAgIGlmIChpc0ludm9raW5nKSB7XG4gICAgICAgICAgaWYgKHRpbWVySWQgPT09IHZvaWQgMCkge1xuICAgICAgICAgICAgcmV0dXJuIGxlYWRpbmdFZGdlKGxhc3RDYWxsVGltZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChtYXhpbmcpIHtcbiAgICAgICAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgICAgICAgICByZXR1cm4gaW52b2tlRnVuYyhsYXN0Q2FsbFRpbWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodGltZXJJZCA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgdGltZXJJZCA9IHNldFRpbWVvdXQodGltZXJFeHBpcmVkLCB3YWl0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgICAgZGVib3VuY2VkLmNhbmNlbCA9IGNhbmNlbDtcbiAgICAgIGRlYm91bmNlZC5mbHVzaCA9IGZsdXNoO1xuICAgICAgcmV0dXJuIGRlYm91bmNlZDtcbiAgICB9XG4gICAgZnVuY3Rpb24gdGhyb3R0bGUyKGZ1bmMsIHdhaXQsIG9wdGlvbnMpIHtcbiAgICAgIHZhciBsZWFkaW5nID0gdHJ1ZSwgdHJhaWxpbmcgPSB0cnVlO1xuICAgICAgaWYgKHR5cGVvZiBmdW5jICE9IFwiZnVuY3Rpb25cIikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEZVTkNfRVJST1JfVEVYVCk7XG4gICAgICB9XG4gICAgICBpZiAoaXNPYmplY3Qob3B0aW9ucykpIHtcbiAgICAgICAgbGVhZGluZyA9IFwibGVhZGluZ1wiIGluIG9wdGlvbnMgPyAhIW9wdGlvbnMubGVhZGluZyA6IGxlYWRpbmc7XG4gICAgICAgIHRyYWlsaW5nID0gXCJ0cmFpbGluZ1wiIGluIG9wdGlvbnMgPyAhIW9wdGlvbnMudHJhaWxpbmcgOiB0cmFpbGluZztcbiAgICAgIH1cbiAgICAgIHJldHVybiBkZWJvdW5jZShmdW5jLCB3YWl0LCB7XG4gICAgICAgIFwibGVhZGluZ1wiOiBsZWFkaW5nLFxuICAgICAgICBcIm1heFdhaXRcIjogd2FpdCxcbiAgICAgICAgXCJ0cmFpbGluZ1wiOiB0cmFpbGluZ1xuICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gICAgICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgICAgIHJldHVybiAhIXZhbHVlICYmICh0eXBlID09IFwib2JqZWN0XCIgfHwgdHlwZSA9PSBcImZ1bmN0aW9uXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBpc09iamVjdExpa2UodmFsdWUpIHtcbiAgICAgIHJldHVybiAhIXZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiO1xuICAgIH1cbiAgICBmdW5jdGlvbiBpc1N5bWJvbCh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSBcInN5bWJvbFwiIHx8IGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT0gc3ltYm9sVGFnO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0b051bWJlcih2YWx1ZSkge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIGlmIChpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIE5BTjtcbiAgICAgIH1cbiAgICAgIGlmIChpc09iamVjdCh2YWx1ZSkpIHtcbiAgICAgICAgdmFyIG90aGVyID0gdHlwZW9mIHZhbHVlLnZhbHVlT2YgPT0gXCJmdW5jdGlvblwiID8gdmFsdWUudmFsdWVPZigpIDogdmFsdWU7XG4gICAgICAgIHZhbHVlID0gaXNPYmplY3Qob3RoZXIpID8gb3RoZXIgKyBcIlwiIDogb3RoZXI7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIHZhbHVlICE9IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlID09PSAwID8gdmFsdWUgOiArdmFsdWU7XG4gICAgICB9XG4gICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UocmVUcmltLCBcIlwiKTtcbiAgICAgIHZhciBpc0JpbmFyeSA9IHJlSXNCaW5hcnkudGVzdCh2YWx1ZSk7XG4gICAgICByZXR1cm4gaXNCaW5hcnkgfHwgcmVJc09jdGFsLnRlc3QodmFsdWUpID8gZnJlZVBhcnNlSW50KHZhbHVlLnNsaWNlKDIpLCBpc0JpbmFyeSA/IDIgOiA4KSA6IHJlSXNCYWRIZXgudGVzdCh2YWx1ZSkgPyBOQU4gOiArdmFsdWU7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gdGhyb3R0bGUyO1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2Zvcm1hdC1udW1iZXJAMy4wLjAvbm9kZV9tb2R1bGVzL2Zvcm1hdC1udW1iZXIvaW5kZXguanNcbnZhciByZXF1aXJlX2Zvcm1hdF9udW1iZXIgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZm9ybWF0LW51bWJlckAzLjAuMC9ub2RlX21vZHVsZXMvZm9ybWF0LW51bWJlci9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIG1vZHVsZS5leHBvcnRzID0gZm9ybWF0dGVyO1xuICAgIG1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBmb3JtYXR0ZXI7XG4gICAgZnVuY3Rpb24gZm9ybWF0dGVyKG9wdGlvbnMpIHtcbiAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgb3B0aW9ucy5uZWdhdGl2ZVR5cGUgPSBvcHRpb25zLm5lZ2F0aXZlVHlwZSB8fCAob3B0aW9ucy5uZWdhdGl2ZSA9PT0gXCJSXCIgPyBcInJpZ2h0XCIgOiBcImxlZnRcIik7XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbnMubmVnYXRpdmVMZWZ0U3ltYm9sICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHN3aXRjaCAob3B0aW9ucy5uZWdhdGl2ZVR5cGUpIHtcbiAgICAgICAgICBjYXNlIFwibGVmdFwiOlxuICAgICAgICAgICAgb3B0aW9ucy5uZWdhdGl2ZUxlZnRTeW1ib2wgPSBcIi1cIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJicmFja2V0c1wiOlxuICAgICAgICAgICAgb3B0aW9ucy5uZWdhdGl2ZUxlZnRTeW1ib2wgPSBcIihcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBvcHRpb25zLm5lZ2F0aXZlTGVmdFN5bWJvbCA9IFwiXCI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5uZWdhdGl2ZVJpZ2h0U3ltYm9sICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHN3aXRjaCAob3B0aW9ucy5uZWdhdGl2ZVR5cGUpIHtcbiAgICAgICAgICBjYXNlIFwicmlnaHRcIjpcbiAgICAgICAgICAgIG9wdGlvbnMubmVnYXRpdmVSaWdodFN5bWJvbCA9IFwiLVwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcImJyYWNrZXRzXCI6XG4gICAgICAgICAgICBvcHRpb25zLm5lZ2F0aXZlUmlnaHRTeW1ib2wgPSBcIilcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBvcHRpb25zLm5lZ2F0aXZlUmlnaHRTeW1ib2wgPSBcIlwiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbnMubmVnYXRpdmVMZWZ0T3V0ICE9PSBcImJvb2xlYW5cIikge1xuICAgICAgICBvcHRpb25zLm5lZ2F0aXZlTGVmdE91dCA9IG9wdGlvbnMubmVnYXRpdmVPdXQgPT09IGZhbHNlID8gZmFsc2UgOiB0cnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLm5lZ2F0aXZlUmlnaHRPdXQgIT09IFwiYm9vbGVhblwiKSB7XG4gICAgICAgIG9wdGlvbnMubmVnYXRpdmVSaWdodE91dCA9IG9wdGlvbnMubmVnYXRpdmVPdXQgPT09IGZhbHNlID8gZmFsc2UgOiB0cnVlO1xuICAgICAgfVxuICAgICAgb3B0aW9ucy5wcmVmaXggPSBvcHRpb25zLnByZWZpeCB8fCBcIlwiO1xuICAgICAgb3B0aW9ucy5zdWZmaXggPSBvcHRpb25zLnN1ZmZpeCB8fCBcIlwiO1xuICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLmludGVnZXJTZXBhcmF0b3IgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgb3B0aW9ucy5pbnRlZ2VyU2VwYXJhdG9yID0gdHlwZW9mIG9wdGlvbnMuc2VwYXJhdG9yID09PSBcInN0cmluZ1wiID8gb3B0aW9ucy5zZXBhcmF0b3IgOiBcIixcIjtcbiAgICAgIH1cbiAgICAgIG9wdGlvbnMuZGVjaW1hbHNTZXBhcmF0b3IgPSB0eXBlb2Ygb3B0aW9ucy5kZWNpbWFsc1NlcGFyYXRvciA9PT0gXCJzdHJpbmdcIiA/IG9wdGlvbnMuZGVjaW1hbHNTZXBhcmF0b3IgOiBcIlwiO1xuICAgICAgb3B0aW9ucy5kZWNpbWFsID0gb3B0aW9ucy5kZWNpbWFsIHx8IFwiLlwiO1xuICAgICAgb3B0aW9ucy5wYWRMZWZ0ID0gb3B0aW9ucy5wYWRMZWZ0IHx8IC0xO1xuICAgICAgb3B0aW9ucy5wYWRSaWdodCA9IG9wdGlvbnMucGFkUmlnaHQgfHwgLTE7XG4gICAgICBmdW5jdGlvbiBmb3JtYXQyKG51bWJlciwgb3ZlcnJpZGVPcHRpb25zKSB7XG4gICAgICAgIG92ZXJyaWRlT3B0aW9ucyA9IG92ZXJyaWRlT3B0aW9ucyB8fCB7fTtcbiAgICAgICAgaWYgKG51bWJlciB8fCBudW1iZXIgPT09IDApIHtcbiAgICAgICAgICBudW1iZXIgPSBcIlwiICsgbnVtYmVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICB9XG4gICAgICAgIHZhciBvdXRwdXQgPSBbXTtcbiAgICAgICAgdmFyIG5lZ2F0aXZlID0gbnVtYmVyLmNoYXJBdCgwKSA9PT0gXCItXCI7XG4gICAgICAgIG51bWJlciA9IG51bWJlci5yZXBsYWNlKC9eXFwtL2csIFwiXCIpO1xuICAgICAgICBpZiAoIW9wdGlvbnMubmVnYXRpdmVMZWZ0T3V0ICYmICFvdmVycmlkZU9wdGlvbnMubm9Vbml0cykge1xuICAgICAgICAgIG91dHB1dC5wdXNoKG9wdGlvbnMucHJlZml4KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobmVnYXRpdmUpIHtcbiAgICAgICAgICBvdXRwdXQucHVzaChvcHRpb25zLm5lZ2F0aXZlTGVmdFN5bWJvbCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMubmVnYXRpdmVMZWZ0T3V0ICYmICFvdmVycmlkZU9wdGlvbnMubm9Vbml0cykge1xuICAgICAgICAgIG91dHB1dC5wdXNoKG9wdGlvbnMucHJlZml4KTtcbiAgICAgICAgfVxuICAgICAgICBudW1iZXIgPSBudW1iZXIuc3BsaXQoXCIuXCIpO1xuICAgICAgICBpZiAob3B0aW9ucy5yb3VuZCAhPSBudWxsKSByb3VuZChudW1iZXIsIG9wdGlvbnMucm91bmQpO1xuICAgICAgICBpZiAob3B0aW9ucy50cnVuY2F0ZSAhPSBudWxsKSBudW1iZXJbMV0gPSB0cnVuY2F0ZShudW1iZXJbMV0sIG9wdGlvbnMudHJ1bmNhdGUpO1xuICAgICAgICBpZiAob3B0aW9ucy5wYWRMZWZ0ID4gMCkgbnVtYmVyWzBdID0gcGFkTGVmdChudW1iZXJbMF0sIG9wdGlvbnMucGFkTGVmdCk7XG4gICAgICAgIGlmIChvcHRpb25zLnBhZFJpZ2h0ID4gMCkgbnVtYmVyWzFdID0gcGFkUmlnaHQobnVtYmVyWzFdLCBvcHRpb25zLnBhZFJpZ2h0KTtcbiAgICAgICAgaWYgKCFvdmVycmlkZU9wdGlvbnMubm9TZXBhcmF0b3IgJiYgbnVtYmVyWzFdKSBudW1iZXJbMV0gPSBhZGREZWNpbWFsU2VwYXJhdG9ycyhudW1iZXJbMV0sIG9wdGlvbnMuZGVjaW1hbHNTZXBhcmF0b3IpO1xuICAgICAgICBpZiAoIW92ZXJyaWRlT3B0aW9ucy5ub1NlcGFyYXRvciAmJiBudW1iZXJbMF0pIG51bWJlclswXSA9IGFkZEludGVnZXJTZXBhcmF0b3JzKG51bWJlclswXSwgb3B0aW9ucy5pbnRlZ2VyU2VwYXJhdG9yKTtcbiAgICAgICAgb3V0cHV0LnB1c2gobnVtYmVyWzBdKTtcbiAgICAgICAgaWYgKG51bWJlclsxXSkge1xuICAgICAgICAgIG91dHB1dC5wdXNoKG9wdGlvbnMuZGVjaW1hbCk7XG4gICAgICAgICAgb3V0cHV0LnB1c2gobnVtYmVyWzFdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucy5uZWdhdGl2ZVJpZ2h0T3V0ICYmICFvdmVycmlkZU9wdGlvbnMubm9Vbml0cykge1xuICAgICAgICAgIG91dHB1dC5wdXNoKG9wdGlvbnMuc3VmZml4KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobmVnYXRpdmUpIHtcbiAgICAgICAgICBvdXRwdXQucHVzaChvcHRpb25zLm5lZ2F0aXZlUmlnaHRTeW1ib2wpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghb3B0aW9ucy5uZWdhdGl2ZVJpZ2h0T3V0ICYmICFvdmVycmlkZU9wdGlvbnMubm9Vbml0cykge1xuICAgICAgICAgIG91dHB1dC5wdXNoKG9wdGlvbnMuc3VmZml4KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0cHV0LmpvaW4oXCJcIik7XG4gICAgICB9XG4gICAgICBmb3JtYXQyLm5lZ2F0aXZlID0gb3B0aW9ucy5uZWdhdGl2ZTtcbiAgICAgIGZvcm1hdDIubmVnYXRpdmVPdXQgPSBvcHRpb25zLm5lZ2F0aXZlT3V0O1xuICAgICAgZm9ybWF0Mi5uZWdhdGl2ZVR5cGUgPSBvcHRpb25zLm5lZ2F0aXZlVHlwZTtcbiAgICAgIGZvcm1hdDIubmVnYXRpdmVMZWZ0T3V0ID0gb3B0aW9ucy5uZWdhdGl2ZUxlZnRPdXQ7XG4gICAgICBmb3JtYXQyLm5lZ2F0aXZlTGVmdFN5bWJvbCA9IG9wdGlvbnMubmVnYXRpdmVMZWZ0U3ltYm9sO1xuICAgICAgZm9ybWF0Mi5uZWdhdGl2ZVJpZ2h0T3V0ID0gb3B0aW9ucy5uZWdhdGl2ZVJpZ2h0T3V0O1xuICAgICAgZm9ybWF0Mi5uZWdhdGl2ZVJpZ2h0U3ltYm9sID0gb3B0aW9ucy5uZWdhdGl2ZVJpZ2h0U3ltYm9sO1xuICAgICAgZm9ybWF0Mi5wcmVmaXggPSBvcHRpb25zLnByZWZpeDtcbiAgICAgIGZvcm1hdDIuc3VmZml4ID0gb3B0aW9ucy5zdWZmaXg7XG4gICAgICBmb3JtYXQyLnNlcGFyYXRlID0gb3B0aW9ucy5zZXBhcmF0ZTtcbiAgICAgIGZvcm1hdDIuaW50ZWdlclNlcGFyYXRvciA9IG9wdGlvbnMuaW50ZWdlclNlcGFyYXRvcjtcbiAgICAgIGZvcm1hdDIuZGVjaW1hbHNTZXBhcmF0b3IgPSBvcHRpb25zLmRlY2ltYWxzU2VwYXJhdG9yO1xuICAgICAgZm9ybWF0Mi5kZWNpbWFsID0gb3B0aW9ucy5kZWNpbWFsO1xuICAgICAgZm9ybWF0Mi5wYWRMZWZ0ID0gb3B0aW9ucy5wYWRMZWZ0O1xuICAgICAgZm9ybWF0Mi5wYWRSaWdodCA9IG9wdGlvbnMucGFkUmlnaHQ7XG4gICAgICBmb3JtYXQyLnRydW5jYXRlID0gb3B0aW9ucy50cnVuY2F0ZTtcbiAgICAgIGZvcm1hdDIucm91bmQgPSBvcHRpb25zLnJvdW5kO1xuICAgICAgZnVuY3Rpb24gdW5mb3JtYXQobnVtYmVyLCBhbGxvd2VkU2VwYXJhdG9ycykge1xuICAgICAgICBhbGxvd2VkU2VwYXJhdG9ycyA9IGFsbG93ZWRTZXBhcmF0b3JzIHx8IFtdO1xuICAgICAgICBpZiAob3B0aW9ucy5hbGxvd2VkU2VwYXJhdG9ycykge1xuICAgICAgICAgIG9wdGlvbnMuYWxsb3dlZFNlcGFyYXRvcnMuZm9yRWFjaChmdW5jdGlvbihzKSB7XG4gICAgICAgICAgICBhbGxvd2VkU2VwYXJhdG9ycy5wdXNoKHMpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGFsbG93ZWRTZXBhcmF0b3JzLnB1c2gob3B0aW9ucy5pbnRlZ2VyU2VwYXJhdG9yKTtcbiAgICAgICAgYWxsb3dlZFNlcGFyYXRvcnMucHVzaChvcHRpb25zLmRlY2ltYWxzU2VwYXJhdG9yKTtcbiAgICAgICAgbnVtYmVyID0gbnVtYmVyLnJlcGxhY2Uob3B0aW9ucy5wcmVmaXgsIFwiXCIpO1xuICAgICAgICBudW1iZXIgPSBudW1iZXIucmVwbGFjZShvcHRpb25zLnN1ZmZpeCwgXCJcIik7XG4gICAgICAgIHZhciBuZXdOdW1iZXIgPSBudW1iZXI7XG4gICAgICAgIGRvIHtcbiAgICAgICAgICBudW1iZXIgPSBuZXdOdW1iZXI7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxvd2VkU2VwYXJhdG9ycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbmV3TnVtYmVyID0gbmV3TnVtYmVyLnJlcGxhY2UoYWxsb3dlZFNlcGFyYXRvcnNbaV0sIFwiXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSB3aGlsZSAobmV3TnVtYmVyICE9IG51bWJlcik7XG4gICAgICAgIHJldHVybiBudW1iZXI7XG4gICAgICB9XG4gICAgICBmb3JtYXQyLnVuZm9ybWF0ID0gdW5mb3JtYXQ7XG4gICAgICBmdW5jdGlvbiB2YWxpZGF0ZShudW1iZXIsIGFsbG93ZWRTZXBhcmF0b3JzKSB7XG4gICAgICAgIG51bWJlciA9IHVuZm9ybWF0KG51bWJlciwgYWxsb3dlZFNlcGFyYXRvcnMpO1xuICAgICAgICBudW1iZXIgPSBudW1iZXIuc3BsaXQob3B0aW9ucy5kZWNpbWFsKTtcbiAgICAgICAgaWYgKG51bWJlci5sZW5ndGggPiAyKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9IGVsc2UgaWYgKG9wdGlvbnMudHJ1bmNhdGUgIT0gbnVsbCAmJiBudW1iZXJbMV0gJiYgbnVtYmVyWzFdLmxlbmd0aCA+IG9wdGlvbnMudHJ1bmNhdGUpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0gZWxzZSBpZiAob3B0aW9ucy5yb3VuZCAhPSBudWxsICYmIG51bWJlclsxXSAmJiBudW1iZXJbMV0ubGVuZ3RoID4gb3B0aW9ucy5yb3VuZCkge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gL14tP1xcZCtcXC4/XFxkKiQvLnRlc3QobnVtYmVyKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZvcm1hdDI7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGFkZEludGVnZXJTZXBhcmF0b3JzKHgsIHNlcGFyYXRvcikge1xuICAgICAgeCArPSBcIlwiO1xuICAgICAgaWYgKCFzZXBhcmF0b3IpIHJldHVybiB4O1xuICAgICAgdmFyIHJneCA9IC8oXFxkKykoXFxkezN9KS87XG4gICAgICB3aGlsZSAocmd4LnRlc3QoeCkpIHtcbiAgICAgICAgeCA9IHgucmVwbGFjZShyZ3gsIFwiJDFcIiArIHNlcGFyYXRvciArIFwiJDJcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4geDtcbiAgICB9XG4gICAgZnVuY3Rpb24gYWRkRGVjaW1hbFNlcGFyYXRvcnMoeCwgc2VwYXJhdG9yKSB7XG4gICAgICB4ICs9IFwiXCI7XG4gICAgICBpZiAoIXNlcGFyYXRvcikgcmV0dXJuIHg7XG4gICAgICB2YXIgcmd4ID0gLyhcXGR7M30pKFxcZCspLztcbiAgICAgIHdoaWxlIChyZ3gudGVzdCh4KSkge1xuICAgICAgICB4ID0geC5yZXBsYWNlKHJneCwgXCIkMVwiICsgc2VwYXJhdG9yICsgXCIkMlwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB4O1xuICAgIH1cbiAgICBmdW5jdGlvbiBwYWRMZWZ0KHgsIHBhZGRpbmcpIHtcbiAgICAgIHggPSB4ICsgXCJcIjtcbiAgICAgIHZhciBidWYgPSBbXTtcbiAgICAgIHdoaWxlIChidWYubGVuZ3RoICsgeC5sZW5ndGggPCBwYWRkaW5nKSB7XG4gICAgICAgIGJ1Zi5wdXNoKFwiMFwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBidWYuam9pbihcIlwiKSArIHg7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHBhZFJpZ2h0KHgsIHBhZGRpbmcpIHtcbiAgICAgIGlmICh4KSB7XG4gICAgICAgIHggKz0gXCJcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHggPSBcIlwiO1xuICAgICAgfVxuICAgICAgdmFyIGJ1ZiA9IFtdO1xuICAgICAgd2hpbGUgKGJ1Zi5sZW5ndGggKyB4Lmxlbmd0aCA8IHBhZGRpbmcpIHtcbiAgICAgICAgYnVmLnB1c2goXCIwXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHggKyBidWYuam9pbihcIlwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdHJ1bmNhdGUoeCwgbGVuZ3RoKSB7XG4gICAgICBpZiAoeCkge1xuICAgICAgICB4ICs9IFwiXCI7XG4gICAgICB9XG4gICAgICBpZiAoeCAmJiB4Lmxlbmd0aCA+IGxlbmd0aCkge1xuICAgICAgICByZXR1cm4geC5zdWJzdHIoMCwgbGVuZ3RoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB4O1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiByb3VuZChudW1iZXIsIHBsYWNlcykge1xuICAgICAgaWYgKG51bWJlclsxXSAmJiBwbGFjZXMgPj0gMCAmJiBudW1iZXJbMV0ubGVuZ3RoID4gcGxhY2VzKSB7XG4gICAgICAgIHZhciBkZWNpbSA9IG51bWJlclsxXS5zbGljZSgwLCBwbGFjZXMpO1xuICAgICAgICBpZiAoK251bWJlclsxXS5zdWJzdHIocGxhY2VzLCAxKSA+PSA1KSB7XG4gICAgICAgICAgdmFyIGxlYWRpbmd6ZXJvcyA9IFwiXCI7XG4gICAgICAgICAgd2hpbGUgKGRlY2ltLmNoYXJBdCgwKSA9PT0gXCIwXCIpIHtcbiAgICAgICAgICAgIGxlYWRpbmd6ZXJvcyA9IGxlYWRpbmd6ZXJvcyArIFwiMFwiO1xuICAgICAgICAgICAgZGVjaW0gPSBkZWNpbS5zdWJzdHIoMSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGRlY2ltID0gK2RlY2ltICsgMSArIFwiXCI7XG4gICAgICAgICAgZGVjaW0gPSBsZWFkaW5nemVyb3MgKyBkZWNpbTtcbiAgICAgICAgICBpZiAoZGVjaW0ubGVuZ3RoID4gcGxhY2VzKSB7XG4gICAgICAgICAgICBudW1iZXJbMF0gPSArbnVtYmVyWzBdICsgK2RlY2ltLmNoYXJBdCgwKSArIFwiXCI7XG4gICAgICAgICAgICBkZWNpbSA9IGRlY2ltLnN1YnN0cmluZygxKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbnVtYmVyWzFdID0gZGVjaW07XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVtYmVyO1xuICAgIH1cbiAgfVxufSk7XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLnRzeFxuaW1wb3J0IHtcbiAgZ2V0QmxvY2tDb2xsZWN0aW9uSWQsXG4gIGdldEJsb2NrUGFyZW50UGFnZSBhcyBnZXRCbG9ja1BhcmVudFBhZ2UyLFxuICBnZXRUZXh0Q29udGVudCBhcyBnZXRUZXh0Q29udGVudDRcbn0gZnJvbSBcIm5vdGlvbi11dGlsc1wiO1xuaW1wb3J0ICogYXMgUmVhY3QyMCBmcm9tIFwicmVhY3RcIjtcblxuLy8gc3JjL2NvbXBvbmVudHMvcGFnZS1pY29uLnRzeFxuaW1wb3J0IFwibm90aW9uLXR5cGVzXCI7XG5pbXBvcnQgeyBnZXRCbG9ja0ljb24sIGdldEJsb2NrVGl0bGUgYXMgZ2V0QmxvY2tUaXRsZTMgfSBmcm9tIFwibm90aW9uLXV0aWxzXCI7XG5pbXBvcnQgKiBhcyBSZWFjdDE0IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBzcmMvY29udGV4dC50c3hcbmltcG9ydCBcIm5vdGlvbi10eXBlc1wiO1xuaW1wb3J0IHsgZGVmYXVsdE1hcEltYWdlVXJsLCBkZWZhdWx0TWFwUGFnZVVybCB9IGZyb20gXCJub3Rpb24tdXRpbHNcIjtcbmltcG9ydCAqIGFzIFJlYWN0MTIgZnJvbSBcInJlYWN0XCI7XG5cbi8vIHNyYy9jb21wb25lbnRzL2Fzc2V0LXdyYXBwZXIudHN4XG5pbXBvcnQgXCJub3Rpb24tdHlwZXNcIjtcbmltcG9ydCB7IHBhcnNlUGFnZUlkIGFzIHBhcnNlUGFnZUlkMiB9IGZyb20gXCJub3Rpb24tdXRpbHNcIjtcblxuLy8gc3JjL2NvbXBvbmVudHMvaGVhZGVyLnRzeFxuaW1wb3J0IHsgZ2V0UGFnZUJyZWFkY3J1bWJzIH0gZnJvbSBcIm5vdGlvbi11dGlsc1wiO1xuaW1wb3J0ICogYXMgUmVhY3Q4IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlSG90a2V5cyB9IGZyb20gXCJyZWFjdC1ob3RrZXlzLWhvb2tcIjtcblxuLy8gc3JjL2ljb25zL3NlYXJjaC1pY29uLnRzeFxuaW1wb3J0IFwicmVhY3RcIjtcblxuLy8gc3JjL3V0aWxzLnRzXG5pbXBvcnQgXCJub3Rpb24tdHlwZXNcIjtcbmltcG9ydCB7IGZvcm1hdERhdGUsIGZvcm1hdE5vdGlvbkRhdGVUaW1lLCBpc1VybCB9IGZyb20gXCJub3Rpb24tdXRpbHNcIjtcbnZhciBjcyA9ICguLi5jbGFzc2VzKSA9PiBjbGFzc2VzLmZpbHRlcigoYSkgPT4gISFhKS5qb2luKFwiIFwiKTtcbnZhciBnZXRIYXNoRnJhZ21lbnRWYWx1ZSA9ICh1cmwpID0+IHtcbiAgcmV0dXJuIHVybC5pbmNsdWRlcyhcIiNcIikgPyB1cmwucmVwbGFjZSgvXi4rKCMuKykkLywgXCIkMVwiKSA6IFwiXCI7XG59O1xudmFyIGlzQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCI7XG52YXIgeW91dHViZURvbWFpbnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXG4gIFwieW91dHUuYmVcIixcbiAgXCJ5b3V0dWJlLmNvbVwiLFxuICBcInd3dy55b3V0dWJlLmNvbVwiLFxuICBcInlvdXR1YmUtbm9jb29raWUuY29tXCIsXG4gIFwid3d3LnlvdXR1YmUtbm9jb29raWUuY29tXCJcbl0pO1xudmFyIGdldFlvdXR1YmVJZCA9ICh1cmwpID0+IHtcbiAgdmFyIF9hO1xuICB0cnkge1xuICAgIGNvbnN0IHsgaG9zdG5hbWUgfSA9IG5ldyBVUkwodXJsKTtcbiAgICBpZiAoIXlvdXR1YmVEb21haW5zLmhhcyhob3N0bmFtZSkpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBjb25zdCByZWdFeHAgPSAvXi4qKHlvdXR1XFwuYmVcXC98dlxcL3x1XFwvXFx3XFwvfGVtYmVkXFwvfHdhdGNoXFw/dj18JnY9KShbXiMmP10qKS4qL2k7XG4gICAgY29uc3QgbWF0Y2gyID0gdXJsLm1hdGNoKHJlZ0V4cCk7XG4gICAgaWYgKG1hdGNoMiAmJiAoKF9hID0gbWF0Y2gyWzJdKSA9PSBudWxsID8gdm9pZCAwIDogX2EubGVuZ3RoKSA9PT0gMTEpIHtcbiAgICAgIHJldHVybiBtYXRjaDJbMl07XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59O1xudmFyIGdldFVybFBhcmFtcyA9ICh1cmwpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHNlYXJjaFBhcmFtcyB9ID0gbmV3IFVSTCh1cmwpO1xuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHNlYXJjaFBhcmFtcy5lbnRyaWVzKCkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgfVxuICByZXR1cm47XG59O1xuXG4vLyBzcmMvaWNvbnMvc2VhcmNoLWljb24udHN4XG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIFNlYXJjaEljb24ocHJvcHMpIHtcbiAgY29uc3QgeyBjbGFzc05hbWUsIC4uLnJlc3QgfSA9IHByb3BzO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChcInN2Z1wiLCB7IGNsYXNzTmFtZTogY3MoXCJub3Rpb24taWNvblwiLCBjbGFzc05hbWUpLCB2aWV3Qm94OiBcIjAgMCAxNyAxN1wiLCAuLi5yZXN0LCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeChcInBhdGhcIiwgeyBkOiBcIk02Ljc4MDI3IDEzLjY3MjlDOC4yNDgwNSAxMy42NzI5IDkuNjAxNTYgMTMuMTk4MiAxMC43MDkgMTIuNDA3MkwxNC44NzUgMTYuNTczMkMxNS4wNjg0IDE2Ljc2NjYgMTUuMzIzMiAxNi44NjMzIDE1LjU5NTcgMTYuODYzM0MxNi4xNjcgMTYuODYzMyAxNi41NzEzIDE2LjQyMzggMTYuNTcxMyAxNS44NjEzQzE2LjU3MTMgMTUuNTk3NyAxNi40ODM0IDE1LjM1MTYgMTYuMjkgMTUuMTU4MkwxMi4xNTA0IDExLjAwOThDMTMuMDIwNSA5Ljg2NzE5IDEzLjUzOTEgOC40NTIxNSAxMy41MzkxIDYuOTE0MDZDMTMuNTM5MSAzLjE5NjI5IDEwLjQ5OCAwLjE1NTI3MyA2Ljc4MDI3IDAuMTU1MjczQzMuMDYyNSAwLjE1NTI3MyAwLjAyMTQ4NDQgMy4xOTYyOSAwLjAyMTQ4NDQgNi45MTQwNkMwLjAyMTQ4NDQgMTAuNjMxOCAzLjA2MjUgMTMuNjcyOSA2Ljc4MDI3IDEzLjY3MjlaTTYuNzgwMjcgMTIuMjEzOUMzLjg3OTg4IDEyLjIxMzkgMS40ODA0NyA5LjgxNDQ1IDEuNDgwNDcgNi45MTQwNkMxLjQ4MDQ3IDQuMDEzNjcgMy44Nzk4OCAxLjYxNDI2IDYuNzgwMjcgMS42MTQyNkM5LjY4MDY2IDEuNjE0MjYgMTIuMDgwMSA0LjAxMzY3IDEyLjA4MDEgNi45MTQwNkMxMi4wODAxIDkuODE0NDUgOS42ODA2NiAxMi4yMTM5IDYuNzgwMjcgMTIuMjEzOVpcIiB9KSB9KTtcbn1cblxuLy8gc3JjL2NvbXBvbmVudHMvc2VhcmNoLWRpYWxvZy50c3hcbnZhciBpbXBvcnRfbG9kYXNoID0gX190b0VTTShyZXF1aXJlX2xvZGFzaCgpLCAxKTtcbmltcG9ydCB7IGdldEJsb2NrUGFyZW50UGFnZSwgZ2V0QmxvY2tUaXRsZSBhcyBnZXRCbG9ja1RpdGxlMiB9IGZyb20gXCJub3Rpb24tdXRpbHNcIjtcbmltcG9ydCAqIGFzIFJlYWN0NyBmcm9tIFwicmVhY3RcIjtcblxuLy8gc3JjL2ljb25zL2NsZWFyLWljb24udHN4XG5pbXBvcnQgXCJyZWFjdFwiO1xuaW1wb3J0IHsganN4IGFzIGpzeDIgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIENsZWFySWNvbihwcm9wcykge1xuICBjb25zdCB7IGNsYXNzTmFtZSwgLi4ucmVzdCB9ID0gcHJvcHM7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MihcInN2Z1wiLCB7IGNsYXNzTmFtZTogY3MoXCJub3Rpb24taWNvblwiLCBjbGFzc05hbWUpLCAuLi5yZXN0LCB2aWV3Qm94OiBcIjAgMCAzMCAzMFwiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDIoXCJwYXRoXCIsIHsgZDogXCJNMTUsMEM2LjcxNiwwLDAsNi43MTYsMCwxNXM2LjcxNiwxNSwxNSwxNXMxNS02LjcxNiwxNS0xNVMyMy4yODQsMCwxNSwweiBNMjIsMjAuNkwyMC42LDIyTDE1LDE2LjRMOS40LDIyTDgsMjAuNmw1LjYtNS42IEw4LDkuNEw5LjQsOGw1LjYsNS42TDIwLjYsOEwyMiw5LjRMMTYuNCwxNUwyMiwyMC42elwiIH0pIH0pO1xufVxuXG4vLyBzcmMvaWNvbnMvbG9hZGluZy1pY29uLnRzeFxuaW1wb3J0IFwicmVhY3RcIjtcbmltcG9ydCB7IGpzeCBhcyBqc3gzLCBqc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBMb2FkaW5nSWNvbihwcm9wcykge1xuICBjb25zdCB7IGNsYXNzTmFtZSwgLi4ucmVzdCB9ID0gcHJvcHM7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4cyhcInN2Z1wiLCB7IGNsYXNzTmFtZTogY3MoXCJub3Rpb24taWNvblwiLCBjbGFzc05hbWUpLCAuLi5yZXN0LCB2aWV3Qm94OiBcIjAgMCAyNCAyNFwiLCBjaGlsZHJlbjogW1xuICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gzKFwiZGVmc1wiLCB7IGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4cyhcbiAgICAgIFwibGluZWFyR3JhZGllbnRcIixcbiAgICAgIHtcbiAgICAgICAgeDE6IFwiMjguMTU0Mjk2OSVcIixcbiAgICAgICAgeTE6IFwiNjMuNzQwMjM0NCVcIixcbiAgICAgICAgeDI6IFwiNzQuNjI4OTA2MiVcIixcbiAgICAgICAgeTI6IFwiMTcuNzgzMjAzMSVcIixcbiAgICAgICAgaWQ6IFwibGluZWFyR3JhZGllbnQtMVwiLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gzKFwic3RvcFwiLCB7IHN0b3BDb2xvcjogXCJyZ2JhKDE2NCwgMTY0LCAxNjQsIDEpXCIsIG9mZnNldDogXCIwJVwiIH0pLFxuICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gzKFxuICAgICAgICAgICAgXCJzdG9wXCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHN0b3BDb2xvcjogXCJyZ2JhKDE2NCwgMTY0LCAxNjQsIDApXCIsXG4gICAgICAgICAgICAgIHN0b3BPcGFjaXR5OiBcIjBcIixcbiAgICAgICAgICAgICAgb2Zmc2V0OiBcIjEwMCVcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIClcbiAgICAgICAgXVxuICAgICAgfVxuICAgICkgfSksXG4gICAgLyogQF9fUFVSRV9fICovIGpzeDMoXCJnXCIsIHsgaWQ6IFwiUGFnZS0xXCIsIHN0cm9rZTogXCJub25lXCIsIHN0cm9rZVdpZHRoOiBcIjFcIiwgZmlsbDogXCJub25lXCIsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4MyhcImdcIiwgeyB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKC0yMzYuMDAwMDAwLCAtMjg2LjAwMDAwMClcIiwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3hzKFwiZ1wiLCB7IHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoMjM4LjAwMDAwMCwgMjg2LjAwMDAwMClcIiwgY2hpbGRyZW46IFtcbiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gzKFxuICAgICAgICBcImNpcmNsZVwiLFxuICAgICAgICB7XG4gICAgICAgICAgaWQ6IFwiT3ZhbC0yXCIsXG4gICAgICAgICAgc3Ryb2tlOiBcInVybCgjbGluZWFyR3JhZGllbnQtMSlcIixcbiAgICAgICAgICBzdHJva2VXaWR0aDogXCI0XCIsXG4gICAgICAgICAgY3g6IFwiMTBcIixcbiAgICAgICAgICBjeTogXCIxMlwiLFxuICAgICAgICAgIHI6IFwiMTBcIlxuICAgICAgICB9XG4gICAgICApLFxuICAgICAgLyogQF9fUFVSRV9fICovIGpzeDMoXG4gICAgICAgIFwicGF0aFwiLFxuICAgICAgICB7XG4gICAgICAgICAgZDogXCJNMTAsMiBDNC40NzcxNTI1LDIgMCw2LjQ3NzE1MjUgMCwxMlwiLFxuICAgICAgICAgIGlkOiBcIk92YWwtMlwiLFxuICAgICAgICAgIHN0cm9rZTogXCJyZ2JhKDE2NCwgMTY0LCAxNjQsIDEpXCIsXG4gICAgICAgICAgc3Ryb2tlV2lkdGg6IFwiNFwiXG4gICAgICAgIH1cbiAgICAgICksXG4gICAgICAvKiBAX19QVVJFX18gKi8ganN4MyhcbiAgICAgICAgXCJyZWN0XCIsXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogXCJSZWN0YW5nbGUtMVwiLFxuICAgICAgICAgIGZpbGw6IFwicmdiYSgxNjQsIDE2NCwgMTY0LCAxKVwiLFxuICAgICAgICAgIHg6IFwiOFwiLFxuICAgICAgICAgIHk6IFwiMFwiLFxuICAgICAgICAgIHdpZHRoOiBcIjRcIixcbiAgICAgICAgICBoZWlnaHQ6IFwiNFwiLFxuICAgICAgICAgIHJ4OiBcIjhcIlxuICAgICAgICB9XG4gICAgICApXG4gICAgXSB9KSB9KSB9KVxuICBdIH0pO1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9wYWdlLXRpdGxlLnRzeFxuaW1wb3J0IFwibm90aW9uLXR5cGVzXCI7XG5pbXBvcnQgeyBnZXRCbG9ja1RpdGxlIH0gZnJvbSBcIm5vdGlvbi11dGlsc1wiO1xuaW1wb3J0ICogYXMgUmVhY3Q2IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBzcmMvY29tcG9uZW50cy90ZXh0LnRzeFxuaW1wb3J0IFwibm90aW9uLXR5cGVzXCI7XG5pbXBvcnQgeyBwYXJzZVBhZ2VJZCB9IGZyb20gXCJub3Rpb24tdXRpbHNcIjtcbmltcG9ydCAqIGFzIFJlYWN0NSBmcm9tIFwicmVhY3RcIjtcblxuLy8gc3JjL2NvbXBvbmVudHMvZW9pLnRzeFxuaW1wb3J0IFwibm90aW9uLXR5cGVzXCI7XG5cbi8vIHNyYy9pY29ucy90eXBlLWdpdGh1Yi50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3g0IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBTdmdUeXBlR2l0SHViKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NChcInN2Z1wiLCB7IHZpZXdCb3g6IFwiMCAwIDI2MCAyNjBcIiwgLi4ucHJvcHMsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4NChcImdcIiwgeyBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDQoXG4gICAgXCJwYXRoXCIsXG4gICAge1xuICAgICAgZDogXCJNMTI4LjAwMTA2LDAgQzU3LjMxNzI5MjYsMCAwLDU3LjMwNjY5NDIgMCwxMjguMDAxMDYgQzAsMTg0LjU1NTI4MSAzNi42NzYxOTk3LDIzMi41MzU1NDIgODcuNTM0OTM3LDI0OS40NjA4OTkgQzkzLjkzMjAyMjMsMjUwLjY0NTc3OSA5Ni4yODA1ODgsMjQ2LjY4NDE2NSA5Ni4yODA1ODgsMjQzLjMwMzMzMyBDOTYuMjgwNTg4LDI0MC4yNTEwNDUgOTYuMTYxODg3OCwyMzAuMTY3ODk5IDk2LjEwNjc3NywyMTkuNDcyMTc2IEM2MC40OTY3NTg1LDIyNy4yMTUyMzUgNTIuOTgyNjIwNywyMDQuMzY5NzEyIDUyLjk4MjYyMDcsMjA0LjM2OTcxMiBDNDcuMTU5OTU4NCwxODkuNTc0NTk4IDM4Ljc3MDQwOCwxODUuNjQwNTM4IDM4Ljc3MDQwOCwxODUuNjQwNTM4IEMyNy4xNTY4Nzg1LDE3Ny42OTYxMTMgMzkuNjQ1ODIwNiwxNzcuODU5MzI1IDM5LjY0NTgyMDYsMTc3Ljg1OTMyNSBDNTIuNDk5MzQxOSwxNzguNzYyMjkzIDU5LjI2NzM2NSwxOTEuMDQ5ODcgNTkuMjY3MzY1LDE5MS4wNDk4NyBDNzAuNjgzNzY3NSwyMTAuNjE4NDIzIDg5LjIxMTU3NTMsMjA0Ljk2MTA5MyA5Ni41MTU4Njg1LDIwMS42OTA0ODIgQzk3LjY2NDcxNTUsMTkzLjQxNzUxMiAxMDAuOTgxOTU5LDE4Ny43NzA3OCAxMDQuNjQyNTgzLDE4NC41NzQzNTcgQzc2LjIxMTc5OSwxODEuMzM3NjYgNDYuMzI0ODE5LDE3MC4zNjIxNDQgNDYuMzI0ODE5LDEyMS4zMTU3MDIgQzQ2LjMyNDgxOSwxMDcuMzQwODg5IDUxLjMyNTA1ODgsOTUuOTIyMzY4MiA1OS41MTMyNDM3LDg2Ljk1ODM5MzcgQzU4LjE4NDIyNjgsODMuNzM0NDE1MiA1My44MDI5MjI5LDcwLjcxNTU2MiA2MC43NTMyMzU0LDUzLjA4NDM2MzYgQzYwLjc1MzIzNTQsNTMuMDg0MzYzNiA3MS41MDE5NTAxLDQ5LjY0NDE4MTMgOTUuOTYyNjQxMiw2Ni4yMDQ5NTk1IEMxMDYuMTcyOTY3LDYzLjM2ODg3NiAxMTcuMTIzMDQ3LDYxLjk0NjU5NDkgMTI4LjAwMTA2LDYxLjg5Nzg0MzIgQzEzOC44NzkwNzMsNjEuOTQ2NTk0OSAxNDkuODM3NjMyLDYzLjM2ODg3NiAxNjAuMDY3MDMzLDY2LjIwNDk1OTUgQzE4NC40OTgwNSw0OS42NDQxODEzIDE5NS4yMzE5MjYsNTMuMDg0MzYzNiAxOTUuMjMxOTI2LDUzLjA4NDM2MzYgQzIwMi4xOTkxOTcsNzAuNzE1NTYyIDE5Ny44MTU3NzMsODMuNzM0NDE1MiAxOTYuNDg2NzU2LDg2Ljk1ODM5MzcgQzIwNC42OTQwMTgsOTUuOTIyMzY4MiAyMDkuNjYwMzQzLDEwNy4zNDA4ODkgMjA5LjY2MDM0MywxMjEuMzE1NzAyIEMyMDkuNjYwMzQzLDE3MC40Nzg3MjUgMTc5LjcxNjEzMywxODEuMzAzNzQ3IDE1MS4yMTMyODEsMTg0LjQ3MjYxNCBDMTU1LjgwNDQzLDE4OC40NDQ4MjggMTU5Ljg5NTM0MiwxOTYuMjM0NTE4IDE1OS44OTUzNDIsMjA4LjE3NjU5MyBDMTU5Ljg5NTM0MiwyMjUuMzAzMzE3IDE1OS43NDY5NjgsMjM5LjA4NzM2MSAxNTkuNzQ2OTY4LDI0My4zMDMzMzMgQzE1OS43NDY5NjgsMjQ2LjcwOTYwMSAxNjIuMDUxMDIsMjUwLjcwMDg5IDE2OC41MzkyNSwyNDkuNDQzOTQxIEMyMTkuMzcwNDMyLDIzMi40OTk1MDcgMjU2LDE4NC41MzYyMDQgMjU2LDEyOC4wMDEwNiBDMjU2LDU3LjMwNjY5NDIgMTk4LjY5MTE4NywwIDEyOC4wMDEwNiwwIFogTTQ3Ljk0MDU1OTMsMTgyLjM0MDIxMiBDNDcuNjU4NjQ2NSwxODIuOTc2MTA1IDQ2LjY1ODE3NDUsMTgzLjE2Njg3MyA0NS43NDY3Mjc3LDE4Mi43MzAyMjcgQzQ0LjgxODMyMzUsMTgyLjMxMjY1NiA0NC4yOTY4OTE0LDE4MS40NDU3MjIgNDQuNTk3ODgwOCwxODAuODA3NzEgQzQ0Ljg3MzQzNDQsMTgwLjE1MjczOSA0NS44NzYwMjYsMTc5Ljk3MDQ1IDQ2LjgwMjMxMDMsMTgwLjQwOTIxNiBDNDcuNzMyODM0MiwxODAuODI2Nzg2IDQ4LjI2Mjc0NTEsMTgxLjcwMjE5OSA0Ny45NDA1NTkzLDE4Mi4zNDAyMTIgWiBNNTQuMjM2Nzg5MiwxODcuOTU4MjU0IEM1My42MjYzMzE4LDE4OC41MjQxOTkgNTIuNDMyOTcyMywxODguMjYxMzYzIDUxLjYyMzI2ODIsMTg3LjM2Njg3NCBDNTAuNzg2MDA4OCwxODYuNDc0NTA0IDUwLjYyOTE1NTMsMTg1LjI4MTE0NCA1MS4yNDgwOTEyLDE4NC43MDY3MiBDNTEuODc3NjI1NCwxODQuMTQwNzc1IDUzLjAzNDk1MTIsMTg0LjQwNTczMSA1My44NzQzMzAyLDE4NS4yOTgxMDEgQzU0LjcxMTU4OTIsMTg2LjIwMTA2OSA1NC44NzQ4MDE5LDE4Ny4zODU5NSA1NC4yMzY3ODkyLDE4Ny45NTgyNTQgWiBNNTguNTU2MjQxMywxOTUuMTQ2MzQ3IEM1Ny43NzE5NzMyLDE5NS42OTEwOTYgNTYuNDg5NTg4NiwxOTUuMTgwMjYxIDU1LjY5Njg0MTcsMTk0LjA0MjAxMyBDNTQuOTEyNTczMywxOTIuOTAzNzY0IDU0LjkxMjU3MzMsMTkxLjUzODcxMyA1NS43MTM3OTksMTkwLjk5MTg0NSBDNTYuNTA4NjY1MSwxOTAuNDQ0OTc3IDU3Ljc3MTk3MzIsMTkwLjkzNjczNSA1OC41NzUzMTgxLDE5Mi4wNjY1MDUgQzU5LjM1NzQ2NjksMTkzLjIyMzgzIDU5LjM1NzQ2NjksMTk0LjU4ODg4IDU4LjU1NjI0MTMsMTk1LjE0NjM0NyBaIE02NS44NjEzNTkyLDIwMy40NzExNzQgQzY1LjE1OTc1NzEsMjA0LjI0NDg0NiA2My42NjU0MDgzLDIwNC4wMzcxMiA2Mi41NzE2NzE3LDIwMi45ODE1MzggQzYxLjQ1MjQ5OTksMjAxLjk0OTI3IDYxLjE0MDkxMjIsMjAwLjQ4NDU5NiA2MS44NDQ2MzQxLDE5OS43MTA5MjYgQzYyLjU1NDcxNDYsMTk4LjkzNTEzNyA2NC4wNTc1NDIyLDE5OS4xNTM0NiA2NS4xNTk3NTcxLDIwMC4yMDA1NjQgQzY2LjI3MDQ1MDYsMjAxLjIzMDcxMiA2Ni42MDk1OTM2LDIwMi43MDU5ODQgNjUuODYxMzU5MiwyMDMuNDcxMTc0IFogTTc1LjMwMjUxNTEsMjA2LjI4MTU0MiBDNzQuOTkzMDQ3NCwyMDcuMjg0MTM0IDczLjU1MzgwOSwyMDcuNzM5ODU3IDcyLjEwMzk3MjQsMjA3LjMxMzgwOSBDNzAuNjU2MjU1NiwyMDYuODc1MDQzIDY5LjcwODc3NDgsMjA1LjcwMDc2MSA3MC4wMDEyODU3LDIwNC42ODc1NzEgQzcwLjMwMjI3NSwyMDMuNjc4NjIxIDcxLjc0Nzg3MjEsMjAzLjIwMzgyIDczLjIwODMwNjksMjAzLjY1OTU0MyBDNzQuNjUzOTA0MSwyMDQuMDk2MTkgNzUuNjAzNTA0OCwyMDUuMjYxOTk0IDc1LjMwMjUxNTEsMjA2LjI4MTU0MiBaIE04Ni4wNDY5NDcsMjA3LjQ3MzYyNyBDODYuMDgyOTgwNiwyMDguNTI5MjA5IDg0Ljg1MzU4NzEsMjA5LjQwNDYyMiA4My4zMzE2ODI5LDIwOS40MjM3IEM4MS44MDEzLDIwOS40NTc2MTQgODAuNTYzNDI4LDIwOC42MDMzOTggODAuNTQ2NDcwOCwyMDcuNTY0NzcyIEM4MC41NDY0NzA4LDIwNi40OTg1OTEgODEuNzQ4MzA4OCwyMDUuNjMxNjU3IDgzLjI3ODY5MTcsMjA1LjYwNjIyMSBDODQuODAwNTk2MiwyMDUuNTc2NTQ2IDg2LjA0Njk0NywyMDYuNDI0NDAzIDg2LjA0Njk0NywyMDcuNDczNjI3IFogTTk2LjYwMjE0NzEsMjA3LjA2OTAyMyBDOTYuNzg0NDM2NiwyMDguMDk5MTcxIDk1LjcyNjczNDEsMjA5LjE1Njg3MiA5NC4yMTU0MjgsMjA5LjQzODc4NSBDOTIuNzI5NTU3NywyMDkuNzEwMDk5IDkxLjM1MzkwODYsMjA5LjA3NDIwNiA5MS4xNjUyNjAzLDIwOC4wNTI1MzggQzkwLjk4MDg1MTUsMjA2Ljk5Njk1NSA5Mi4wNTc2MzA2LDIwNS45MzkyNTMgOTMuNTQxMzgxMywyMDUuNjY1ODIgQzk1LjA1NDgwNywyMDUuNDAyOTg0IDk2LjQwOTI1OTYsMjA2LjAyMTkxOSA5Ni42MDIxNDcxLDIwNy4wNjkwMjMgWlwiLFxuICAgICAgZmlsbDogXCIjMTYxNjE0XCJcbiAgICB9XG4gICkgfSkgfSk7XG59XG52YXIgdHlwZV9naXRodWJfZGVmYXVsdCA9IFN2Z1R5cGVHaXRIdWI7XG5cbi8vIHNyYy9jb21wb25lbnRzL21lbnRpb24tcHJldmlldy1jYXJkLnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDUsIGpzeHMgYXMganN4czIgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIGNhcGl0YWxpemVGaXJzdExldHRlcihzdHIpIHtcbiAgaWYgKCFzdHIpIHJldHVybiBcIlwiO1xuICByZXR1cm4gc3RyLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyLnNsaWNlKDEpO1xufVxuZnVuY3Rpb24gTWVudGlvblByZXZpZXdDYXJkKHtcbiAgb3duZXIsXG4gIGxhc3RVcGRhdGVkLFxuICBleHRlcm5hbEltYWdlLFxuICB0aXRsZSxcbiAgZG9tYWluXG59KSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4czIoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWV4dGVybmFsLXN1YnRpdGxlXCIsIGNoaWxkcmVuOiBbXG4gICAgZXh0ZXJuYWxJbWFnZSAmJiAvKiBAX19QVVJFX18gKi8ganN4czIoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLXByZXZpZXctY2FyZC1kb21haW4td2FycFwiLCBjaGlsZHJlbjogW1xuICAgICAgLyogQF9fUFVSRV9fICovIGpzeDUoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLXByZXZpZXctY2FyZC1sb2dvXCIsIGNoaWxkcmVuOiBleHRlcm5hbEltYWdlIH0pLFxuICAgICAgLyogQF9fUFVSRV9fICovIGpzeDUoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLXByZXZpZXctY2FyZC1kb21haW5cIiwgY2hpbGRyZW46IGNhcGl0YWxpemVGaXJzdExldHRlcihkb21haW4uc3BsaXQoXCIuXCIpWzBdKSB9KVxuICAgIF0gfSksXG4gICAgLyogQF9fUFVSRV9fICovIGpzeDUoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLXByZXZpZXctY2FyZC10aXRsZVwiLCBjaGlsZHJlbjogdGl0bGUgfSksXG4gICAgb3duZXIgJiYgLyogQF9fUFVSRV9fICovIGpzeHMyKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1leHRlcm5hbC1zdWJ0aXRsZS1pdGVtXCIsIGNoaWxkcmVuOiBbXG4gICAgICAvKiBAX19QVVJFX18gKi8ganN4NShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tZXh0ZXJuYWwtc3VidGl0bGUtaXRlbS1uYW1lXCIsIGNoaWxkcmVuOiBcIk93bmVyXCIgfSksXG4gICAgICAvKiBAX19QVVJFX18gKi8ganN4NShcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWV4dGVybmFsLXN1YnRpdGxlLWl0ZW0tZGVzY1wiLCBjaGlsZHJlbjogb3duZXIgfSlcbiAgICBdIH0pLFxuICAgIGxhc3RVcGRhdGVkICYmIC8qIEBfX1BVUkVfXyAqLyBqc3hzMihcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tZXh0ZXJuYWwtc3VidGl0bGUtaXRlbVwiLCBjaGlsZHJlbjogW1xuICAgICAgLyogQF9fUFVSRV9fICovIGpzeDUoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWV4dGVybmFsLXN1YnRpdGxlLWl0ZW0tbmFtZVwiLCBjaGlsZHJlbjogXCJVcGRhdGVkXCIgfSksXG4gICAgICAvKiBAX19QVVJFX18gKi8ganN4NShcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWV4dGVybmFsLXN1YnRpdGxlLWl0ZW0tZGVzY1wiLCBjaGlsZHJlbjogbGFzdFVwZGF0ZWQgfSlcbiAgICBdIH0pLFxuICAgIGRvbWFpbiA9PT0gXCJnaXRodWIuY29tXCIgJiYgLyogQF9fUFVSRV9fICovIGpzeHMyKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1wcmV2aWV3LWNhcmQtZ2l0aHViLXNoaWVsZHNcIiwgY2hpbGRyZW46IFtcbiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g1KFxuICAgICAgICBcImltZ1wiLFxuICAgICAgICB7XG4gICAgICAgICAgc3JjOiBgaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9naXRodWIvc3RhcnMvJHtvd25lcn0vJHt0aXRsZX0/bG9nbz1naXRodWJgLFxuICAgICAgICAgIGFsdDogXCJcIlxuICAgICAgICB9XG4gICAgICApLFxuICAgICAgLyogQF9fUFVSRV9fICovIGpzeDUoXG4gICAgICAgIFwiaW1nXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBzcmM6IGBodHRwczovL2ltZy5zaGllbGRzLmlvL2dpdGh1Yi9sYXN0LWNvbW1pdC8ke293bmVyfS8ke3RpdGxlfWAsXG4gICAgICAgICAgYWx0OiBcIlwiXG4gICAgICAgIH1cbiAgICAgIClcbiAgICBdIH0pXG4gIF0gfSk7XG59XG5cbi8vIHNyYy9jb21wb25lbnRzL2VvaS50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3g2LCBqc3hzIGFzIGpzeHMzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBFT0koe1xuICBibG9jayxcbiAgaW5saW5lLFxuICBjbGFzc05hbWVcbn0pIHtcbiAgdmFyIF9hLCBfYiwgX2M7XG4gIGNvbnN0IHsgY29tcG9uZW50cyB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICBjb25zdCB7IG9yaWdpbmFsX3VybCwgYXR0cmlidXRlcywgZG9tYWluIH0gPSAoYmxvY2sgPT0gbnVsbCA/IHZvaWQgMCA6IGJsb2NrLmZvcm1hdCkgfHwge307XG4gIGlmICghb3JpZ2luYWxfdXJsIHx8ICFhdHRyaWJ1dGVzKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgdGl0bGUgPSAoX2EgPSBhdHRyaWJ1dGVzLmZpbmQoKGF0dHIpID0+IGF0dHIuaWQgPT09IFwidGl0bGVcIikpID09IG51bGwgPyB2b2lkIDAgOiBfYS52YWx1ZXNbMF07XG4gIGxldCBvd25lciA9IChfYiA9IGF0dHJpYnV0ZXMuZmluZCgoYXR0cikgPT4gYXR0ci5pZCA9PT0gXCJvd25lclwiKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnZhbHVlc1swXTtcbiAgY29uc3QgbGFzdFVwZGF0ZWRBdCA9IChfYyA9IGF0dHJpYnV0ZXMuZmluZCgoYXR0cikgPT4gYXR0ci5pZCA9PT0gXCJ1cGRhdGVkX2F0XCIpKSA9PSBudWxsID8gdm9pZCAwIDogX2MudmFsdWVzWzBdO1xuICBjb25zdCBsYXN0VXBkYXRlZCA9IGxhc3RVcGRhdGVkQXQgPyBmb3JtYXROb3Rpb25EYXRlVGltZShsYXN0VXBkYXRlZEF0KSA6IG51bGw7XG4gIGxldCBleHRlcm5hbEltYWdlO1xuICBzd2l0Y2ggKGRvbWFpbikge1xuICAgIGNhc2UgXCJnaXRodWIuY29tXCI6XG4gICAgICBleHRlcm5hbEltYWdlID0gLyogQF9fUFVSRV9fICovIGpzeDYodHlwZV9naXRodWJfZGVmYXVsdCwge30pO1xuICAgICAgaWYgKG93bmVyKSB7XG4gICAgICAgIGNvbnN0IHBhcnRzID0gb3duZXIuc3BsaXQoXCIvXCIpO1xuICAgICAgICBvd25lciA9IHBhcnRzLmF0KC0xKTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBpZiAodHJ1ZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgICBgVW5zdXBwb3J0ZWQgZXh0ZXJuYWxfb2JqZWN0X2luc3RhbmNlIGRvbWFpbiBcIiR7ZG9tYWlufVwiYCxcbiAgICAgICAgICBKU09OLnN0cmluZ2lmeShibG9jaywgbnVsbCwgMilcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4czMoXG4gICAgY29tcG9uZW50cy5MaW5rLFxuICAgIHtcbiAgICAgIHRhcmdldDogXCJfYmxhbmtcIixcbiAgICAgIHJlbDogXCJub29wZW5lciBub3JlZmVycmVyXCIsXG4gICAgICBocmVmOiBvcmlnaW5hbF91cmwsXG4gICAgICBjbGFzc05hbWU6IGNzKFxuICAgICAgICBcIm5vdGlvbi1leHRlcm5hbFwiLFxuICAgICAgICBpbmxpbmUgPyBcIm5vdGlvbi1leHRlcm5hbC1tZW50aW9uXCIgOiBcIm5vdGlvbi1leHRlcm5hbC1ibG9jayBub3Rpb24tcm93XCIsXG4gICAgICAgIGNsYXNzTmFtZVxuICAgICAgKSxcbiAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgIGV4dGVybmFsSW1hZ2UgJiYgLyogQF9fUFVSRV9fICovIGpzeDYoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWV4dGVybmFsLWltYWdlXCIsIGNoaWxkcmVuOiBleHRlcm5hbEltYWdlIH0pLFxuICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4czMoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWV4dGVybmFsLWRlc2NyaXB0aW9uXCIsIGNoaWxkcmVuOiBbXG4gICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDYoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWV4dGVybmFsLXRpdGxlXCIsIGNoaWxkcmVuOiB0aXRsZSB9KSxcbiAgICAgICAgICAhaW5saW5lICYmIG93bmVyID8gLyogQF9fUFVSRV9fICovIGpzeHMzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1leHRlcm5hbC1ibG9jay1kZXNjXCIsIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICBvd25lcixcbiAgICAgICAgICAgIGxhc3RVcGRhdGVkICYmIC8qIEBfX1BVUkVfXyAqLyBqc3g2KFwic3BhblwiLCB7IGNoaWxkcmVuOiBcIiBcXHUyMDIyIFwiIH0pLFxuICAgICAgICAgICAgbGFzdFVwZGF0ZWQgJiYgYFVwZGF0ZWQgJHtsYXN0VXBkYXRlZH1gXG4gICAgICAgICAgXSB9KSA6IG51bGwsXG4gICAgICAgICAgaW5saW5lICYmIChvd25lciB8fCBsYXN0VXBkYXRlZCkgJiYgLyogQF9fUFVSRV9fICovIGpzeDYoXG4gICAgICAgICAgICBNZW50aW9uUHJldmlld0NhcmQsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHRpdGxlLFxuICAgICAgICAgICAgICBvd25lcixcbiAgICAgICAgICAgICAgbGFzdFVwZGF0ZWQsXG4gICAgICAgICAgICAgIGRvbWFpbixcbiAgICAgICAgICAgICAgZXh0ZXJuYWxJbWFnZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIClcbiAgICAgICAgXSB9KVxuICAgICAgXVxuICAgIH1cbiAgKTtcbn1cblxuLy8gc3JjL2NvbXBvbmVudHMvZ3JhY2VmdWwtaW1hZ2UudHN4XG5pbXBvcnQgXCJyZWFjdFwiO1xuaW1wb3J0IHsgSW1nIH0gZnJvbSBcInJlYWN0LWltYWdlXCI7XG5pbXBvcnQgeyBqc3ggYXMganN4NyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gR3JhY2VmdWxJbWFnZShwcm9wcykge1xuICBpZiAoaXNCcm93c2VyKSB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g3KEltZywgeyAuLi5wcm9wcyB9KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDcoXCJpbWdcIiwgeyAuLi5wcm9wcyB9KTtcbiAgfVxufVxuXG4vLyBzcmMvY29tcG9uZW50cy90ZXh0LnRzeFxuaW1wb3J0IHsgRnJhZ21lbnQgYXMgRnJhZ21lbnQyLCBqc3ggYXMganN4OCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gVGV4dCh7XG4gIHZhbHVlLFxuICBibG9jayxcbiAgbGlua1Byb3BzLFxuICBsaW5rUHJvdG9jb2xcbn0pIHtcbiAgY29uc3QgeyBjb21wb25lbnRzLCByZWNvcmRNYXAsIG1hcFBhZ2VVcmwsIG1hcEltYWdlVXJsLCByb290RG9tYWluIH0gPSB1c2VOb3Rpb25Db250ZXh0KCk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4OChSZWFjdDUuRnJhZ21lbnQsIHsgY2hpbGRyZW46IHZhbHVlID09IG51bGwgPyB2b2lkIDAgOiB2YWx1ZS5tYXAoKFt0ZXh0LCBkZWNvcmF0aW9uc10sIGluZGV4KSA9PiB7XG4gICAgaWYgKCFkZWNvcmF0aW9ucykge1xuICAgICAgaWYgKHRleHQgPT09IFwiLFwiKSB7XG4gICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4OChcInNwYW5cIiwgeyBzdHlsZTogeyBwYWRkaW5nOiBcIjAuNWVtXCIgfSB9LCBpbmRleCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDgoUmVhY3Q1LkZyYWdtZW50LCB7IGNoaWxkcmVuOiB0ZXh0IH0sIGluZGV4KTtcbiAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgZm9ybWF0dGVkID0gZGVjb3JhdGlvbnMucmVkdWNlKFxuICAgICAgKGVsZW1lbnQsIGRlY29yYXRvcikgPT4ge1xuICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lO1xuICAgICAgICBzd2l0Y2ggKGRlY29yYXRvclswXSkge1xuICAgICAgICAgIGNhc2UgXCJwXCI6IHtcbiAgICAgICAgICAgIGNvbnN0IGJsb2NrSWQgPSBkZWNvcmF0b3JbMV07XG4gICAgICAgICAgICBjb25zdCBsaW5rZWRCbG9jayA9IChfYSA9IHJlY29yZE1hcC5ibG9ja1tibG9ja0lkXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnZhbHVlO1xuICAgICAgICAgICAgaWYgKCFsaW5rZWRCbG9jaykge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnXCJwXCIgbWlzc2luZyBibG9jaycsIGJsb2NrSWQpO1xuICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4OChcbiAgICAgICAgICAgICAgY29tcG9uZW50cy5QYWdlTGluayxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tbGlua1wiLFxuICAgICAgICAgICAgICAgIGhyZWY6IG1hcFBhZ2VVcmwoYmxvY2tJZCksXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g4KFBhZ2VUaXRsZSwgeyBibG9jazogbGlua2VkQmxvY2sgfSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY2FzZSBcIlxcdTIwMjNcIjoge1xuICAgICAgICAgICAgY29uc3QgbGlua1R5cGUgPSBkZWNvcmF0b3JbMV1bMF07XG4gICAgICAgICAgICBjb25zdCBpZCA9IGRlY29yYXRvclsxXVsxXTtcbiAgICAgICAgICAgIHN3aXRjaCAobGlua1R5cGUpIHtcbiAgICAgICAgICAgICAgY2FzZSBcInVcIjoge1xuICAgICAgICAgICAgICAgIGNvbnN0IHVzZXIgPSAoX2IgPSByZWNvcmRNYXAubm90aW9uX3VzZXJbaWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2IudmFsdWU7XG4gICAgICAgICAgICAgICAgaWYgKCF1c2VyKSB7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnXCJcXHUyMDIzXCIgbWlzc2luZyB1c2VyJywgaWQpO1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHNyYyA9IG1hcEltYWdlVXJsKHVzZXIucHJvZmlsZV9waG90bywgYmxvY2spO1xuICAgICAgICAgICAgICAgIGlmICghc3JjKSByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0gW3VzZXIuZ2l2ZW5fbmFtZSwgdXNlci5mYW1pbHlfbmFtZV0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4OChcbiAgICAgICAgICAgICAgICAgIEdyYWNlZnVsSW1hZ2UsXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tdXNlclwiLFxuICAgICAgICAgICAgICAgICAgICBzcmMsXG4gICAgICAgICAgICAgICAgICAgIGFsdDogbmFtZVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxpbmtlZEJsb2NrID0gKF9jID0gcmVjb3JkTWFwLmJsb2NrW2lkXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLnZhbHVlO1xuICAgICAgICAgICAgICAgIGlmICghbGlua2VkQmxvY2spIHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdcIlxcdTIwMjNcIiBtaXNzaW5nIGJsb2NrJywgbGlua1R5cGUsIGlkKTtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDgoXG4gICAgICAgICAgICAgICAgICBjb21wb25lbnRzLlBhZ2VMaW5rLFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLWxpbmtcIixcbiAgICAgICAgICAgICAgICAgICAgaHJlZjogbWFwUGFnZVVybChpZCksXG4gICAgICAgICAgICAgICAgICAgIC4uLmxpbmtQcm9wcyxcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiLFxuICAgICAgICAgICAgICAgICAgICByZWw6IFwibm9vcGVuZXIgbm9yZWZlcnJlclwiLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDgoUGFnZVRpdGxlLCB7IGJsb2NrOiBsaW5rZWRCbG9jayB9KVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgY2FzZSBcImhcIjpcbiAgICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4OChcInNwYW5cIiwgeyBjbGFzc05hbWU6IGBub3Rpb24tJHtkZWNvcmF0b3JbMV19YCwgY2hpbGRyZW46IGVsZW1lbnQgfSk7XG4gICAgICAgICAgY2FzZSBcImNcIjpcbiAgICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4OChcImNvZGVcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWlubGluZS1jb2RlXCIsIGNoaWxkcmVuOiBlbGVtZW50IH0pO1xuICAgICAgICAgIGNhc2UgXCJiXCI6XG4gICAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDgoXCJiXCIsIHsgY2hpbGRyZW46IGVsZW1lbnQgfSk7XG4gICAgICAgICAgY2FzZSBcImlcIjpcbiAgICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4OChcImVtXCIsIHsgY2hpbGRyZW46IGVsZW1lbnQgfSk7XG4gICAgICAgICAgY2FzZSBcInNcIjpcbiAgICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4OChcInNcIiwgeyBjaGlsZHJlbjogZWxlbWVudCB9KTtcbiAgICAgICAgICBjYXNlIFwiX1wiOlxuICAgICAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g4KFwic3BhblwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24taW5saW5lLXVuZGVyc2NvcmVcIiwgY2hpbGRyZW46IGVsZW1lbnQgfSk7XG4gICAgICAgICAgY2FzZSBcImVcIjpcbiAgICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4OChjb21wb25lbnRzLkVxdWF0aW9uLCB7IG1hdGg6IGRlY29yYXRvclsxXSwgaW5saW5lOiB0cnVlIH0pO1xuICAgICAgICAgIGNhc2UgXCJtXCI6XG4gICAgICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAgICAgICAvL3N0aWxsIG5lZWQgdG8gcmV0dXJuIHRoZSBiYXNlIGVsZW1lbnRcbiAgICAgICAgICBjYXNlIFwiYVwiOiB7XG4gICAgICAgICAgICBjb25zdCB2ID0gZGVjb3JhdG9yWzFdO1xuICAgICAgICAgICAgY29uc3QgcGF0aG5hbWUgPSB2LnNsaWNlKDEpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBwYXJzZVBhZ2VJZChwYXRobmFtZSwgeyB1dWlkOiB0cnVlIH0pO1xuICAgICAgICAgICAgaWYgKHJvb3REb21haW4gJiYgdi5pbmNsdWRlcyhyb290RG9tYWluKSB8fCBpZCAmJiB2WzBdID09PSBcIi9cIikge1xuICAgICAgICAgICAgICBjb25zdCBocmVmID0gcm9vdERvbWFpbiAmJiB2LmluY2x1ZGVzKHJvb3REb21haW4pID8gdiA6IGAke21hcFBhZ2VVcmwoaWQpfSR7Z2V0SGFzaEZyYWdtZW50VmFsdWUodil9YDtcbiAgICAgICAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g4KFxuICAgICAgICAgICAgICAgIGNvbXBvbmVudHMuUGFnZUxpbmssXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1saW5rXCIsXG4gICAgICAgICAgICAgICAgICBocmVmLFxuICAgICAgICAgICAgICAgICAgLi4ubGlua1Byb3BzLFxuICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IGVsZW1lbnRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDgoXG4gICAgICAgICAgICAgICAgY29tcG9uZW50cy5MaW5rLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tbGlua1wiLFxuICAgICAgICAgICAgICAgICAgaHJlZjogbGlua1Byb3RvY29sID8gYCR7bGlua1Byb3RvY29sfToke2RlY29yYXRvclsxXX1gIDogZGVjb3JhdG9yWzFdLFxuICAgICAgICAgICAgICAgICAgLi4ubGlua1Byb3BzLFxuICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IGVsZW1lbnRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhc2UgXCJkXCI6IHtcbiAgICAgICAgICAgIGNvbnN0IHYgPSBkZWNvcmF0b3JbMV07XG4gICAgICAgICAgICBjb25zdCB0eXBlID0gdiA9PSBudWxsID8gdm9pZCAwIDogdi50eXBlO1xuICAgICAgICAgICAgaWYgKHR5cGUgPT09IFwiZGF0ZVwiKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IHYuc3RhcnRfZGF0ZTtcbiAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdERhdGUoc3RhcnREYXRlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJkYXRldGltZVwiKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IHYuc3RhcnRfZGF0ZTtcbiAgICAgICAgICAgICAgY29uc3Qgc3RhcnRUaW1lID0gdi5zdGFydF90aW1lO1xuICAgICAgICAgICAgICByZXR1cm4gYCR7Zm9ybWF0RGF0ZShzdGFydERhdGUpfSAke3N0YXJ0VGltZX1gO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSBcImRhdGVyYW5nZVwiKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IHYuc3RhcnRfZGF0ZTtcbiAgICAgICAgICAgICAgY29uc3QgZW5kRGF0ZSA9IHYuZW5kX2RhdGU7XG4gICAgICAgICAgICAgIHJldHVybiBgJHtmb3JtYXREYXRlKHN0YXJ0RGF0ZSl9IFxcdTIxOTIgJHtmb3JtYXREYXRlKGVuZERhdGUpfWA7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgY2FzZSBcInVcIjoge1xuICAgICAgICAgICAgY29uc3QgdXNlcklkID0gZGVjb3JhdG9yWzFdO1xuICAgICAgICAgICAgY29uc3QgdXNlciA9IChfZCA9IHJlY29yZE1hcC5ub3Rpb25fdXNlclt1c2VySWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2QudmFsdWU7XG4gICAgICAgICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJtaXNzaW5nIHVzZXJcIiwgdXNlcklkKTtcbiAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBzcmMgPSBtYXBJbWFnZVVybCh1c2VyLnByb2ZpbGVfcGhvdG8sIGJsb2NrKTtcbiAgICAgICAgICAgIGlmICghc3JjKSByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBbdXNlci5naXZlbl9uYW1lLCB1c2VyLmZhbWlseV9uYW1lXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG4gICAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDgoR3JhY2VmdWxJbWFnZSwgeyBjbGFzc05hbWU6IFwibm90aW9uLXVzZXJcIiwgc3JjLCBhbHQ6IG5hbWUgfSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhc2UgXCJlb2lcIjoge1xuICAgICAgICAgICAgY29uc3QgYmxvY2tJZCA9IGRlY29yYXRvclsxXTtcbiAgICAgICAgICAgIGNvbnN0IGV4dGVybmFsT2JqZWN0SW5zdGFuY2UgPSAoX2UgPSByZWNvcmRNYXAuYmxvY2tbYmxvY2tJZF0pID09IG51bGwgPyB2b2lkIDAgOiBfZS52YWx1ZTtcbiAgICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4OChFT0ksIHsgYmxvY2s6IGV4dGVybmFsT2JqZWN0SW5zdGFuY2UsIGlubGluZTogdHJ1ZSB9KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGlmICh0cnVlKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidW5zdXBwb3J0ZWQgdGV4dCBmb3JtYXRcIiwgZGVjb3JhdG9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLyogQF9fUFVSRV9fICovIGpzeDgoRnJhZ21lbnQyLCB7IGNoaWxkcmVuOiB0ZXh0IH0pXG4gICAgKTtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDgoUmVhY3Q1LkZyYWdtZW50LCB7IGNoaWxkcmVuOiBmb3JtYXR0ZWQgfSwgaW5kZXgpO1xuICB9KSB9KTtcbn1cblxuLy8gc3JjL2NvbXBvbmVudHMvcGFnZS10aXRsZS50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3g5LCBqc3hzIGFzIGpzeHM0IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBQYWdlVGl0bGVJbXBsKHtcbiAgYmxvY2ssXG4gIGNsYXNzTmFtZSxcbiAgZGVmYXVsdEljb24sXG4gIC4uLnJlc3Rcbn0pIHtcbiAgdmFyIF9hLCBfYjtcbiAgY29uc3QgeyByZWNvcmRNYXAgfSA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgaWYgKCFibG9jaykgcmV0dXJuIG51bGw7XG4gIGlmIChibG9jay50eXBlID09PSBcImNvbGxlY3Rpb25fdmlld19wYWdlXCIgfHwgYmxvY2sudHlwZSA9PT0gXCJjb2xsZWN0aW9uX3ZpZXdcIikge1xuICAgIGNvbnN0IHRpdGxlID0gZ2V0QmxvY2tUaXRsZShibG9jaywgcmVjb3JkTWFwKTtcbiAgICBpZiAoIXRpdGxlKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgdGl0bGVEZWNvcmF0aW9uID0gW1t0aXRsZV1dO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4czQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBjcyhcIm5vdGlvbi1wYWdlLXRpdGxlXCIsIGNsYXNzTmFtZSksIC4uLnJlc3QsIGNoaWxkcmVuOiBbXG4gICAgICAvKiBAX19QVVJFX18gKi8ganN4OShcbiAgICAgICAgUGFnZUljb24sXG4gICAgICAgIHtcbiAgICAgICAgICBibG9jayxcbiAgICAgICAgICBkZWZhdWx0SWNvbixcbiAgICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLXBhZ2UtdGl0bGUtaWNvblwiXG4gICAgICAgIH1cbiAgICAgICksXG4gICAgICAvKiBAX19QVVJFX18gKi8ganN4OShcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLXBhZ2UtdGl0bGUtdGV4dFwiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDkoVGV4dCwgeyB2YWx1ZTogdGl0bGVEZWNvcmF0aW9uLCBibG9jayB9KSB9KVxuICAgIF0gfSk7XG4gIH1cbiAgaWYgKCEoKF9hID0gYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnRpdGxlKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4czQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBjcyhcIm5vdGlvbi1wYWdlLXRpdGxlXCIsIGNsYXNzTmFtZSksIC4uLnJlc3QsIGNoaWxkcmVuOiBbXG4gICAgLyogQF9fUFVSRV9fICovIGpzeDkoXG4gICAgICBQYWdlSWNvbixcbiAgICAgIHtcbiAgICAgICAgYmxvY2ssXG4gICAgICAgIGRlZmF1bHRJY29uLFxuICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLXBhZ2UtdGl0bGUtaWNvblwiXG4gICAgICB9XG4gICAgKSxcbiAgICAvKiBAX19QVVJFX18gKi8ganN4OShcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLXBhZ2UtdGl0bGUtdGV4dFwiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDkoVGV4dCwgeyB2YWx1ZTogKF9iID0gYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnRpdGxlLCBibG9jayB9KSB9KVxuICBdIH0pO1xufVxudmFyIFBhZ2VUaXRsZSA9IFJlYWN0Ni5tZW1vKFBhZ2VUaXRsZUltcGwpO1xuXG4vLyBzcmMvY29tcG9uZW50cy9zZWFyY2gtZGlhbG9nLnRzeFxuaW1wb3J0IHsgRnJhZ21lbnQgYXMgRnJhZ21lbnQzLCBqc3ggYXMganN4MTAsIGpzeHMgYXMganN4czUgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBTZWFyY2hEaWFsb2cgPSBjbGFzcyBleHRlbmRzIFJlYWN0Ny5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RhdGVcIiwge1xuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIHF1ZXJ5OiBcIlwiLFxuICAgICAgc2VhcmNoUmVzdWx0OiBudWxsLFxuICAgICAgc2VhcmNoRXJyb3I6IG51bGxcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX2lucHV0UmVmXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfc2VhcmNoXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfb25BZnRlck9wZW5cIiwgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuX2lucHV0UmVmLmN1cnJlbnQpIHtcbiAgICAgICAgdGhpcy5faW5wdXRSZWYuY3VycmVudC5mb2N1cygpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfb25DaGFuZ2VRdWVyeVwiLCAoZSkgPT4ge1xuICAgICAgY29uc3QgcXVlcnkgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBxdWVyeSB9KTtcbiAgICAgIGlmICghcXVlcnkudHJpbSgpKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBpc0xvYWRpbmc6IGZhbHNlLCBzZWFyY2hSZXN1bHQ6IG51bGwsIHNlYXJjaEVycm9yOiBudWxsIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9zZWFyY2goKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX29uQ2xlYXJRdWVyeVwiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9vbkNoYW5nZVF1ZXJ5KHsgdGFyZ2V0OiB7IHZhbHVlOiBcIlwiIH0gfSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIl93YXJtdXBTZWFyY2hcIiwgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgeyBzZWFyY2hOb3Rpb24sIHJvb3RCbG9ja0lkIH0gPSB0aGlzLnByb3BzO1xuICAgICAgYXdhaXQgc2VhcmNoTm90aW9uKHtcbiAgICAgICAgcXVlcnk6IFwiXCIsXG4gICAgICAgIGFuY2VzdG9ySWQ6IHJvb3RCbG9ja0lkXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX3NlYXJjaEltcGxcIiwgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgeyBzZWFyY2hOb3Rpb24sIHJvb3RCbG9ja0lkIH0gPSB0aGlzLnByb3BzO1xuICAgICAgY29uc3QgeyBxdWVyeSB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgIGlmICghcXVlcnkudHJpbSgpKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBpc0xvYWRpbmc6IGZhbHNlLCBzZWFyY2hSZXN1bHQ6IG51bGwsIHNlYXJjaEVycm9yOiBudWxsIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLnNldFN0YXRlKHsgaXNMb2FkaW5nOiB0cnVlIH0pO1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc2VhcmNoTm90aW9uKHtcbiAgICAgICAgcXVlcnksXG4gICAgICAgIGFuY2VzdG9ySWQ6IHJvb3RCbG9ja0lkXG4gICAgICB9KTtcbiAgICAgIGNvbnNvbGUubG9nKFwic2VhcmNoXCIsIHF1ZXJ5LCByZXN1bHQpO1xuICAgICAgbGV0IHNlYXJjaFJlc3VsdCA9IG51bGw7XG4gICAgICBsZXQgc2VhcmNoRXJyb3IgPSBudWxsO1xuICAgICAgaWYgKHJlc3VsdC5lcnJvciB8fCByZXN1bHQuZXJyb3JJZCkge1xuICAgICAgICBzZWFyY2hFcnJvciA9IHJlc3VsdDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNlYXJjaFJlc3VsdCA9IHsgLi4ucmVzdWx0IH07XG4gICAgICAgIGNvbnN0IHJlc3VsdHMgPSBzZWFyY2hSZXN1bHQucmVzdWx0cy5tYXAoKHJlc3VsdDIpID0+IHtcbiAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgIGNvbnN0IGJsb2NrID0gKF9hID0gc2VhcmNoUmVzdWx0LnJlY29yZE1hcC5ibG9ja1tyZXN1bHQyLmlkXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnZhbHVlO1xuICAgICAgICAgIGlmICghYmxvY2spIHJldHVybjtcbiAgICAgICAgICBjb25zdCB0aXRsZSA9IGdldEJsb2NrVGl0bGUyKGJsb2NrLCBzZWFyY2hSZXN1bHQucmVjb3JkTWFwKTtcbiAgICAgICAgICBpZiAoIXRpdGxlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIHJlc3VsdDIudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgICByZXN1bHQyLmJsb2NrID0gYmxvY2s7XG4gICAgICAgICAgcmVzdWx0Mi5yZWNvcmRNYXAgPSBzZWFyY2hSZXN1bHQucmVjb3JkTWFwO1xuICAgICAgICAgIHJlc3VsdDIucGFnZSA9IGdldEJsb2NrUGFyZW50UGFnZShibG9jaywgc2VhcmNoUmVzdWx0LnJlY29yZE1hcCwge1xuICAgICAgICAgICAgaW5jbHVzaXZlOiB0cnVlXG4gICAgICAgICAgfSkgfHwgYmxvY2s7XG4gICAgICAgICAgaWYgKCFyZXN1bHQyLnBhZ2UuaWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKChfYiA9IHJlc3VsdDIuaGlnaGxpZ2h0KSA9PSBudWxsID8gdm9pZCAwIDogX2IudGV4dCkge1xuICAgICAgICAgICAgcmVzdWx0Mi5oaWdobGlnaHQuaHRtbCA9IHJlc3VsdDIuaGlnaGxpZ2h0LnRleHQucmVwbGFjZUFsbCgvPGd6a25mb3V1Pi9naSwgXCI8Yj5cIikucmVwbGFjZUFsbCgvPFxcL2d6a25mb3V1Pi9naSwgXCI8L2I+XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzdWx0MjtcbiAgICAgICAgfSkuZmlsdGVyKEJvb2xlYW4pO1xuICAgICAgICBjb25zdCBzZWFyY2hSZXN1bHRzTWFwID0gT2JqZWN0LmZyb21FbnRyaWVzKFxuICAgICAgICAgIHJlc3VsdHMubWFwKChyZXN1bHQyKSA9PiBbcmVzdWx0Mi5wYWdlLmlkLCByZXN1bHQyXSlcbiAgICAgICAgKTtcbiAgICAgICAgc2VhcmNoUmVzdWx0LnJlc3VsdHMgPSBPYmplY3QudmFsdWVzKHNlYXJjaFJlc3VsdHNNYXApO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMuc3RhdGUucXVlcnkgPT09IHF1ZXJ5KSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBpc0xvYWRpbmc6IGZhbHNlLCBzZWFyY2hSZXN1bHQsIHNlYXJjaEVycm9yIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMuX2lucHV0UmVmID0gUmVhY3Q3LmNyZWF0ZVJlZigpO1xuICB9XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX3NlYXJjaCA9ICgwLCBpbXBvcnRfbG9kYXNoLmRlZmF1bHQpKHRoaXMuX3NlYXJjaEltcGwuYmluZCh0aGlzKSwgMWUzKTtcbiAgICB0aGlzLl93YXJtdXBTZWFyY2goKTtcbiAgfVxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBpc09wZW4sIG9uQ2xvc2UgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBpc0xvYWRpbmcsIHF1ZXJ5LCBzZWFyY2hSZXN1bHQsIHNlYXJjaEVycm9yIH0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IGhhc1F1ZXJ5ID0gISFxdWVyeS50cmltKCk7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gxMChOb3Rpb25Db250ZXh0Q29uc3VtZXIsIHsgY2hpbGRyZW46IChjdHgyKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbXBvbmVudHMsIGRlZmF1bHRQYWdlSWNvbiwgbWFwUGFnZVVybCB9ID0gY3R4MjtcbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MTAoXG4gICAgICAgIGNvbXBvbmVudHMuTW9kYWwsXG4gICAgICAgIHtcbiAgICAgICAgICBpc09wZW4sXG4gICAgICAgICAgY29udGVudExhYmVsOiBcIlNlYXJjaFwiLFxuICAgICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tc2VhcmNoXCIsXG4gICAgICAgICAgb3ZlcmxheUNsYXNzTmFtZTogXCJub3Rpb24tc2VhcmNoLW92ZXJsYXlcIixcbiAgICAgICAgICBvblJlcXVlc3RDbG9zZTogb25DbG9zZSxcbiAgICAgICAgICBvbkFmdGVyT3BlbjogdGhpcy5fb25BZnRlck9wZW4sXG4gICAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3hzNShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJxdWlja0ZpbmRNZW51XCIsIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4czUoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwic2VhcmNoQmFyXCIsIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gxMChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJpbmxpbmVJY29uXCIsIGNoaWxkcmVuOiBpc0xvYWRpbmcgPyAvKiBAX19QVVJFX18gKi8ganN4MTAoTG9hZGluZ0ljb24sIHsgY2xhc3NOYW1lOiBcImxvYWRpbmdJY29uXCIgfSkgOiAvKiBAX19QVVJFX18gKi8ganN4MTAoU2VhcmNoSWNvbiwge30pIH0pLFxuICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MTAoXG4gICAgICAgICAgICAgICAgXCJpbnB1dFwiLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJzZWFyY2hJbnB1dFwiLFxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiU2VhcmNoXCIsXG4gICAgICAgICAgICAgICAgICB2YWx1ZTogcXVlcnksXG4gICAgICAgICAgICAgICAgICByZWY6IHRoaXMuX2lucHV0UmVmLFxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHRoaXMuX29uQ2hhbmdlUXVlcnlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIHF1ZXJ5ICYmIC8qIEBfX1BVUkVfXyAqLyBqc3gxMChcbiAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIHJvbGU6IFwiYnV0dG9uXCIsXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiY2xlYXJCdXR0b25cIixcbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMuX29uQ2xlYXJRdWVyeSxcbiAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4MTAoQ2xlYXJJY29uLCB7IGNsYXNzTmFtZTogXCJjbGVhckljb25cIiB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgXSB9KSxcbiAgICAgICAgICAgIGhhc1F1ZXJ5ICYmIHNlYXJjaFJlc3VsdCAmJiAvKiBAX19QVVJFX18gKi8ganN4MTAoRnJhZ21lbnQzLCB7IGNoaWxkcmVuOiBzZWFyY2hSZXN1bHQucmVzdWx0cy5sZW5ndGggPyAvKiBAX19QVVJFX18gKi8ganN4czUoXG4gICAgICAgICAgICAgIE5vdGlvbkNvbnRleHRQcm92aWRlcixcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIC4uLmN0eDIsXG4gICAgICAgICAgICAgICAgcmVjb3JkTWFwOiBzZWFyY2hSZXN1bHQucmVjb3JkTWFwLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MTAoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicmVzdWx0c1BhbmVcIiwgY2hpbGRyZW46IHNlYXJjaFJlc3VsdC5yZXN1bHRzLm1hcCgocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzNShcbiAgICAgICAgICAgICAgICAgICAgICBjb21wb25lbnRzLlBhZ2VMaW5rLFxuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogY3MoXCJyZXN1bHRcIiwgXCJub3Rpb24tcGFnZS1saW5rXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogbWFwUGFnZVVybChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnBhZ2UuaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRPRE9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2VhcmNoUmVzdWx0LnJlY29yZE1hcFxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gxMChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBQYWdlVGl0bGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2s6IHJlc3VsdC5wYWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdEljb246IGRlZmF1bHRQYWdlSWNvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKChfYSA9IHJlc3VsdC5oaWdobGlnaHQpID09IG51bGwgPyB2b2lkIDAgOiBfYS5odG1sKSAmJiAvKiBAX19QVVJFX18gKi8ganN4MTAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLXNlYXJjaC1yZXN1bHQtaGlnaGxpZ2h0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfX2h0bWw6IHJlc3VsdC5oaWdobGlnaHQuaHRtbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmlkXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICB9KSB9KSxcbiAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gxMChcImZvb3RlclwiLCB7IGNsYXNzTmFtZTogXCJyZXN1bHRzRm9vdGVyXCIsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4czUoXCJkaXZcIiwgeyBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MTAoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcInJlc3VsdHNDb3VudFwiLCBjaGlsZHJlbjogc2VhcmNoUmVzdWx0LnRvdGFsIH0pLFxuICAgICAgICAgICAgICAgICAgICBzZWFyY2hSZXN1bHQudG90YWwgPT09IDEgPyBcIiByZXN1bHRcIiA6IFwiIHJlc3VsdHNcIlxuICAgICAgICAgICAgICAgICAgXSB9KSB9KVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKSA6IC8qIEBfX1BVUkVfXyAqLyBqc3hzNShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub1Jlc3VsdHNQYW5lXCIsIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gxMChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub1Jlc3VsdHNcIiwgY2hpbGRyZW46IFwiTm8gcmVzdWx0c1wiIH0pLFxuICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MTAoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm9SZXN1bHRzRGV0YWlsXCIsIGNoaWxkcmVuOiBcIlRyeSBkaWZmZXJlbnQgc2VhcmNoIHRlcm1zXCIgfSlcbiAgICAgICAgICAgIF0gfSkgfSksXG4gICAgICAgICAgICBoYXNRdWVyeSAmJiAhc2VhcmNoUmVzdWx0ICYmIHNlYXJjaEVycm9yICYmIC8qIEBfX1BVUkVfXyAqLyBqc3gxMChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub1Jlc3VsdHNQYW5lXCIsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4MTAoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm9SZXN1bHRzXCIsIGNoaWxkcmVuOiBcIlNlYXJjaCBlcnJvclwiIH0pIH0pXG4gICAgICAgICAgXSB9KVxuICAgICAgICB9XG4gICAgICApO1xuICAgIH0gfSk7XG4gIH1cbn07XG5cbi8vIHNyYy9jb21wb25lbnRzL2hlYWRlci50c3hcbmltcG9ydCB7IEZyYWdtZW50IGFzIEZyYWdtZW50NSwganN4IGFzIGpzeDExLCBqc3hzIGFzIGpzeHM2IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBIZWFkZXIoe1xuICBibG9ja1xufSkge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDExKFwiaGVhZGVyXCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1oZWFkZXJcIiwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3hzNihcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tbmF2LWhlYWRlclwiLCBjaGlsZHJlbjogW1xuICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gxMShCcmVhZGNydW1icywgeyBibG9jayB9KSxcbiAgICAvKiBAX19QVVJFX18gKi8ganN4MTEoU2VhcmNoLCB7IGJsb2NrIH0pXG4gIF0gfSkgfSk7XG59XG5mdW5jdGlvbiBCcmVhZGNydW1icyh7XG4gIGJsb2NrLFxuICByb290T25seSA9IGZhbHNlXG59KSB7XG4gIGNvbnN0IHsgcmVjb3JkTWFwLCBtYXBQYWdlVXJsLCBjb21wb25lbnRzIH0gPSB1c2VOb3Rpb25Db250ZXh0KCk7XG4gIGNvbnN0IGJyZWFkY3J1bWJzID0gUmVhY3Q4LnVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IHRlbXBCcmVhZGNydW1icyA9IGdldFBhZ2VCcmVhZGNydW1icyhyZWNvcmRNYXAsIGJsb2NrLmlkKTtcbiAgICBpZiAocm9vdE9ubHkpIHtcbiAgICAgIHJldHVybiBbdGVtcEJyZWFkY3J1bWJzID09IG51bGwgPyB2b2lkIDAgOiB0ZW1wQnJlYWRjcnVtYnNbMF1dLmZpbHRlcihCb29sZWFuKTtcbiAgICB9XG4gICAgcmV0dXJuIHRlbXBCcmVhZGNydW1icztcbiAgfSwgW3JlY29yZE1hcCwgYmxvY2suaWQsIHJvb3RPbmx5XSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MTEoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiYnJlYWRjcnVtYnNcIiwgY2hpbGRyZW46IGJyZWFkY3J1bWJzID09IG51bGwgPyB2b2lkIDAgOiBicmVhZGNydW1icy5tYXAoKGJyZWFkY3J1bWIsIGluZGV4KSA9PiB7XG4gICAgaWYgKCFicmVhZGNydW1iKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgcGFnZUxpbmtQcm9wcyA9IHt9O1xuICAgIGNvbnN0IGNvbXBvbmVudE1hcCA9IHtcbiAgICAgIHBhZ2VMaW5rOiBjb21wb25lbnRzLlBhZ2VMaW5rXG4gICAgfTtcbiAgICBpZiAoYnJlYWRjcnVtYi5hY3RpdmUpIHtcbiAgICAgIGNvbXBvbmVudE1hcC5wYWdlTGluayA9IChwcm9wcykgPT4gLyogQF9fUFVSRV9fICovIGpzeDExKFwiZGl2XCIsIHsgLi4ucHJvcHMgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhZ2VMaW5rUHJvcHMuaHJlZiA9IG1hcFBhZ2VVcmwoYnJlYWRjcnVtYi5wYWdlSWQpO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeHM2KFJlYWN0OC5GcmFnbWVudCwgeyBjaGlsZHJlbjogW1xuICAgICAgLyogQF9fUFVSRV9fICovIGpzeHM2KFxuICAgICAgICBjb21wb25lbnRNYXAucGFnZUxpbmssXG4gICAgICAgIHtcbiAgICAgICAgICBjbGFzc05hbWU6IGNzKFwiYnJlYWRjcnVtYlwiLCBicmVhZGNydW1iLmFjdGl2ZSAmJiBcImFjdGl2ZVwiKSxcbiAgICAgICAgICAuLi5wYWdlTGlua1Byb3BzLFxuICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICBicmVhZGNydW1iLmljb24gJiYgLyogQF9fUFVSRV9fICovIGpzeDExKFBhZ2VJY29uLCB7IGNsYXNzTmFtZTogXCJpY29uXCIsIGJsb2NrOiBicmVhZGNydW1iLmJsb2NrIH0pLFxuICAgICAgICAgICAgYnJlYWRjcnVtYi50aXRsZSAmJiAvKiBAX19QVVJFX18gKi8ganN4MTEoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcInRpdGxlXCIsIGNoaWxkcmVuOiBicmVhZGNydW1iLnRpdGxlIH0pXG4gICAgICAgICAgXVxuICAgICAgICB9XG4gICAgICApLFxuICAgICAgaW5kZXggPCBicmVhZGNydW1icy5sZW5ndGggLSAxICYmIC8qIEBfX1BVUkVfXyAqLyBqc3gxMShcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwic3BhY2VyXCIsIGNoaWxkcmVuOiBcIi9cIiB9KVxuICAgIF0gfSwgYnJlYWRjcnVtYi5wYWdlSWQpO1xuICB9KSB9LCBcImJyZWFkY3J1bWJzXCIpO1xufVxuZnVuY3Rpb24gU2VhcmNoKHtcbiAgYmxvY2ssXG4gIHNlYXJjaCxcbiAgdGl0bGUgPSBcIlNlYXJjaFwiXG59KSB7XG4gIGNvbnN0IHsgc2VhcmNoTm90aW9uLCByb290UGFnZUlkLCBpc1Nob3dpbmdTZWFyY2gsIG9uSGlkZVNlYXJjaCB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICBjb25zdCBvblNlYXJjaE5vdGlvbiA9IHNlYXJjaCB8fCBzZWFyY2hOb3Rpb247XG4gIGNvbnN0IFtpc1NlYXJjaE9wZW4sIHNldElzU2VhcmNoT3Blbl0gPSBSZWFjdDgudXNlU3RhdGUoaXNTaG93aW5nU2VhcmNoKTtcbiAgUmVhY3Q4LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0SXNTZWFyY2hPcGVuKGlzU2hvd2luZ1NlYXJjaCk7XG4gIH0sIFtpc1Nob3dpbmdTZWFyY2hdKTtcbiAgY29uc3Qgb25PcGVuU2VhcmNoID0gUmVhY3Q4LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZXRJc1NlYXJjaE9wZW4odHJ1ZSk7XG4gIH0sIFtdKTtcbiAgY29uc3Qgb25DbG9zZVNlYXJjaCA9IFJlYWN0OC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0SXNTZWFyY2hPcGVuKGZhbHNlKTtcbiAgICBpZiAob25IaWRlU2VhcmNoKSB7XG4gICAgICBvbkhpZGVTZWFyY2goKTtcbiAgICB9XG4gIH0sIFtvbkhpZGVTZWFyY2hdKTtcbiAgdXNlSG90a2V5cyhcImNtZCtwXCIsIChldmVudCkgPT4ge1xuICAgIG9uT3BlblNlYXJjaCgpO1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIH0pO1xuICB1c2VIb3RrZXlzKFwiY21kK2tcIiwgKGV2ZW50KSA9PiB7XG4gICAgb25PcGVuU2VhcmNoKCk7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfSk7XG4gIGNvbnN0IGhhc1NlYXJjaCA9ICEhb25TZWFyY2hOb3Rpb247XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4czYoRnJhZ21lbnQ1LCB7IGNoaWxkcmVuOiBbXG4gICAgaGFzU2VhcmNoICYmIC8qIEBfX1BVUkVfXyAqLyBqc3hzNihcbiAgICAgIFwiZGl2XCIsXG4gICAgICB7XG4gICAgICAgIHJvbGU6IFwiYnV0dG9uXCIsXG4gICAgICAgIGNsYXNzTmFtZTogY3MoXCJicmVhZGNydW1iXCIsIFwiYnV0dG9uXCIsIFwibm90aW9uLXNlYXJjaC1idXR0b25cIiksXG4gICAgICAgIG9uQ2xpY2s6IG9uT3BlblNlYXJjaCxcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MTEoU2VhcmNoSWNvbiwgeyBjbGFzc05hbWU6IFwic2VhcmNoSWNvblwiIH0pLFxuICAgICAgICAgIHRpdGxlICYmIC8qIEBfX1BVUkVfXyAqLyBqc3gxMShcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwidGl0bGVcIiwgY2hpbGRyZW46IHRpdGxlIH0pXG4gICAgICAgIF1cbiAgICAgIH1cbiAgICApLFxuICAgIGlzU2VhcmNoT3BlbiAmJiBoYXNTZWFyY2ggJiYgLyogQF9fUFVSRV9fICovIGpzeDExKFxuICAgICAgU2VhcmNoRGlhbG9nLFxuICAgICAge1xuICAgICAgICBpc09wZW46IGlzU2VhcmNoT3BlbixcbiAgICAgICAgcm9vdEJsb2NrSWQ6IHJvb3RQYWdlSWQgfHwgKGJsb2NrID09IG51bGwgPyB2b2lkIDAgOiBibG9jay5pZCksXG4gICAgICAgIG9uQ2xvc2U6IG9uQ2xvc2VTZWFyY2gsXG4gICAgICAgIHNlYXJjaE5vdGlvbjogb25TZWFyY2hOb3Rpb25cbiAgICAgIH1cbiAgICApXG4gIF0gfSk7XG59XG5cbi8vIHNyYy9jb21wb25lbnRzL2xhenktaW1hZ2UudHN4XG5pbXBvcnQgeyBub3JtYWxpemVVcmwgfSBmcm9tIFwibm90aW9uLXV0aWxzXCI7XG5pbXBvcnQgKiBhcyBSZWFjdDkgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBJbWFnZVN0YXRlLCBMYXp5SW1hZ2VGdWxsIH0gZnJvbSBcInJlYWN0LWxhenktaW1hZ2VzXCI7XG5pbXBvcnQgeyBqc3ggYXMganN4MTIsIGpzeHMgYXMganN4czcgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIExhenlJbWFnZSh7XG4gIHNyYyxcbiAgYWx0LFxuICBjbGFzc05hbWUsXG4gIHN0eWxlLFxuICB6b29tYWJsZSA9IGZhbHNlLFxuICBwcmlvcml0eSA9IGZhbHNlLFxuICBoZWlnaHQsXG4gIC4uLnJlc3Rcbn0pIHtcbiAgdmFyIF9hLCBfYiwgX2M7XG4gIGNvbnN0IHsgcmVjb3JkTWFwLCB6b29tLCBwcmV2aWV3SW1hZ2VzLCBmb3JjZUN1c3RvbUltYWdlcywgY29tcG9uZW50cyB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICBjb25zdCB6b29tUmVmID0gUmVhY3Q5LnVzZVJlZih6b29tID8gem9vbS5jbG9uZSgpIDogbnVsbCk7XG4gIGNvbnN0IHByZXZpZXdJbWFnZSA9IHByZXZpZXdJbWFnZXMgPyAoX2MgPSAoX2EgPSByZWNvcmRNYXAgPT0gbnVsbCA/IHZvaWQgMCA6IHJlY29yZE1hcC5wcmV2aWV3X2ltYWdlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hW3NyY10pICE9IG51bGwgPyBfYyA6IChfYiA9IHJlY29yZE1hcCA9PSBudWxsID8gdm9pZCAwIDogcmVjb3JkTWFwLnByZXZpZXdfaW1hZ2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2Jbbm9ybWFsaXplVXJsKHNyYyldIDogbnVsbDtcbiAgY29uc3Qgb25Mb2FkID0gUmVhY3Q5LnVzZUNhbGxiYWNrKFxuICAgIChlKSA9PiB7XG4gICAgICBpZiAoem9vbWFibGUgJiYgKGUudGFyZ2V0LnNyYyB8fCBlLnRhcmdldC5zcmNzZXQpKSB7XG4gICAgICAgIGlmICh6b29tUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICA7XG4gICAgICAgICAgem9vbVJlZi5jdXJyZW50LmF0dGFjaChlLnRhcmdldCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIFt6b29tUmVmLCB6b29tYWJsZV1cbiAgKTtcbiAgY29uc3QgYXR0YWNoWm9vbSA9IFJlYWN0OS51c2VDYWxsYmFjayhcbiAgICAoaW1hZ2UpID0+IHtcbiAgICAgIGlmICh6b29tUmVmLmN1cnJlbnQgJiYgaW1hZ2UpIHtcbiAgICAgICAgO1xuICAgICAgICB6b29tUmVmLmN1cnJlbnQuYXR0YWNoKGltYWdlKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFt6b29tUmVmXVxuICApO1xuICBjb25zdCBhdHRhY2hab29tUmVmID0gUmVhY3Q5LnVzZU1lbW8oXG4gICAgKCkgPT4gem9vbWFibGUgPyBhdHRhY2hab29tIDogdm9pZCAwLFxuICAgIFt6b29tYWJsZSwgYXR0YWNoWm9vbV1cbiAgKTtcbiAgaWYgKHByZXZpZXdJbWFnZSkge1xuICAgIGNvbnN0IGFzcGVjdFJhdGlvID0gcHJldmlld0ltYWdlLm9yaWdpbmFsSGVpZ2h0IC8gcHJldmlld0ltYWdlLm9yaWdpbmFsV2lkdGg7XG4gICAgaWYgKGNvbXBvbmVudHMuSW1hZ2UpIHtcbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MTIoXG4gICAgICAgIGNvbXBvbmVudHMuSW1hZ2UsXG4gICAgICAgIHtcbiAgICAgICAgICBzcmMsXG4gICAgICAgICAgYWx0LFxuICAgICAgICAgIHN0eWxlLFxuICAgICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgICB3aWR0aDogcHJldmlld0ltYWdlLm9yaWdpbmFsV2lkdGgsXG4gICAgICAgICAgaGVpZ2h0OiBwcmV2aWV3SW1hZ2Uub3JpZ2luYWxIZWlnaHQsXG4gICAgICAgICAgYmx1ckRhdGFVUkw6IHByZXZpZXdJbWFnZS5kYXRhVVJJQmFzZTY0LFxuICAgICAgICAgIHBsYWNlaG9sZGVyOiBcImJsdXJcIixcbiAgICAgICAgICBwcmlvcml0eSxcbiAgICAgICAgICBvbkxvYWRcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgTGF6eUltYWdlIHR5cGVzIGFyZSBvdXQtb2YtZGF0ZS5cbiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gxMihMYXp5SW1hZ2VGdWxsLCB7IHNyYywgLi4ucmVzdCwgZXhwZXJpbWVudGFsRGVjb2RlOiB0cnVlLCBjaGlsZHJlbjogKHsgaW1hZ2VTdGF0ZSwgcmVmIH0pID0+IHtcbiAgICAgICAgY29uc3QgaXNMb2FkZWQgPSBpbWFnZVN0YXRlID09PSBJbWFnZVN0YXRlLkxvYWRTdWNjZXNzO1xuICAgICAgICBjb25zdCB3cmFwcGVyU3R5bGUgPSB7XG4gICAgICAgICAgd2lkdGg6IFwiMTAwJVwiXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGltZ1N0eWxlID0ge307XG4gICAgICAgIGlmIChoZWlnaHQpIHtcbiAgICAgICAgICB3cmFwcGVyU3R5bGUuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGltZ1N0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICAgICAgICAgIHdyYXBwZXJTdHlsZS5wYWRkaW5nQm90dG9tID0gYCR7YXNwZWN0UmF0aW8gKiAxMDB9JWA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzNyhcbiAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogY3MoXG4gICAgICAgICAgICAgIFwibGF6eS1pbWFnZS13cmFwcGVyXCIsXG4gICAgICAgICAgICAgIGlzTG9hZGVkICYmIFwibGF6eS1pbWFnZS1sb2FkZWRcIixcbiAgICAgICAgICAgICAgY2xhc3NOYW1lXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgc3R5bGU6IHdyYXBwZXJTdHlsZSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gxMihcbiAgICAgICAgICAgICAgICBcImltZ1wiLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJsYXp5LWltYWdlLXByZXZpZXdcIixcbiAgICAgICAgICAgICAgICAgIHNyYzogcHJldmlld0ltYWdlLmRhdGFVUklCYXNlNjQsXG4gICAgICAgICAgICAgICAgICBhbHQsXG4gICAgICAgICAgICAgICAgICByZWYsXG4gICAgICAgICAgICAgICAgICBzdHlsZSxcbiAgICAgICAgICAgICAgICAgIGRlY29kaW5nOiBcImFzeW5jXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gxMihcbiAgICAgICAgICAgICAgICBcImltZ1wiLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJsYXp5LWltYWdlLXJlYWxcIixcbiAgICAgICAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgICAgICAgIGFsdCxcbiAgICAgICAgICAgICAgICAgIHJlZjogYXR0YWNoWm9vbVJlZixcbiAgICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLnN0eWxlLFxuICAgICAgICAgICAgICAgICAgICAuLi5pbWdTdHlsZVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHdpZHRoOiBwcmV2aWV3SW1hZ2Uub3JpZ2luYWxXaWR0aCxcbiAgICAgICAgICAgICAgICAgIGhlaWdodDogcHJldmlld0ltYWdlLm9yaWdpbmFsSGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgZGVjb2Rpbmc6IFwiYXN5bmNcIixcbiAgICAgICAgICAgICAgICAgIGxvYWRpbmc6IFwibGF6eVwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICBdXG4gICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgfSB9KVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKGNvbXBvbmVudHMuSW1hZ2UgJiYgZm9yY2VDdXN0b21JbWFnZXMpIHtcbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MTIoXG4gICAgICAgIGNvbXBvbmVudHMuSW1hZ2UsXG4gICAgICAgIHtcbiAgICAgICAgICBzcmMsXG4gICAgICAgICAgYWx0LFxuICAgICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgICBzdHlsZSxcbiAgICAgICAgICB3aWR0aDogbnVsbCxcbiAgICAgICAgICBoZWlnaHQ6IGhlaWdodCB8fCBudWxsLFxuICAgICAgICAgIHByaW9yaXR5LFxuICAgICAgICAgIG9uTG9hZFxuICAgICAgICB9XG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDEyKFxuICAgICAgXCJpbWdcIixcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICBzdHlsZSxcbiAgICAgICAgc3JjLFxuICAgICAgICBhbHQsXG4gICAgICAgIHJlZjogYXR0YWNoWm9vbVJlZixcbiAgICAgICAgbG9hZGluZzogXCJsYXp5XCIsXG4gICAgICAgIGRlY29kaW5nOiBcImFzeW5jXCIsXG4gICAgICAgIC4uLnJlc3RcbiAgICAgIH1cbiAgICApO1xuICB9XG59XG5cbi8vIHNyYy9jb21wb25lbnRzL2Fzc2V0LnRzeFxuaW1wb3J0IFwibm90aW9uLXR5cGVzXCI7XG5pbXBvcnQgeyBnZXRUZXh0Q29udGVudCB9IGZyb20gXCJub3Rpb24tdXRpbHNcIjtcblxuLy8gc3JjL2NvbXBvbmVudHMvbGl0ZS15b3V0dWJlLWVtYmVkLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QxMCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IEZyYWdtZW50IGFzIEZyYWdtZW50NiwganN4IGFzIGpzeDEzLCBqc3hzIGFzIGpzeHM4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG52YXIgcXMgPSAocGFyYW1zKSA9PiB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhwYXJhbXMpLm1hcChcbiAgICAoa2V5KSA9PiBgJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQocGFyYW1zW2tleV0pfWBcbiAgKS5qb2luKFwiJlwiKTtcbn07XG5mdW5jdGlvbiBMaXRlWW91VHViZUVtYmVkKHtcbiAgaWQsXG4gIGRlZmF1bHRQbGF5ID0gZmFsc2UsXG4gIG11dGUgPSBmYWxzZSxcbiAgbGF6eUltYWdlID0gZmFsc2UsXG4gIGlmcmFtZVRpdGxlID0gXCJZb3VUdWJlIHZpZGVvXCIsXG4gIGFsdCA9IFwiVmlkZW8gcHJldmlld1wiLFxuICBwYXJhbXMgPSB7fSxcbiAgYWRMaW5rc1ByZWNvbm5lY3QgPSB0cnVlLFxuICBzdHlsZSxcbiAgY2xhc3NOYW1lXG59KSB7XG4gIGNvbnN0IG11dGVQYXJhbSA9IG11dGUgfHwgZGVmYXVsdFBsYXkgPyBcIjFcIiA6IFwiMFwiO1xuICBjb25zdCBxdWVyeVN0cmluZyA9IFJlYWN0MTAudXNlTWVtbyhcbiAgICAoKSA9PiBxcyh7IGF1dG9wbGF5OiBcIjFcIiwgbXV0ZTogbXV0ZVBhcmFtLCAuLi5wYXJhbXMgfSksXG4gICAgW211dGVQYXJhbSwgcGFyYW1zXVxuICApO1xuICBjb25zdCByZXNvbHV0aW9uID0gXCJocWRlZmF1bHRcIjtcbiAgY29uc3QgcG9zdGVyVXJsID0gYGh0dHBzOi8vaS55dGltZy5jb20vdmkvJHtpZH0vJHtyZXNvbHV0aW9ufS5qcGdgO1xuICBjb25zdCB5dFVybCA9IFwiaHR0cHM6Ly93d3cueW91dHViZS1ub2Nvb2tpZS5jb21cIjtcbiAgY29uc3QgaWZyYW1lU3JjID0gYCR7eXRVcmx9L2VtYmVkLyR7aWR9PyR7cXVlcnlTdHJpbmd9YDtcbiAgY29uc3QgW2lzUHJlY29ubmVjdGVkLCBzZXRJc1ByZWNvbm5lY3RlZF0gPSBSZWFjdDEwLnVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2lmcmFtZUluaXRpYWxpemVkLCBzZXRJZnJhbWVJbml0aWFsaXplZF0gPSBSZWFjdDEwLnVzZVN0YXRlKGRlZmF1bHRQbGF5KTtcbiAgY29uc3QgW2lzSWZyYW1lTG9hZGVkLCBzZXRJc0lmcmFtZUxvYWRlZF0gPSBSZWFjdDEwLnVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3Qgd2FybUNvbm5lY3Rpb25zID0gUmVhY3QxMC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKGlzUHJlY29ubmVjdGVkKSByZXR1cm47XG4gICAgc2V0SXNQcmVjb25uZWN0ZWQodHJ1ZSk7XG4gIH0sIFtpc1ByZWNvbm5lY3RlZF0pO1xuICBjb25zdCBvbkxvYWRJZnJhbWUgPSBSZWFjdDEwLnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAoaWZyYW1lSW5pdGlhbGl6ZWQpIHJldHVybjtcbiAgICBzZXRJZnJhbWVJbml0aWFsaXplZCh0cnVlKTtcbiAgfSwgW2lmcmFtZUluaXRpYWxpemVkXSk7XG4gIGNvbnN0IG9uSWZyYW1lTG9hZGVkID0gUmVhY3QxMC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0SXNJZnJhbWVMb2FkZWQodHJ1ZSk7XG4gIH0sIFtdKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzOChGcmFnbWVudDYsIHsgY2hpbGRyZW46IFtcbiAgICAvKiBAX19QVVJFX18gKi8ganN4MTMoXCJsaW5rXCIsIHsgcmVsOiBcInByZWxvYWRcIiwgaHJlZjogcG9zdGVyVXJsLCBhczogXCJpbWFnZVwiIH0pLFxuICAgIGlzUHJlY29ubmVjdGVkICYmIC8qIEBfX1BVUkVfXyAqLyBqc3hzOChGcmFnbWVudDYsIHsgY2hpbGRyZW46IFtcbiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gxMyhcImxpbmtcIiwgeyByZWw6IFwicHJlY29ubmVjdFwiLCBocmVmOiB5dFVybCB9KSxcbiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gxMyhcImxpbmtcIiwgeyByZWw6IFwicHJlY29ubmVjdFwiLCBocmVmOiBcImh0dHBzOi8vd3d3Lmdvb2dsZS5jb21cIiB9KVxuICAgIF0gfSksXG4gICAgaXNQcmVjb25uZWN0ZWQgJiYgYWRMaW5rc1ByZWNvbm5lY3QgJiYgLyogQF9fUFVSRV9fICovIGpzeHM4KEZyYWdtZW50NiwgeyBjaGlsZHJlbjogW1xuICAgICAgLyogQF9fUFVSRV9fICovIGpzeDEzKFwibGlua1wiLCB7IHJlbDogXCJwcmVjb25uZWN0XCIsIGhyZWY6IFwiaHR0cHM6Ly9zdGF0aWMuZG91YmxlY2xpY2submV0XCIgfSksXG4gICAgICAvKiBAX19QVVJFX18gKi8ganN4MTMoXCJsaW5rXCIsIHsgcmVsOiBcInByZWNvbm5lY3RcIiwgaHJlZjogXCJodHRwczovL2dvb2dsZWFkcy5nLmRvdWJsZWNsaWNrLm5ldFwiIH0pXG4gICAgXSB9KSxcbiAgICAvKiBAX19QVVJFX18gKi8ganN4czgoXG4gICAgICBcImRpdlwiLFxuICAgICAge1xuICAgICAgICBvbkNsaWNrOiBvbkxvYWRJZnJhbWUsXG4gICAgICAgIG9uUG9pbnRlck92ZXI6IHdhcm1Db25uZWN0aW9ucyxcbiAgICAgICAgY2xhc3NOYW1lOiBjcyhcbiAgICAgICAgICBcIm5vdGlvbi15dC1saXRlXCIsXG4gICAgICAgICAgaXNJZnJhbWVMb2FkZWQgJiYgXCJub3Rpb24teXQtbG9hZGVkXCIsXG4gICAgICAgICAgaWZyYW1lSW5pdGlhbGl6ZWQgJiYgXCJub3Rpb24teXQtaW5pdGlhbGl6ZWRcIixcbiAgICAgICAgICBjbGFzc05hbWVcbiAgICAgICAgKSxcbiAgICAgICAgc3R5bGUsXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDEzKFxuICAgICAgICAgICAgXCJpbWdcIixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgc3JjOiBwb3N0ZXJVcmwsXG4gICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24teXQtdGh1bWJuYWlsXCIsXG4gICAgICAgICAgICAgIGxvYWRpbmc6IGxhenlJbWFnZSA/IFwibGF6eVwiIDogdm9pZCAwLFxuICAgICAgICAgICAgICBhbHRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApLFxuICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gxMyhcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24teXQtcGxheWJ0blwiIH0pLFxuICAgICAgICAgIGlmcmFtZUluaXRpYWxpemVkICYmIC8qIEBfX1BVUkVfXyAqLyBqc3gxMyhcbiAgICAgICAgICAgIFwiaWZyYW1lXCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIjU2MFwiLFxuICAgICAgICAgICAgICBoZWlnaHQ6IFwiMzE1XCIsXG4gICAgICAgICAgICAgIGZyYW1lQm9yZGVyOiBcIjBcIixcbiAgICAgICAgICAgICAgYWxsb3c6IFwiYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmVcIixcbiAgICAgICAgICAgICAgYWxsb3dGdWxsU2NyZWVuOiB0cnVlLFxuICAgICAgICAgICAgICB0aXRsZTogaWZyYW1lVGl0bGUsXG4gICAgICAgICAgICAgIHNyYzogaWZyYW1lU3JjLFxuICAgICAgICAgICAgICBvbkxvYWQ6IG9uSWZyYW1lTG9hZGVkXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKVxuICAgICAgICBdXG4gICAgICB9XG4gICAgKVxuICBdIH0pO1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9hc3NldC50c3hcbmltcG9ydCB7IEZyYWdtZW50IGFzIEZyYWdtZW50NywganN4IGFzIGpzeDE0LCBqc3hzIGFzIGpzeHM5IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG52YXIgaXNTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiO1xudmFyIHN1cHBvcnRlZEFzc2V0VHlwZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXG4gIFwicmVwbGl0XCIsXG4gIFwidmlkZW9cIixcbiAgXCJpbWFnZVwiLFxuICBcImVtYmVkXCIsXG4gIFwiZmlnbWFcIixcbiAgXCJ0eXBlZm9ybVwiLFxuICBcImV4Y2FsaWRyYXdcIixcbiAgXCJtYXBzXCIsXG4gIFwidHdlZXRcIixcbiAgXCJwZGZcIixcbiAgXCJnaXN0XCIsXG4gIFwiY29kZXBlblwiLFxuICBcImRyaXZlXCJcbl0pO1xuZnVuY3Rpb24gQXNzZXQoe1xuICBibG9jayxcbiAgem9vbWFibGUgPSB0cnVlLFxuICBjaGlsZHJlblxufSkge1xuICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oLCBfaSwgX2osIF9rLCBfbDtcbiAgY29uc3QgeyByZWNvcmRNYXAsIG1hcEltYWdlVXJsLCBjb21wb25lbnRzIH0gPSB1c2VOb3Rpb25Db250ZXh0KCk7XG4gIGlmICghYmxvY2sgfHwgIXN1cHBvcnRlZEFzc2V0VHlwZXMuaGFzKGJsb2NrLnR5cGUpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3Qgc3R5bGUgPSB7XG4gICAgcG9zaXRpb246IFwicmVsYXRpdmVcIixcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICBhbGlnblNlbGY6IFwiY2VudGVyXCIsXG4gICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgIG1heFdpZHRoOiBcIjEwMCVcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiXG4gIH07XG4gIGNvbnN0IGFzc2V0U3R5bGUgPSB7fTtcbiAgaWYgKGJsb2NrLmZvcm1hdCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGJsb2NrX2FzcGVjdF9yYXRpbyxcbiAgICAgIGJsb2NrX2hlaWdodCxcbiAgICAgIGJsb2NrX3dpZHRoLFxuICAgICAgYmxvY2tfZnVsbF93aWR0aCxcbiAgICAgIGJsb2NrX3BhZ2Vfd2lkdGgsXG4gICAgICBibG9ja19wcmVzZXJ2ZV9zY2FsZVxuICAgIH0gPSBibG9jay5mb3JtYXQ7XG4gICAgaWYgKGJsb2NrX2Z1bGxfd2lkdGggfHwgYmxvY2tfcGFnZV93aWR0aCkge1xuICAgICAgaWYgKGJsb2NrX2Z1bGxfd2lkdGgpIHtcbiAgICAgICAgc3R5bGUud2lkdGggPSBcIjEwMHZ3XCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdHlsZS53aWR0aCA9IFwiMTAwJVwiO1xuICAgICAgfVxuICAgICAgaWYgKGJsb2NrLnR5cGUgPT09IFwidmlkZW9cIikge1xuICAgICAgICBpZiAoYmxvY2tfaGVpZ2h0KSB7XG4gICAgICAgICAgc3R5bGUuaGVpZ2h0ID0gYmxvY2tfaGVpZ2h0O1xuICAgICAgICB9IGVsc2UgaWYgKGJsb2NrX2FzcGVjdF9yYXRpbykge1xuICAgICAgICAgIHN0eWxlLnBhZGRpbmdCb3R0b20gPSBgJHtibG9ja19hc3BlY3RfcmF0aW8gKiAxMDB9JWA7XG4gICAgICAgIH0gZWxzZSBpZiAoYmxvY2tfcHJlc2VydmVfc2NhbGUpIHtcbiAgICAgICAgICBzdHlsZS5vYmplY3RGaXQgPSBcImNvbnRhaW5cIjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChibG9ja19hc3BlY3RfcmF0aW8gJiYgYmxvY2sudHlwZSAhPT0gXCJpbWFnZVwiKSB7XG4gICAgICAgIHN0eWxlLnBhZGRpbmdCb3R0b20gPSBgJHtibG9ja19hc3BlY3RfcmF0aW8gKiAxMDB9JWA7XG4gICAgICB9IGVsc2UgaWYgKGJsb2NrX2hlaWdodCkge1xuICAgICAgICBzdHlsZS5oZWlnaHQgPSBibG9ja19oZWlnaHQ7XG4gICAgICB9IGVsc2UgaWYgKGJsb2NrX3ByZXNlcnZlX3NjYWxlKSB7XG4gICAgICAgIGlmIChibG9jay50eXBlID09PSBcImltYWdlXCIpIHtcbiAgICAgICAgICBzdHlsZS5oZWlnaHQgPSBcIjEwMCVcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdHlsZS5wYWRkaW5nQm90dG9tID0gXCI3NSVcIjtcbiAgICAgICAgICBzdHlsZS5taW5IZWlnaHQgPSAxMDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc3dpdGNoICgoX2EgPSBibG9jay5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfYS5ibG9ja19hbGlnbm1lbnQpIHtcbiAgICAgICAgY2FzZSBcImNlbnRlclwiOlxuICAgICAgICAgIHN0eWxlLmFsaWduU2VsZiA9IFwiY2VudGVyXCI7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJsZWZ0XCI6XG4gICAgICAgICAgc3R5bGUuYWxpZ25TZWxmID0gXCJzdGFydFwiO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwicmlnaHRcIjpcbiAgICAgICAgICBzdHlsZS5hbGlnblNlbGYgPSBcImVuZFwiO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgaWYgKGJsb2NrX3dpZHRoKSB7XG4gICAgICAgIHN0eWxlLndpZHRoID0gYmxvY2tfd2lkdGg7XG4gICAgICB9XG4gICAgICBpZiAoYmxvY2tfcHJlc2VydmVfc2NhbGUgJiYgYmxvY2sudHlwZSAhPT0gXCJpbWFnZVwiKSB7XG4gICAgICAgIHN0eWxlLnBhZGRpbmdCb3R0b20gPSBcIjUwJVwiO1xuICAgICAgICBzdHlsZS5taW5IZWlnaHQgPSAxMDA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoYmxvY2tfaGVpZ2h0ICYmIGJsb2NrLnR5cGUgIT09IFwiaW1hZ2VcIikge1xuICAgICAgICAgIHN0eWxlLmhlaWdodCA9IGJsb2NrX2hlaWdodDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBpZiAoYmxvY2sudHlwZSA9PT0gXCJpbWFnZVwiKSB7XG4gICAgICBhc3NldFN0eWxlLm9iamVjdEZpdCA9IFwiY292ZXJcIjtcbiAgICB9IGVsc2UgaWYgKGJsb2NrX3ByZXNlcnZlX3NjYWxlKSB7XG4gICAgICBhc3NldFN0eWxlLm9iamVjdEZpdCA9IFwiY29udGFpblwiO1xuICAgIH1cbiAgfVxuICBsZXQgc291cmNlID0gKChfYiA9IHJlY29yZE1hcC5zaWduZWRfdXJscykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iW2Jsb2NrLmlkXSkgfHwgKChfZSA9IChfZCA9IChfYyA9IGJsb2NrLnByb3BlcnRpZXMpID09IG51bGwgPyB2b2lkIDAgOiBfYy5zb3VyY2UpID09IG51bGwgPyB2b2lkIDAgOiBfZFswXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9lWzBdKTtcbiAgbGV0IGNvbnRlbnQgPSBudWxsO1xuICBpZiAoIXNvdXJjZSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGlmIChibG9jay50eXBlID09PSBcInR3ZWV0XCIpIHtcbiAgICBjb25zdCBzcmMgPSBzb3VyY2U7XG4gICAgaWYgKCFzcmMpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGlkID0gKF9nID0gKF9mID0gc3JjLnNwbGl0KFwiP1wiKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9mWzBdKSA9PSBudWxsID8gdm9pZCAwIDogX2cuc3BsaXQoXCIvXCIpLnBvcCgpO1xuICAgIGlmICghaWQpIHJldHVybiBudWxsO1xuICAgIGNvbnRlbnQgPSAvKiBAX19QVVJFX18gKi8ganN4MTQoXG4gICAgICBcImRpdlwiLFxuICAgICAge1xuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIC4uLmFzc2V0U3R5bGUsXG4gICAgICAgICAgbWF4V2lkdGg6IDQyMCxcbiAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgICAgbWFyZ2luTGVmdDogXCJhdXRvXCIsXG4gICAgICAgICAgbWFyZ2luUmlnaHQ6IFwiYXV0b1wiXG4gICAgICAgIH0sXG4gICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4MTQoY29tcG9uZW50cy5Ud2VldCwgeyBpZCB9KVxuICAgICAgfVxuICAgICk7XG4gIH0gZWxzZSBpZiAoYmxvY2sudHlwZSA9PT0gXCJwZGZcIikge1xuICAgIHN0eWxlLm92ZXJmbG93ID0gXCJhdXRvXCI7XG4gICAgc3R5bGUuYmFja2dyb3VuZCA9IFwicmdiKDIyNiwgMjI2LCAyMjYpXCI7XG4gICAgc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICBpZiAoIXN0eWxlLnBhZGRpbmcpIHtcbiAgICAgIHN0eWxlLnBhZGRpbmcgPSBcIjhweCAxNnB4XCI7XG4gICAgfVxuICAgIGlmICghaXNTZXJ2ZXIpIHtcbiAgICAgIGNvbnRlbnQgPSAvKiBAX19QVVJFX18gKi8ganN4MTQoY29tcG9uZW50cy5QZGYsIHsgZmlsZTogc291cmNlIH0pO1xuICAgIH1cbiAgfSBlbHNlIGlmIChibG9jay50eXBlID09PSBcImVtYmVkXCIgfHwgYmxvY2sudHlwZSA9PT0gXCJ2aWRlb1wiIHx8IGJsb2NrLnR5cGUgPT09IFwiZmlnbWFcIiB8fCBibG9jay50eXBlID09PSBcInR5cGVmb3JtXCIgfHwgYmxvY2sudHlwZSA9PT0gXCJnaXN0XCIgfHwgYmxvY2sudHlwZSA9PT0gXCJtYXBzXCIgfHwgYmxvY2sudHlwZSA9PT0gXCJleGNhbGlkcmF3XCIgfHwgYmxvY2sudHlwZSA9PT0gXCJjb2RlcGVuXCIgfHwgYmxvY2sudHlwZSA9PT0gXCJkcml2ZVwiIHx8IGJsb2NrLnR5cGUgPT09IFwicmVwbGl0XCIpIHtcbiAgICBpZiAoYmxvY2sudHlwZSA9PT0gXCJ2aWRlb1wiICYmIHNvdXJjZSAmJiAhc291cmNlLmluY2x1ZGVzKFwieW91dHViZVwiKSAmJiAhc291cmNlLmluY2x1ZGVzKFwieW91dHUuYmVcIikgJiYgIXNvdXJjZS5pbmNsdWRlcyhcInZpbWVvXCIpICYmICFzb3VyY2UuaW5jbHVkZXMoXCJ3aXN0aWFcIikgJiYgIXNvdXJjZS5pbmNsdWRlcyhcImxvb21cIikgJiYgIXNvdXJjZS5pbmNsdWRlcyhcInZpZGVvYXNrXCIpICYmICFzb3VyY2UuaW5jbHVkZXMoXCJnZXRjbG91ZGFwcFwiKSAmJiAhc291cmNlLmluY2x1ZGVzKFwidGVsbGFcIikpIHtcbiAgICAgIHN0eWxlLnBhZGRpbmdCb3R0b20gPSB2b2lkIDA7XG4gICAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIGpzeDE0KFxuICAgICAgICBcInZpZGVvXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBwbGF5c0lubGluZTogdHJ1ZSxcbiAgICAgICAgICBjb250cm9sczogdHJ1ZSxcbiAgICAgICAgICBwcmVsb2FkOiBcIm1ldGFkYXRhXCIsXG4gICAgICAgICAgc3R5bGU6IGFzc2V0U3R5bGUsXG4gICAgICAgICAgc3JjOiBzb3VyY2UsXG4gICAgICAgICAgdGl0bGU6IGJsb2NrLnR5cGVcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IHNyYyA9ICgoX2ggPSBibG9jay5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfaC5kaXNwbGF5X3NvdXJjZSkgfHwgc291cmNlO1xuICAgICAgaWYgKHNyYykge1xuICAgICAgICBjb25zdCB5b3V0dWJlVmlkZW9JZCA9IGJsb2NrLnR5cGUgPT09IFwidmlkZW9cIiA/IGdldFlvdXR1YmVJZChzcmMpIDogbnVsbDtcbiAgICAgICAgaWYgKHlvdXR1YmVWaWRlb0lkKSB7XG4gICAgICAgICAgY29uc3QgcGFyYW1zID0gZ2V0VXJsUGFyYW1zKHNyYyk7XG4gICAgICAgICAgY29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBqc3gxNChcbiAgICAgICAgICAgIExpdGVZb3VUdWJlRW1iZWQsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGlkOiB5b3V0dWJlVmlkZW9JZCxcbiAgICAgICAgICAgICAgc3R5bGU6IGFzc2V0U3R5bGUsXG4gICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tYXNzZXQtb2JqZWN0LWZpdFwiLFxuICAgICAgICAgICAgICBwYXJhbXNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApO1xuICAgICAgICB9IGVsc2UgaWYgKGJsb2NrLnR5cGUgPT09IFwiZ2lzdFwiKSB7XG4gICAgICAgICAgaWYgKCFzcmMuZW5kc1dpdGgoXCIucGliYlwiKSkge1xuICAgICAgICAgICAgc3JjID0gYCR7c3JjfS5waWJiYDtcbiAgICAgICAgICB9XG4gICAgICAgICAgYXNzZXRTdHlsZS53aWR0aCA9IFwiMTAwJVwiO1xuICAgICAgICAgIHN0eWxlLnBhZGRpbmdCb3R0b20gPSBcIjUwJVwiO1xuICAgICAgICAgIGNvbnRlbnQgPSAvKiBAX19QVVJFX18gKi8ganN4MTQoXG4gICAgICAgICAgICBcImlmcmFtZVwiLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBzdHlsZTogYXNzZXRTdHlsZSxcbiAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1hc3NldC1vYmplY3QtZml0XCIsXG4gICAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgICAgdGl0bGU6IFwiR2l0SHViIEdpc3RcIixcbiAgICAgICAgICAgICAgZnJhbWVCb3JkZXI6IFwiMFwiLFxuICAgICAgICAgICAgICBsb2FkaW5nOiBcImxhenlcIixcbiAgICAgICAgICAgICAgc2Nyb2xsaW5nOiBcImF1dG9cIlxuICAgICAgICAgICAgfVxuICAgICAgICAgICk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3JjICs9IGJsb2NrLnR5cGUgPT09IFwidHlwZWZvcm1cIiA/IFwiJmRpc2FibGUtYXV0by1mb2N1cz10cnVlXCIgOiBcIlwiO1xuICAgICAgICAgIGNvbnRlbnQgPSAvKiBAX19QVVJFX18gKi8ganN4MTQoXG4gICAgICAgICAgICBcImlmcmFtZVwiLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLWFzc2V0LW9iamVjdC1maXRcIixcbiAgICAgICAgICAgICAgc3R5bGU6IGFzc2V0U3R5bGUsXG4gICAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgICAgdGl0bGU6IGBpZnJhbWUgJHtibG9jay50eXBlfWAsXG4gICAgICAgICAgICAgIGZyYW1lQm9yZGVyOiBcIjBcIixcbiAgICAgICAgICAgICAgYWxsb3dGdWxsU2NyZWVuOiB0cnVlLFxuICAgICAgICAgICAgICBsb2FkaW5nOiBcImxhenlcIixcbiAgICAgICAgICAgICAgc2Nyb2xsaW5nOiBcImF1dG9cIlxuICAgICAgICAgICAgfVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSBpZiAoYmxvY2sudHlwZSA9PT0gXCJpbWFnZVwiKSB7XG4gICAgaWYgKHNvdXJjZS5pbmNsdWRlcyhcImZpbGUubm90aW9uLnNvXCIpKSB7XG4gICAgICBzb3VyY2UgPSAoX2sgPSAoX2ogPSAoX2kgPSBibG9jay5wcm9wZXJ0aWVzKSA9PSBudWxsID8gdm9pZCAwIDogX2kuc291cmNlKSA9PSBudWxsID8gdm9pZCAwIDogX2pbMF0pID09IG51bGwgPyB2b2lkIDAgOiBfa1swXTtcbiAgICB9XG4gICAgY29uc3Qgc3JjID0gbWFwSW1hZ2VVcmwoc291cmNlLCBibG9jayk7XG4gICAgY29uc3QgY2FwdGlvbiA9IGdldFRleHRDb250ZW50KChfbCA9IGJsb2NrLnByb3BlcnRpZXMpID09IG51bGwgPyB2b2lkIDAgOiBfbC5jYXB0aW9uKTtcbiAgICBjb25zdCBhbHQgPSBjYXB0aW9uIHx8IFwibm90aW9uIGltYWdlXCI7XG4gICAgY29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBqc3gxNChcbiAgICAgIExhenlJbWFnZSxcbiAgICAgIHtcbiAgICAgICAgc3JjLFxuICAgICAgICBhbHQsXG4gICAgICAgIHpvb21hYmxlLFxuICAgICAgICBoZWlnaHQ6IHN0eWxlLmhlaWdodCxcbiAgICAgICAgc3R5bGU6IGFzc2V0U3R5bGVcbiAgICAgIH1cbiAgICApO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4czkoRnJhZ21lbnQ3LCB7IGNoaWxkcmVuOiBbXG4gICAgLyogQF9fUFVSRV9fICovIGpzeHM5KFwiZGl2XCIsIHsgc3R5bGUsIGNoaWxkcmVuOiBbXG4gICAgICBjb250ZW50LFxuICAgICAgYmxvY2sudHlwZSA9PT0gXCJpbWFnZVwiICYmIGNoaWxkcmVuXG4gICAgXSB9KSxcbiAgICBibG9jay50eXBlICE9PSBcImltYWdlXCIgJiYgY2hpbGRyZW5cbiAgXSB9KTtcbn1cblxuLy8gc3JjL2NvbXBvbmVudHMvYXNzZXQtd3JhcHBlci50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3gxNSB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xudmFyIHVybFN0eWxlID0geyB3aWR0aDogXCIxMDAlXCIgfTtcbmZ1bmN0aW9uIEFzc2V0V3JhcHBlcih7XG4gIGJsb2NrSWQsXG4gIGJsb2NrXG59KSB7XG4gIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZywgX2g7XG4gIGNvbnN0IHZhbHVlID0gYmxvY2s7XG4gIGNvbnN0IHsgY29tcG9uZW50cywgbWFwUGFnZVVybCwgcm9vdERvbWFpbiwgem9vbSB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICBsZXQgaXNVUkwgPSBmYWxzZTtcbiAgaWYgKGJsb2NrLnR5cGUgPT09IFwiaW1hZ2VcIikge1xuICAgIGNvbnN0IGNhcHRpb24gPSAoX2MgPSAoX2IgPSAoX2EgPSB2YWx1ZSA9PSBudWxsID8gdm9pZCAwIDogdmFsdWUucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmNhcHRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYlswXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jWzBdO1xuICAgIGlmIChjYXB0aW9uKSB7XG4gICAgICBjb25zdCBpZCA9IHBhcnNlUGFnZUlkMihjYXB0aW9uLCB7IHV1aWQ6IHRydWUgfSk7XG4gICAgICBjb25zdCBpc1BhZ2UgPSBjYXB0aW9uLmNoYXJBdCgwKSA9PT0gXCIvXCIgJiYgaWQ7XG4gICAgICBpZiAoaXNQYWdlIHx8IGlzVmFsaWRVUkwoY2FwdGlvbikpIHtcbiAgICAgICAgaXNVUkwgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBjb25zdCBmaWd1cmUgPSAvKiBAX19QVVJFX18gKi8ganN4MTUoXG4gICAgXCJmaWd1cmVcIixcbiAgICB7XG4gICAgICBjbGFzc05hbWU6IGNzKFxuICAgICAgICBcIm5vdGlvbi1hc3NldC13cmFwcGVyXCIsXG4gICAgICAgIGBub3Rpb24tYXNzZXQtd3JhcHBlci0ke2Jsb2NrLnR5cGV9YCxcbiAgICAgICAgKChfZCA9IHZhbHVlLmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9kLmJsb2NrX2Z1bGxfd2lkdGgpICYmIFwibm90aW9uLWFzc2V0LXdyYXBwZXItZnVsbFwiLFxuICAgICAgICBibG9ja0lkXG4gICAgICApLFxuICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gxNShBc3NldCwgeyBibG9jazogdmFsdWUsIHpvb21hYmxlOiB6b29tICYmICFpc1VSTCwgY2hpbGRyZW46ICgoX2UgPSB2YWx1ZSA9PSBudWxsID8gdm9pZCAwIDogdmFsdWUucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9lLmNhcHRpb24pICYmICFpc1VSTCAmJiAvKiBAX19QVVJFX18gKi8ganN4MTUoXCJmaWdjYXB0aW9uXCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1hc3NldC1jYXB0aW9uXCIsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4MTUoVGV4dCwgeyB2YWx1ZTogdmFsdWUucHJvcGVydGllcy5jYXB0aW9uLCBibG9jayB9KSB9KSB9KVxuICAgIH1cbiAgKTtcbiAgaWYgKGlzVVJMKSB7XG4gICAgY29uc3QgY2FwdGlvbiA9IChfaCA9IChfZyA9IChfZiA9IHZhbHVlID09IG51bGwgPyB2b2lkIDAgOiB2YWx1ZS5wcm9wZXJ0aWVzKSA9PSBudWxsID8gdm9pZCAwIDogX2YuY2FwdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9nWzBdKSA9PSBudWxsID8gdm9pZCAwIDogX2hbMF07XG4gICAgY29uc3QgaWQgPSBwYXJzZVBhZ2VJZDIoY2FwdGlvbiwgeyB1dWlkOiB0cnVlIH0pO1xuICAgIGNvbnN0IGlzUGFnZSA9IChjYXB0aW9uID09IG51bGwgPyB2b2lkIDAgOiBjYXB0aW9uLmNoYXJBdCgwKSkgPT09IFwiL1wiICYmIGlkO1xuICAgIGNvbnN0IGNhcHRpb25Ib3N0bmFtZSA9IGV4dHJhY3RIb3N0bmFtZShjYXB0aW9uKTtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDE1KFxuICAgICAgY29tcG9uZW50cy5QYWdlTGluayxcbiAgICAgIHtcbiAgICAgICAgc3R5bGU6IHVybFN0eWxlLFxuICAgICAgICBocmVmOiBpc1BhZ2UgPyBtYXBQYWdlVXJsKGlkKSA6IGNhcHRpb24sXG4gICAgICAgIHRhcmdldDogY2FwdGlvbkhvc3RuYW1lICYmIGNhcHRpb25Ib3N0bmFtZSAhPT0gcm9vdERvbWFpbiAmJiAhKGNhcHRpb24gPT0gbnVsbCA/IHZvaWQgMCA6IGNhcHRpb24uc3RhcnRzV2l0aChcIi9cIikpID8gXCJibGFua19cIiA6IG51bGwsXG4gICAgICAgIGNoaWxkcmVuOiBmaWd1cmVcbiAgICAgIH1cbiAgICApO1xuICB9XG4gIHJldHVybiBmaWd1cmU7XG59XG5mdW5jdGlvbiBpc1ZhbGlkVVJMKHN0cikge1xuICBjb25zdCBwYXR0ZXJuID0gbmV3IFJlZ0V4cChcbiAgICBcIl4oaHR0cHM/OlxcXFwvXFxcXC8pPygoKFthLXpcXFxcZF0oW2EtelxcXFxkLV0qW2EtelxcXFxkXSkqKVxcXFwuKStbYS16XXsyLH18KChcXFxcZHsxLDN9XFxcXC4pezN9XFxcXGR7MSwzfSkpKFxcXFw6XFxcXGQrKT8oXFxcXC9bLWEtelxcXFxkJV8ufitdKikqKFxcXFw/WzsmYS16XFxcXGQlXy5+Kz0tXSopPyhcXFxcI1stYS16XFxcXGRfXSopPyRcIixcbiAgICBcImlcIlxuICApO1xuICByZXR1cm4gISFwYXR0ZXJuLnRlc3Qoc3RyKTtcbn1cbmZ1bmN0aW9uIGV4dHJhY3RIb3N0bmFtZSh1cmwpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBob3N0bmFtZSA9IG5ldyBVUkwodXJsKS5ob3N0bmFtZTtcbiAgICByZXR1cm4gaG9zdG5hbWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxufVxuXG4vLyBzcmMvaWNvbnMvY2hlY2sudHN4XG5pbXBvcnQgeyBqc3ggYXMganN4MTYgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIFN2Z0NoZWNrKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MTYoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gxNihcInBhdGhcIiwgeyBkOiBcIk01LjUgMTJMMTQgMy41IDEyLjUgMmwtNyA3LTQtNC4wMDNMMCA2LjQ5OXpcIiB9KSB9KTtcbn1cbnZhciBjaGVja19kZWZhdWx0ID0gU3ZnQ2hlY2s7XG5cbi8vIHNyYy9jb21wb25lbnRzL2NoZWNrYm94LnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDE3IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBDaGVja2JveCh7XG4gIGlzQ2hlY2tlZFxufSkge1xuICBsZXQgY29udGVudCA9IG51bGw7XG4gIGlmIChpc0NoZWNrZWQpIHtcbiAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIGpzeDE3KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1wcm9wZXJ0eS1jaGVja2JveC1jaGVja2VkXCIsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4MTcoY2hlY2tfZGVmYXVsdCwge30pIH0pO1xuICB9IGVsc2Uge1xuICAgIGNvbnRlbnQgPSAvKiBAX19QVVJFX18gKi8ganN4MTcoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLXByb3BlcnR5LWNoZWNrYm94LXVuY2hlY2tlZFwiIH0pO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MTcoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1wcm9wZXJ0eSBub3Rpb24tcHJvcGVydHktY2hlY2tib3hcIiwgY2hpbGRyZW46IGNvbnRlbnQgfSk7XG59XG5cbi8vIHNyYy9uZXh0LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QxMSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBpc0VxdWFsIGZyb20gXCJyZWFjdC1mYXN0LWNvbXBhcmVcIjtcbmltcG9ydCB7IGpzeCBhcyBqc3gxOCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xudmFyIHdyYXBOZXh0SW1hZ2UgPSAoTmV4dEltYWdlKSA9PiB7XG4gIHJldHVybiBSZWFjdDExLm1lbW8oZnVuY3Rpb24gUmVhY3ROb3Rpb25YTmV4dEltYWdlKHtcbiAgICBzcmMsXG4gICAgYWx0LFxuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBjbGFzc05hbWUsXG4gICAgZmlsbCxcbiAgICAuLi5yZXN0XG4gIH0pIHtcbiAgICBpZiAoZmlsbCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgZmlsbCA9ICEod2lkdGggJiYgaGVpZ2h0KTtcbiAgICB9XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gxOChcbiAgICAgIE5leHRJbWFnZSxcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICBzcmMsXG4gICAgICAgIGFsdCxcbiAgICAgICAgd2lkdGg6ICFmaWxsICYmIHdpZHRoICYmIGhlaWdodCA/IHdpZHRoIDogdm9pZCAwLFxuICAgICAgICBoZWlnaHQ6ICFmaWxsICYmIHdpZHRoICYmIGhlaWdodCA/IGhlaWdodCA6IHZvaWQgMCxcbiAgICAgICAgZmlsbCxcbiAgICAgICAgLi4ucmVzdFxuICAgICAgfVxuICAgICk7XG4gIH0sIGlzRXF1YWwpO1xufTtcbnZhciB3cmFwTmV4dExlZ2FjeUltYWdlID0gKE5leHRMZWdhY3lJbWFnZSkgPT4ge1xuICByZXR1cm4gUmVhY3QxMS5tZW1vKGZ1bmN0aW9uIFJlYWN0Tm90aW9uWE5leHRMZWdhY3lJbWFnZSh7XG4gICAgc3JjLFxuICAgIGFsdCxcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgY2xhc3NOYW1lLFxuICAgIHN0eWxlLFxuICAgIGxheW91dCxcbiAgICAuLi5yZXN0XG4gIH0pIHtcbiAgICBpZiAoIWxheW91dCkge1xuICAgICAgbGF5b3V0ID0gd2lkdGggJiYgaGVpZ2h0ID8gXCJpbnRyaW5zaWNcIiA6IFwiZmlsbFwiO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDE4KFxuICAgICAgTmV4dExlZ2FjeUltYWdlLFxuICAgICAge1xuICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgIHNyYyxcbiAgICAgICAgYWx0LFxuICAgICAgICB3aWR0aDogbGF5b3V0ID09PSBcImludHJpbnNpY1wiICYmIHdpZHRoLFxuICAgICAgICBoZWlnaHQ6IGxheW91dCA9PT0gXCJpbnRyaW5zaWNcIiAmJiBoZWlnaHQsXG4gICAgICAgIG9iamVjdEZpdDogc3R5bGUgPT0gbnVsbCA/IHZvaWQgMCA6IHN0eWxlLm9iamVjdEZpdCxcbiAgICAgICAgb2JqZWN0UG9zaXRpb246IHN0eWxlID09IG51bGwgPyB2b2lkIDAgOiBzdHlsZS5vYmplY3RQb3NpdGlvbixcbiAgICAgICAgbGF5b3V0LFxuICAgICAgICAuLi5yZXN0XG4gICAgICB9XG4gICAgKTtcbiAgfSwgaXNFcXVhbCk7XG59O1xuZnVuY3Rpb24gd3JhcE5leHRMaW5rKE5leHRMaW5rKSB7XG4gIHJldHVybiAoe1xuICAgIGhyZWYsXG4gICAgYXMsXG4gICAgcGFzc0hyZWYsXG4gICAgcHJlZmV0Y2gsXG4gICAgcmVwbGFjZSxcbiAgICBzY3JvbGwsXG4gICAgc2hhbGxvdyxcbiAgICBsb2NhbGUsXG4gICAgLi4ubGlua1Byb3BzXG4gIH0pID0+IHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDE4KFxuICAgICAgTmV4dExpbmssXG4gICAgICB7XG4gICAgICAgIGhyZWYsXG4gICAgICAgIGFzLFxuICAgICAgICBwYXNzSHJlZixcbiAgICAgICAgcHJlZmV0Y2gsXG4gICAgICAgIHJlcGxhY2UsXG4gICAgICAgIHNjcm9sbCxcbiAgICAgICAgc2hhbGxvdyxcbiAgICAgICAgbG9jYWxlLFxuICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDE4KFwiYVwiLCB7IC4uLmxpbmtQcm9wcyB9KVxuICAgICAgfVxuICAgICk7XG4gIH07XG59XG5cbi8vIHNyYy9jb250ZXh0LnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDE5IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBEZWZhdWx0TGluayhwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDE5KFwiYVwiLCB7IHRhcmdldDogXCJfYmxhbmtcIiwgcmVsOiBcIm5vb3BlbmVyIG5vcmVmZXJyZXJcIiwgLi4ucHJvcHMgfSk7XG59XG52YXIgRGVmYXVsdExpbmtNZW1vID0gUmVhY3QxMi5tZW1vKERlZmF1bHRMaW5rKTtcbmZ1bmN0aW9uIERlZmF1bHRQYWdlTGluayhwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDE5KFwiYVwiLCB7IC4uLnByb3BzIH0pO1xufVxudmFyIERlZmF1bHRQYWdlTGlua01lbW8gPSBSZWFjdDEyLm1lbW8oRGVmYXVsdFBhZ2VMaW5rKTtcbmZ1bmN0aW9uIERlZmF1bHRFbWJlZChwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDE5KEFzc2V0V3JhcHBlciwgeyAuLi5wcm9wcyB9KTtcbn1cbnZhciBEZWZhdWx0SGVhZGVyID0gSGVhZGVyO1xuZnVuY3Rpb24gZHVtbXlMaW5rKHsgaHJlZiwgcmVsLCB0YXJnZXQsIHRpdGxlLCAuLi5yZXN0IH0pIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gxOShcInNwYW5cIiwgeyAuLi5yZXN0IH0pO1xufVxudmFyIGR1bW15Q29tcG9uZW50ID0gKG5hbWUpID0+ICgpID0+IHtcbiAgY29uc29sZS53YXJuKFxuICAgIGBXYXJuaW5nOiB1c2luZyBlbXB0eSBjb21wb25lbnQgXCIke25hbWV9XCIgKHlvdSBzaG91bGQgb3ZlcnJpZGUgdGhpcyBpbiBOb3Rpb25SZW5kZXJlci5jb21wb25lbnRzKWBcbiAgKTtcbiAgcmV0dXJuIG51bGw7XG59O1xudmFyIGR1bW15T3ZlcnJpZGVGbiA9IChfLCBkZWZhdWx0VmFsdWVGbikgPT4gZGVmYXVsdFZhbHVlRm4oKTtcbnZhciBkZWZhdWx0Q29tcG9uZW50cyA9IHtcbiAgSW1hZ2U6IG51bGwsXG4gIC8vIGRpc2FibGUgY3VzdG9tIGltYWdlcyBieSBkZWZhdWx0XG4gIExpbms6IERlZmF1bHRMaW5rTWVtbyxcbiAgUGFnZUxpbms6IERlZmF1bHRQYWdlTGlua01lbW8sXG4gIENoZWNrYm94LFxuICBDYWxsb3V0OiB2b2lkIDAsXG4gIC8vIHVzZSB0aGUgYnVpbHQtaW4gY2FsbG91dCByZW5kZXJpbmcgYnkgZGVmYXVsdFxuICBDb2RlOiBkdW1teUNvbXBvbmVudChcIkNvZGVcIiksXG4gIEVxdWF0aW9uOiBkdW1teUNvbXBvbmVudChcIkVxdWF0aW9uXCIpLFxuICBDb2xsZWN0aW9uOiBkdW1teUNvbXBvbmVudChcIkNvbGxlY3Rpb25cIiksXG4gIFByb3BlcnR5OiB2b2lkIDAsXG4gIC8vIHVzZSB0aGUgYnVpbHQtaW4gcHJvcGVydHkgcmVuZGVyaW5nIGJ5IGRlZmF1bHRcbiAgcHJvcGVydHlUZXh0VmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlTZWxlY3RWYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBwcm9wZXJ0eVJlbGF0aW9uVmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlGb3JtdWxhVmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlUaXRsZVZhbHVlOiBkdW1teU92ZXJyaWRlRm4sXG4gIHByb3BlcnR5UGVyc29uVmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlGaWxlVmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlDaGVja2JveFZhbHVlOiBkdW1teU92ZXJyaWRlRm4sXG4gIHByb3BlcnR5VXJsVmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlFbWFpbFZhbHVlOiBkdW1teU92ZXJyaWRlRm4sXG4gIHByb3BlcnR5UGhvbmVOdW1iZXJWYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBwcm9wZXJ0eU51bWJlclZhbHVlOiBkdW1teU92ZXJyaWRlRm4sXG4gIHByb3BlcnR5TGFzdEVkaXRlZFRpbWVWYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBwcm9wZXJ0eUNyZWF0ZWRUaW1lVmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlEYXRlVmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlBdXRvSW5jcmVtZW50SWRWYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBQZGY6IGR1bW15Q29tcG9uZW50KFwiUGRmXCIpLFxuICBUd2VldDogZHVtbXlDb21wb25lbnQoXCJUd2VldFwiKSxcbiAgTW9kYWw6IGR1bW15Q29tcG9uZW50KFwiTW9kYWxcIiksXG4gIEhlYWRlcjogRGVmYXVsdEhlYWRlcixcbiAgRW1iZWQ6IERlZmF1bHRFbWJlZFxufTtcbnZhciBkZWZhdWx0Tm90aW9uQ29udGV4dCA9IHtcbiAgcmVjb3JkTWFwOiB7XG4gICAgYmxvY2s6IHt9LFxuICAgIGNvbGxlY3Rpb246IHt9LFxuICAgIGNvbGxlY3Rpb25fdmlldzoge30sXG4gICAgY29sbGVjdGlvbl9xdWVyeToge30sXG4gICAgbm90aW9uX3VzZXI6IHt9LFxuICAgIHNpZ25lZF91cmxzOiB7fVxuICB9LFxuICBjb21wb25lbnRzOiBkZWZhdWx0Q29tcG9uZW50cyxcbiAgbWFwUGFnZVVybDogZGVmYXVsdE1hcFBhZ2VVcmwoKSxcbiAgbWFwSW1hZ2VVcmw6IGRlZmF1bHRNYXBJbWFnZVVybCxcbiAgc2VhcmNoTm90aW9uOiB2b2lkIDAsXG4gIGlzU2hvd2luZ1NlYXJjaDogZmFsc2UsXG4gIG9uSGlkZVNlYXJjaDogdm9pZCAwLFxuICBmdWxsUGFnZTogZmFsc2UsXG4gIGRhcmtNb2RlOiBmYWxzZSxcbiAgcHJldmlld0ltYWdlczogZmFsc2UsXG4gIGZvcmNlQ3VzdG9tSW1hZ2VzOiBmYWxzZSxcbiAgc2hvd0NvbGxlY3Rpb25WaWV3RHJvcGRvd246IHRydWUsXG4gIGxpbmtUYWJsZVRpdGxlUHJvcGVydGllczogdHJ1ZSxcbiAgaXNMaW5rQ29sbGVjdGlvblRvVXJsUHJvcGVydHk6IGZhbHNlLFxuICBzaG93VGFibGVPZkNvbnRlbnRzOiBmYWxzZSxcbiAgbWluVGFibGVPZkNvbnRlbnRzSXRlbXM6IDMsXG4gIGRlZmF1bHRQYWdlSWNvbjogbnVsbCxcbiAgZGVmYXVsdFBhZ2VDb3ZlcjogbnVsbCxcbiAgZGVmYXVsdFBhZ2VDb3ZlclBvc2l0aW9uOiAwLjUsXG4gIHpvb206IG51bGxcbn07XG52YXIgY3R4ID0gUmVhY3QxMi5jcmVhdGVDb250ZXh0KGRlZmF1bHROb3Rpb25Db250ZXh0KTtcbmZ1bmN0aW9uIE5vdGlvbkNvbnRleHRQcm92aWRlcih7XG4gIGNvbXBvbmVudHM6IHRoZW1lQ29tcG9uZW50cyA9IHt9LFxuICBjaGlsZHJlbixcbiAgbWFwUGFnZVVybCxcbiAgbWFwSW1hZ2VVcmwsXG4gIHJvb3RQYWdlSWQsXG4gIC4uLnJlc3Rcbn0pIHtcbiAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMocmVzdCkpIHtcbiAgICBpZiAocmVzdFtrZXldID09PSB2b2lkIDApIHtcbiAgICAgIGRlbGV0ZSByZXN0W2tleV07XG4gICAgfVxuICB9XG4gIGNvbnN0IHdyYXBwZWRUaGVtZUNvbXBvbmVudHMgPSBSZWFjdDEyLnVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIC4uLnRoZW1lQ29tcG9uZW50c1xuICAgIH0pLFxuICAgIFt0aGVtZUNvbXBvbmVudHNdXG4gICk7XG4gIGlmICh3cmFwcGVkVGhlbWVDb21wb25lbnRzLm5leHRJbWFnZSAmJiB3cmFwcGVkVGhlbWVDb21wb25lbnRzLm5leHRMZWdhY3lJbWFnZSkge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIFwiWW91IHNob3VsZCBub3QgcGFzcyBib3RoIG5leHRJbWFnZSBhbmQgbmV4dExlZ2FjeUltYWdlLiBPbmx5IG5leHRJbWFnZSBjb21wb25lbnQgd2lsbCBiZSB1c2VkLlwiXG4gICAgKTtcbiAgICB3cmFwcGVkVGhlbWVDb21wb25lbnRzLkltYWdlID0gd3JhcE5leHRJbWFnZSh0aGVtZUNvbXBvbmVudHMubmV4dEltYWdlKTtcbiAgfSBlbHNlIGlmICh3cmFwcGVkVGhlbWVDb21wb25lbnRzLm5leHRJbWFnZSkge1xuICAgIHdyYXBwZWRUaGVtZUNvbXBvbmVudHMuSW1hZ2UgPSB3cmFwTmV4dEltYWdlKHRoZW1lQ29tcG9uZW50cy5uZXh0SW1hZ2UpO1xuICB9IGVsc2UgaWYgKHdyYXBwZWRUaGVtZUNvbXBvbmVudHMubmV4dExlZ2FjeUltYWdlKSB7XG4gICAgd3JhcHBlZFRoZW1lQ29tcG9uZW50cy5JbWFnZSA9IHdyYXBOZXh0TGVnYWN5SW1hZ2UoXG4gICAgICB0aGVtZUNvbXBvbmVudHMubmV4dExlZ2FjeUltYWdlXG4gICAgKTtcbiAgfVxuICBpZiAod3JhcHBlZFRoZW1lQ29tcG9uZW50cy5uZXh0TGluaykge1xuICAgIHdyYXBwZWRUaGVtZUNvbXBvbmVudHMubmV4dExpbmsgPSB3cmFwTmV4dExpbmsodGhlbWVDb21wb25lbnRzLm5leHRMaW5rKTtcbiAgfVxuICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyh3cmFwcGVkVGhlbWVDb21wb25lbnRzKSkge1xuICAgIGlmICghd3JhcHBlZFRoZW1lQ29tcG9uZW50c1trZXldKSB7XG4gICAgICBkZWxldGUgd3JhcHBlZFRoZW1lQ29tcG9uZW50c1trZXldO1xuICAgIH1cbiAgfVxuICBjb25zdCB2YWx1ZSA9IFJlYWN0MTIudXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgLi4uZGVmYXVsdE5vdGlvbkNvbnRleHQsXG4gICAgICAuLi5yZXN0LFxuICAgICAgcm9vdFBhZ2VJZCxcbiAgICAgIG1hcFBhZ2VVcmw6IG1hcFBhZ2VVcmwgIT0gbnVsbCA/IG1hcFBhZ2VVcmwgOiBkZWZhdWx0TWFwUGFnZVVybChyb290UGFnZUlkKSxcbiAgICAgIG1hcEltYWdlVXJsOiBtYXBJbWFnZVVybCAhPSBudWxsID8gbWFwSW1hZ2VVcmwgOiBkZWZhdWx0TWFwSW1hZ2VVcmwsXG4gICAgICBjb21wb25lbnRzOiB7IC4uLmRlZmF1bHRDb21wb25lbnRzLCAuLi53cmFwcGVkVGhlbWVDb21wb25lbnRzIH1cbiAgICB9KSxcbiAgICBbbWFwSW1hZ2VVcmwsIG1hcFBhZ2VVcmwsIHdyYXBwZWRUaGVtZUNvbXBvbmVudHMsIHJvb3RQYWdlSWQsIHJlc3RdXG4gICk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MTkoY3R4LlByb3ZpZGVyLCB7IHZhbHVlLCBjaGlsZHJlbiB9KTtcbn1cbnZhciBOb3Rpb25Db250ZXh0Q29uc3VtZXIgPSBjdHguQ29uc3VtZXI7XG52YXIgdXNlTm90aW9uQ29udGV4dCA9ICgpID0+IHtcbiAgcmV0dXJuIFJlYWN0MTIudXNlQ29udGV4dChjdHgpO1xufTtcblxuLy8gc3JjL2ljb25zL2RlZmF1bHQtcGFnZS1pY29uLnRzeFxuaW1wb3J0IFwicmVhY3RcIjtcbmltcG9ydCB7IGpzeCBhcyBqc3gyMCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gRGVmYXVsdFBhZ2VJY29uKHByb3BzKSB7XG4gIGNvbnN0IHsgY2xhc3NOYW1lLCAuLi5yZXN0IH0gPSBwcm9wcztcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyMChcInN2Z1wiLCB7IGNsYXNzTmFtZSwgLi4ucmVzdCwgdmlld0JveDogXCIwIDAgMzAgMzBcIiwgd2lkdGg6IFwiMTZcIiwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gyMChcInBhdGhcIiwgeyBkOiBcIk0xNiwxSDR2MjhoMjJWMTFMMTYsMXogTTE2LDMuODI4TDIzLjE3MiwxMUgxNlYzLjgyOHogTTI0LDI3SDZWM2g4djEwaDEwVjI3eiBNOCwxN2gxNHYtMkg4VjE3eiBNOCwyMWgxNHYtMkg4VjIxeiBNOCwyNWgxNHYtMkg4VjI1elwiIH0pIH0pO1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9wYWdlLWljb24udHN4XG5pbXBvcnQgeyBqc3ggYXMganN4MjEgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBpc0ljb25CbG9jayA9ICh2YWx1ZSkgPT4ge1xuICByZXR1cm4gdmFsdWUudHlwZSA9PT0gXCJwYWdlXCIgfHwgdmFsdWUudHlwZSA9PT0gXCJjYWxsb3V0XCIgfHwgdmFsdWUudHlwZSA9PT0gXCJjb2xsZWN0aW9uX3ZpZXdcIiB8fCB2YWx1ZS50eXBlID09PSBcImNvbGxlY3Rpb25fdmlld19wYWdlXCI7XG59O1xuZnVuY3Rpb24gUGFnZUljb25JbXBsKHtcbiAgYmxvY2ssXG4gIGNsYXNzTmFtZSxcbiAgaW5saW5lID0gdHJ1ZSxcbiAgaGlkZURlZmF1bHRJY29uID0gZmFsc2UsXG4gIGRlZmF1bHRJY29uXG59KSB7XG4gIHZhciBfYTtcbiAgY29uc3QgeyBtYXBJbWFnZVVybCwgcmVjb3JkTWFwLCBkYXJrTW9kZSB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICBsZXQgaXNJbWFnZSA9IGZhbHNlO1xuICBsZXQgY29udGVudCA9IG51bGw7XG4gIGlmIChpc0ljb25CbG9jayhibG9jaykpIHtcbiAgICBjb25zdCBpY29uID0gKChfYSA9IGdldEJsb2NrSWNvbihibG9jaywgcmVjb3JkTWFwKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnRyaW0oKSkgfHwgZGVmYXVsdEljb247XG4gICAgY29uc3QgdGl0bGUgPSBnZXRCbG9ja1RpdGxlMyhibG9jaywgcmVjb3JkTWFwKTtcbiAgICBpZiAoaWNvbiAmJiBpc1VybChpY29uKSkge1xuICAgICAgY29uc3QgdXJsID0gbWFwSW1hZ2VVcmwoaWNvbiwgYmxvY2spO1xuICAgICAgaXNJbWFnZSA9IHRydWU7XG4gICAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIGpzeDIxKFxuICAgICAgICBMYXp5SW1hZ2UsXG4gICAgICAgIHtcbiAgICAgICAgICBzcmM6IHVybCxcbiAgICAgICAgICBhbHQ6IHRpdGxlIHx8IFwicGFnZSBpY29uXCIsXG4gICAgICAgICAgY2xhc3NOYW1lOiBjcyhjbGFzc05hbWUsIFwibm90aW9uLXBhZ2UtaWNvblwiKVxuICAgICAgICB9XG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoaWNvbiAmJiBpY29uLnN0YXJ0c1dpdGgoXCIvaWNvbnMvXCIpKSB7XG4gICAgICBjb25zdCB1cmwgPSBcImh0dHBzOi8vd3d3Lm5vdGlvbi5zb1wiICsgaWNvbiArIFwiP21vZGU9XCIgKyAoZGFya01vZGUgPyBcImRhcmtcIiA6IFwibGlnaHRcIik7XG4gICAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIGpzeDIxKFxuICAgICAgICBMYXp5SW1hZ2UsXG4gICAgICAgIHtcbiAgICAgICAgICBzcmM6IHVybCxcbiAgICAgICAgICBhbHQ6IHRpdGxlIHx8IFwicGFnZSBpY29uXCIsXG4gICAgICAgICAgY2xhc3NOYW1lOiBjcyhjbGFzc05hbWUsIFwibm90aW9uLXBhZ2UtaWNvblwiKVxuICAgICAgICB9XG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoIWljb24pIHtcbiAgICAgIGlmICghaGlkZURlZmF1bHRJY29uKSB7XG4gICAgICAgIGlzSW1hZ2UgPSB0cnVlO1xuICAgICAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIGpzeDIxKFxuICAgICAgICAgIERlZmF1bHRQYWdlSWNvbixcbiAgICAgICAgICB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IGNzKGNsYXNzTmFtZSwgXCJub3Rpb24tcGFnZS1pY29uXCIpLFxuICAgICAgICAgICAgYWx0OiB0aXRsZSB8fCBcInBhZ2UgaWNvblwiXG4gICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpc0ltYWdlID0gZmFsc2U7XG4gICAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIGpzeDIxKFxuICAgICAgICBcInNwYW5cIixcbiAgICAgICAge1xuICAgICAgICAgIGNsYXNzTmFtZTogY3MoY2xhc3NOYW1lLCBcIm5vdGlvbi1wYWdlLWljb25cIiksXG4gICAgICAgICAgcm9sZTogXCJpbWdcIixcbiAgICAgICAgICBcImFyaWEtbGFiZWxcIjogaWNvbixcbiAgICAgICAgICBjaGlsZHJlbjogaWNvblxuICAgICAgICB9XG4gICAgICApO1xuICAgIH1cbiAgfVxuICBpZiAoIWNvbnRlbnQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIxKFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgY2xhc3NOYW1lOiBjcyhcbiAgICAgICAgaW5saW5lID8gXCJub3Rpb24tcGFnZS1pY29uLWlubGluZVwiIDogXCJub3Rpb24tcGFnZS1pY29uLWhlcm9cIixcbiAgICAgICAgaXNJbWFnZSA/IFwibm90aW9uLXBhZ2UtaWNvbi1pbWFnZVwiIDogXCJub3Rpb24tcGFnZS1pY29uLXNwYW5cIlxuICAgICAgKSxcbiAgICAgIGNoaWxkcmVuOiBjb250ZW50XG4gICAgfVxuICApO1xufVxudmFyIFBhZ2VJY29uID0gUmVhY3QxNC5tZW1vKFBhZ2VJY29uSW1wbCk7XG5cbi8vIHNyYy9pY29ucy9jb2xsZWN0aW9uLXZpZXctaWNvbi50c3hcbmltcG9ydCBcIm5vdGlvbi10eXBlc1wiO1xuXG4vLyBzcmMvaWNvbnMvY29sbGVjdGlvbi12aWV3LWJvYXJkLnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDIyIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBTdmdDb2xsZWN0aW9uVmlld0JvYXJkKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MjIoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gyMihcInBhdGhcIiwgeyBkOiBcIk0xMiAxLjVIMmEuNS41IDAgMDAtLjUuNXYxMGEuNS41IDAgMDAuNS41aDEwYS41LjUgMCAwMC41LS41VjJhLjUuNSAwIDAwLS41LS41ek0yIDBoMTBhMiAyIDAgMDEyIDJ2MTBhMiAyIDAgMDEtMiAySDJhMiAyIDAgMDEtMi0yVjJhMiAyIDAgMDEyLTJ6bTEgM2gydjZIM1Yzem0zIDBoMnY4SDZWM3ptMyAwaDJ2NEg5VjN6XCIgfSkgfSk7XG59XG52YXIgY29sbGVjdGlvbl92aWV3X2JvYXJkX2RlZmF1bHQgPSBTdmdDb2xsZWN0aW9uVmlld0JvYXJkO1xuXG4vLyBzcmMvaWNvbnMvY29sbGVjdGlvbi12aWV3LWNhbGVuZGFyLnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDIzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBTdmdDb2xsZWN0aW9uVmlld0NhbGVuZGFyKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MjMoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gyMyhcInBhdGhcIiwgeyBkOiBcIk0yLjU2NCA0LjAwNGMtLjU4NiAwLS43MS4wMjQtLjgzMy4wOWEuMzE5LjMxOSAwIDAwLS4xNDEuMTRjLS4wNjYuMTI0LS4wOS4yNDctLjA5LjgzNHY2LjM2OGMwIC41ODYuMDI0LjcxLjA5LjgzM2EuMzE5LjMxOSAwIDAwLjE0LjE0MWMuMTI0LjA2Ni4yNDguMDkuODM0LjA5aDguODcyYy41ODYgMCAuNzEtLjAyNC44MzMtLjA5YS4zMTkuMzE5IDAgMDAuMTQxLS4xNGMuMDY2LS4xMjQuMDktLjI0OC4wOS0uODM0VjUuMDY4YzAtLjU4Ny0uMDI0LS43MS0uMDktLjgzNGEuMzE5LjMxOSAwIDAwLS4xNC0uMTRjLS4xMjQtLjA2Ni0uMjQ4LS4wOS0uODM0LS4wOUgyLjU2NHptMC00LjAwNGg4Ljg3MmMuODkyIDAgMS4yMTUuMDkzIDEuNTQuMjY3LjMyNy4xNzQuNTgzLjQzLjc1Ny43NTYuMTc0LjMyNi4yNjcuNjUuMjY3IDEuNTR2OC44NzNjMCAuODkyLS4wOTMgMS4yMTUtLjI2NyAxLjU0LS4xNzQuMzI3LS40My41ODMtLjc1Ni43NTctLjMyNi4xNzQtLjY1LjI2Ny0xLjU0LjI2N0gyLjU2M2MtLjg5MiAwLTEuMjE1LS4wOTMtMS41NC0uMjY3YTEuODE3IDEuODE3IDAgMDEtLjc1Ny0uNzU2Qy4wOTMgMTIuNjUgMCAxMi4zMjcgMCAxMS40MzdWMi41NjNjMC0uODkyLjA5My0xLjIxNS4yNjctMS41NC4xNzQtLjMyNy40My0uNTgzLjc1Ni0uNzU3QzEuMzUuMDkzIDEuNjczIDAgMi41NjMgMHptNC4wNDQgNy44OGMuMTc5LjExLjMxOC4yNTYuNDE4LjQzNi4xLjE4LjE0OC4zOTQuMTQ4LjY0IDAgLjMwNC0uMDguNTk3LS4yMzguODc2LS4xNi4yOC0uMzkyLjQ5OC0uNjkyLjY1LS4yOTkuMTUtLjY4NS4yMjQtMS4xNi4yMjQtLjQ2IDAtLjgyNy0uMDU1LTEuMS0uMTY2YTEuNjg3IDEuNjg3IDAgMDEtLjY4LS40OTIgMi4yMjcgMi4yMjcgMCAwMS0uNDA0LS44MDJsLjA4My0uMTI3IDEuMzctLjE4Mi4xMTIuMDhjLjA1LjI1OC4xMjYuNDMxLjIyMS41MmEuNTA3LjUwNyAwIDAwLjM2NC4xMzMuNDk1LjQ5NSAwIDAwLjM4Ni0uMTY5Yy4xMDUtLjExNS4xNTgtLjI3LjE1OC0uNDcyIDAtLjIwNS0uMDUxLS4zNTgtLjE1LS40NjNhLjUyNy41MjcgMCAwMC0uNDA3LS4xNTcgMS42NSAxLjY1IDAgMDAtLjQxNy4wNzdsLS4xMjctLjEwNC4wNy0uOTguMTE1LS4wOTFjLjA3Mi4wMS4xMjcuMDE1LjE2NC4wMTUuMTU0IDAgLjI4LS4wNDcuMzgtLjE0NC4xLS4wOTYuMTUtLjIwNS4xNS0uMzM1YS4zODguMzg4IDAgMDAtLjEwNi0uMjljLS4wNy0uMDctLjE2OC0uMTA1LS4zLS4xMDVhLjQ0NC40NDQgMCAwMC0uMzI0LjExOGMtLjA4My4wOC0uMTQzLjIzMi0uMTc2LjQ1N2wtLjExNy4wODQtMS4yOTctLjIzMy0uMDc5LS4xMjNjLjExNC0uNDM1LjMzNC0uNzcyLjY2LTEuMDA2LjMyNi0uMjM0Ljc4LS4zNDkgMS4zNi0uMzQ5LjY2NiAwIDEuMTUzLjEyNiAxLjQ2Mi4zODQuMzEuMjU5LjQ2Ny41ODkuNDY3Ljk4MiAwIC4yMzMtLjA2NC40NDYtLjE5Mi42MzZhMS40MyAxLjQzIDAgMDEtLjM3LjM2NWMuMS4wMzQuMTgyLjA3Mi4yNDguMTEzem0xLjc0Ny0uMTQ1YTUuMTg2IDUuMTg2IDAgMDEtLjgwNi4zMWwtLjEyOS0uMDk3VjYuODI0bC4wNy0uMDk2Yy40NTUtLjE0Ny44MDctLjMyMiAxLjA1NS0uNTI0LjI0Ni0uMjAyLjQzOS0uNDUuNTc5LS43NDdsLjA5LS4wNTdoMS4xMzVsLjEuMXY1LjAyMWwtLjEuMUg4Ljk2MWwtLjEtLjFWNy40MjhhNC4wNTMgNC4wNTMgMCAwMS0uNTA2LjMwN3pcIiB9KSB9KTtcbn1cbnZhciBjb2xsZWN0aW9uX3ZpZXdfY2FsZW5kYXJfZGVmYXVsdCA9IFN2Z0NvbGxlY3Rpb25WaWV3Q2FsZW5kYXI7XG5cbi8vIHNyYy9pY29ucy9jb2xsZWN0aW9uLXZpZXctZ2FsbGVyeS50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3gyNCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gU3ZnQ29sbGVjdGlvblZpZXdHYWxsZXJ5KHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MjQoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gyNChcInBhdGhcIiwgeyBkOiBcIk0xMiAxLjVIMmEuNS41IDAgMDAtLjUuNXYxMGEuNS41IDAgMDAuNS41aDEwYS41LjUgMCAwMC41LS41VjJhLjUuNSAwIDAwLS41LS41ek0yIDBoMTBhMiAyIDAgMDEyIDJ2MTBhMiAyIDAgMDEtMiAySDJhMiAyIDAgMDEtMi0yVjJhMiAyIDAgMDEyLTJ6bTEgM2gzLjV2My41SDNWM3ptNC41IDBIMTF2My41SDcuNVYzek0zIDcuNWgzLjVWMTFIM1Y3LjV6bTQuNSAwSDExVjExSDcuNVY3LjV6XCIgfSkgfSk7XG59XG52YXIgY29sbGVjdGlvbl92aWV3X2dhbGxlcnlfZGVmYXVsdCA9IFN2Z0NvbGxlY3Rpb25WaWV3R2FsbGVyeTtcblxuLy8gc3JjL2ljb25zL2NvbGxlY3Rpb24tdmlldy1saXN0LnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDI1IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBTdmdDb2xsZWN0aW9uVmlld0xpc3QocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyNShcInN2Z1wiLCB7IHZpZXdCb3g6IFwiMCAwIDE0IDE0XCIsIC4uLnByb3BzLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDI1KFwicGF0aFwiLCB7IGQ6IFwiTTEyIDEuNUgyYS41LjUgMCAwMC0uNS41djEwYS41LjUgMCAwMC41LjVoMTBhLjUuNSAwIDAwLjUtLjVWMmEuNS41IDAgMDAtLjUtLjV6TTIgMGgxMGEyIDIgMCAwMTIgMnYxMGEyIDIgMCAwMS0yIDJIMmEyIDIgMCAwMS0yLTJWMmEyIDIgMCAwMTItMnptMSAzaDZ2MS41SDNWM3ptMCAyLjVoOFY3SDNWNS41ek0zIDhoNHYxLjVIM1Y4elwiIH0pIH0pO1xufVxudmFyIGNvbGxlY3Rpb25fdmlld19saXN0X2RlZmF1bHQgPSBTdmdDb2xsZWN0aW9uVmlld0xpc3Q7XG5cbi8vIHNyYy9pY29ucy9jb2xsZWN0aW9uLXZpZXctdGFibGUudHN4XG5pbXBvcnQgeyBqc3ggYXMganN4MjYgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIFN2Z0NvbGxlY3Rpb25WaWV3VGFibGUocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyNihcInN2Z1wiLCB7IHZpZXdCb3g6IFwiMCAwIDE0IDE0XCIsIC4uLnByb3BzLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDI2KFwicGF0aFwiLCB7IGQ6IFwiTTIgMGgxMGEyIDIgMCAwMTIgMnYxMGEyIDIgMCAwMS0yIDJIMmEyIDIgMCAwMS0yLTJWMmEyIDIgMCAwMTItMnptMy43NSA1LjY3djIuNjZoNi43NVY1LjY3SDUuNzV6bTAgNC4xN3YyLjY2aDUuNzVhMSAxIDAgMDAxLTFWOS44NEg1Ljc1ek0xLjUgNS42N3YyLjY2aDIuNzVWNS42N0gxLjV6bTAgNC4xN3YxLjY2YTEgMSAwIDAwMSAxaDEuNzVWOS44NEgxLjV6bTEtOC4zNGExIDEgMCAwMC0xIDF2MS42NmgyLjc1VjEuNUgyLjV6bTMuMjUgMHYyLjY2aDYuNzVWMi41YTEgMSAwIDAwLTEtMUg1Ljc1elwiIH0pIH0pO1xufVxudmFyIGNvbGxlY3Rpb25fdmlld190YWJsZV9kZWZhdWx0ID0gU3ZnQ29sbGVjdGlvblZpZXdUYWJsZTtcblxuLy8gc3JjL2ljb25zL2NvbGxlY3Rpb24tdmlldy1pY29uLnRzeFxudmFyIGljb25NYXAgPSB7XG4gIHRhYmxlOiBjb2xsZWN0aW9uX3ZpZXdfdGFibGVfZGVmYXVsdCxcbiAgYm9hcmQ6IGNvbGxlY3Rpb25fdmlld19ib2FyZF9kZWZhdWx0LFxuICBnYWxsZXJ5OiBjb2xsZWN0aW9uX3ZpZXdfZ2FsbGVyeV9kZWZhdWx0LFxuICBsaXN0OiBjb2xsZWN0aW9uX3ZpZXdfbGlzdF9kZWZhdWx0LFxuICBjYWxlbmRhcjogY29sbGVjdGlvbl92aWV3X2NhbGVuZGFyX2RlZmF1bHRcbn07XG5mdW5jdGlvbiBDb2xsZWN0aW9uVmlld0ljb24oeyB0eXBlLCAuLi5yZXN0IH0pIHtcbiAgY29uc3QgaWNvbiA9IGljb25NYXBbdHlwZV07XG4gIGlmICghaWNvbikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBpY29uKHJlc3QpO1xufVxuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi1yb3cudHN4XG5pbXBvcnQgXCJub3Rpb24tdHlwZXNcIjtcblxuLy8gc3JjL3RoaXJkLXBhcnR5L2NvbGxlY3Rpb24tY29sdW1uLXRpdGxlLnRzeFxuaW1wb3J0IFwibm90aW9uLXR5cGVzXCI7XG5cbi8vIHNyYy9pY29ucy9wcm9wZXJ0eS1pY29uLnRzeFxuaW1wb3J0IFwibm90aW9uLXR5cGVzXCI7XG5cbi8vIHNyYy9pY29ucy90eXBlLWF1dG8taW5jcmVtZW50LWlkLnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDI3IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBTdmdUeXBlQXV0b0luY3JlbWVudElkKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MjcoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNiAxNlwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gyNyhcInBhdGhcIiwgeyBkOiBcIk0xMi4yNTIgNy45MjA5QzEzLjcyMTcgNy45MjA5IDE0LjcyNjYgNi45MzY1MiAxNC43MjY2IDUuNTA3ODFDMTQuNzI2NiA0LjA3OTEgMTMuNzIxNyAzLjEwMTU2IDEyLjI1MiAzLjEwMTU2QzEwLjgyMzIgMy4xMDE1NiA5Ljg0NTcgNC4wNzkxIDkuODQ1NyA1LjUwNzgxQzkuODQ1NyA2LjkzNjUyIDEwLjgzMDEgNy45MjA5IDEyLjI1MiA3LjkyMDlaTTIuMDA0ODggMTMuMTM2N0MyLjQ1NjA1IDEzLjEzNjcgMi43Mjk0OSAxMi44NDk2IDIuNzI5NDkgMTIuMzg0OFY1LjgzNTk0TDcuMzUwNTkgMTIuNTk2N0M3LjYzNzcgMTIuOTkzMiA3Ljg2MzI4IDEzLjEzNjcgOC4yMDUwOCAxMy4xMzY3QzguNjkwNDMgMTMuMTM2NyA4Ljk2Mzg3IDEyLjgzNTkgOC45NjM4NyAxMi4zMjMyVjMuODg3N0M4Ljk2Mzg3IDMuNDIyODUgOC42OTA0MyAzLjEyODkxIDguMjMyNDIgMy4xMjg5MUM3Ljc4ODA5IDMuMTI4OTEgNy41MDc4MSAzLjQxNjAyIDcuNTA3ODEgMy44ODc3VjEwLjQyMjlMMi44OTM1NSAzLjY2ODk1QzIuNjA2NDUgMy4yNTg3OSAyLjQwMTM3IDMuMTI4OTEgMi4wMzkwNiAzLjEyODkxQzEuNTY3MzggMy4xMjg5MSAxLjI3MzQ0IDMuNDUwMiAxLjI3MzQ0IDMuOTQyMzhWMTIuMzg0OEMxLjI3MzQ0IDEyLjg0OTYgMS41NTM3MSAxMy4xMzY3IDIuMDA0ODggMTMuMTM2N1pNMTIuMjUyIDYuODQ3NjZDMTEuNTYxNSA2Ljg0NzY2IDExLjA4OTggNi4zMDc2MiAxMS4wODk4IDUuNTA3ODFDMTEuMDg5OCA0LjcwODAxIDExLjU2MTUgNC4xNjc5NyAxMi4yNTIgNC4xNjc5N0MxMi45OTAyIDQuMTY3OTcgMTMuNDc1NiA0LjcwODAxIDEzLjQ3NTYgNS41MDc4MUMxMy40NzU2IDYuMzA3NjIgMTIuOTgzNCA2Ljg0NzY2IDEyLjI1MiA2Ljg0NzY2Wk0xMC42MjUgOS43NzM0NEgxMy45NTQxQzE0LjM1MDYgOS43NzM0NCAxNC42MjQgOS41NDEwMiAxNC42MjQgOS4xNDQ1M0MxNC42MjQgOC43NDgwNSAxNC4zNTA2IDguNTAxOTUgMTMuOTU0MSA4LjUwMTk1SDEwLjYyNUMxMC4yMjg1IDguNTAxOTUgOS45NjE5MSA4Ljc0ODA1IDkuOTYxOTEgOS4xNDQ1M0M5Ljk2MTkxIDkuNTQxMDIgMTAuMjI4NSA5Ljc3MzQ0IDEwLjYyNSA5Ljc3MzQ0WlwiIH0pIH0pO1xufVxudmFyIHR5cGVfYXV0b19pbmNyZW1lbnRfaWRfZGVmYXVsdCA9IFN2Z1R5cGVBdXRvSW5jcmVtZW50SWQ7XG5cbi8vIHNyYy9pY29ucy90eXBlLWNoZWNrYm94LnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDI4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBTdmdUeXBlQ2hlY2tib3gocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyOChcInN2Z1wiLCB7IHZpZXdCb3g6IFwiMCAwIDE0IDE0XCIsIC4uLnByb3BzLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDI4KFwicGF0aFwiLCB7IGQ6IFwiTTAgM2EzIDMgMCAwMTMtM2g4YTMgMyAwIDAxMyAzdjhhMyAzIDAgMDEtMyAzSDNhMyAzIDAgMDEtMy0zVjN6bTMtMS41QTEuNSAxLjUgMCAwMDEuNSAzdjhBMS41IDEuNSAwIDAwMyAxMi41aDhhMS41IDEuNSAwIDAwMS41LTEuNVYzQTEuNSAxLjUgMCAwMDExIDEuNUgzem0tLjE2NyA1LjMxNmwuNTY2LS41NDIuMTc3LS4xNy4zNDctLjMzMi4zNDYuMzM0LjE3Ni4xNyAxLjEzOSAxLjA5OCAzLjY5OS0zLjU2My4xNzctLjE3LjM0Ny0uMzM1LjM0Ny4zMzQuMTc3LjE3LjU2My41NDMuMTc3LjE3MS4zNzIuMzYtLjM3Mi4zNi0uMTc3LjE3LTQuNzg2IDQuNjE1LS4xNzcuMTcxLS4zNDcuMzM0LS4zNDctLjMzNC0uMTc3LS4xNy0yLjIzLTIuMTUtLjE3Ny0uMTcyLS4zNzUtLjM2MS4zNzYtLjM2LjE3OS0uMTd6XCIgfSkgfSk7XG59XG52YXIgdHlwZV9jaGVja2JveF9kZWZhdWx0ID0gU3ZnVHlwZUNoZWNrYm94O1xuXG4vLyBzcmMvaWNvbnMvdHlwZS1kYXRlLnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDI5IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBTdmdUeXBlRGF0ZShwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDI5KFwic3ZnXCIsIHsgdmlld0JveDogXCIwIDAgMTQgMTRcIiwgLi4ucHJvcHMsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4MjkoXCJwYXRoXCIsIHsgZDogXCJNMTAuODg5IDUuNUgzLjExdjEuNTU2aDcuNzc4VjUuNXptMS41NTUtNC40NDRoLS43NzdWMEgxMC4xMXYxLjA1NkgzLjg5VjBIMi4zMzN2MS4wNTZoLS43NzdjLS44NjQgMC0xLjU0OC43LTEuNTQ4IDEuNTU1TDAgMTIuNWMwIC44NTYuNjkyIDEuNSAxLjU1NiAxLjVoMTAuODg4QzEzLjMgMTQgMTQgMTMuMzU2IDE0IDEyLjVWMi42MTFjMC0uODU1LS43LTEuNTU1LTEuNTU2LTEuNTU1em0wIDExLjQ0NEgxLjU1NlYzLjk0NGgxMC44ODhWMTIuNXpNOC41NTYgOC42MTFIMy4xMXYxLjU1Nmg1LjQ0NVY4LjYxelwiIH0pIH0pO1xufVxudmFyIHR5cGVfZGF0ZV9kZWZhdWx0ID0gU3ZnVHlwZURhdGU7XG5cbi8vIHNyYy9pY29ucy90eXBlLWVtYWlsLnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDMwIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBTdmdUeXBlRW1haWwocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gzMChcInN2Z1wiLCB7IHZpZXdCb3g6IFwiMCAwIDE0IDE0XCIsIC4uLnByb3BzLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDMwKFwicGF0aFwiLCB7IGQ6IFwiTTE0IDYuMjI1YzAgLjgyMi0uMTMzIDEuNTc0LS40IDIuMjU2LS4yNjcuNjgzLS42NDQgMS4yMTgtMS4xMyAxLjYwNi0uNDg4LjM4OC0uOTQ2LjYtMS40OTQuNi0uNDI5IDAtLjgwOC0uMTAyLTEuMTM5LS4zMDVhMS43NTMgMS43NTMgMCAwMS0uNzEzLS44Yy0uNjEzLjczNi0xLjU2MyAxLjEwNC0yLjUzMSAxLjEwNC0xLjAyNyAwLTEuODM1LS4zMDQtMi40MjctLjkxMi0uNTkxLS42MDgtLjg4Ny0xLjQ0LS44ODctMi40OTYgMC0xLjIwNC4zODktMi4xNzUgMS4xNjYtMi45MTEuNzc2LS43MzYgMS43OTEtMS4xMDUgMy4wNDQtMS4xMDUuNDk4IDAgMi4wMzIuMjEyIDIuMjUyLjI2OC41MS4xMy44Ni41OTMuODM1IDEuMTEybC0uMTU2IDMuMjg3YzAgLjc5NC4yMiAxLjE5LjY2IDEuMTkuMzcyIDAgLjY2OC0uMjY3Ljg4OC0uOC4yMi0uNTM0LjMzLTEuMjMyLjMzLTIuMDk0IDAtLjkxOS0uMTk0LTEuNzMxLS41ODItMi40MzZhMy45MjQgMy45MjQgMCAwMC0xLjY0LTEuNjE0Yy0uNzA0LS4zNzEtMS41MDktLjU1Ny0yLjQxMy0uNTU3LTEuMTcyIDAtMi4xOS4yMzctMy4wNTMuNzExYTQuNzg1IDQuNzg1IDAgMDAtMS45ODggMi4wNWMtLjQ2Ljg5NC0uNjkxIDEuOTI2LS42OTEgMy4wOTYgMCAxLjU3Ni40MjggMi43ODQgMS4yODMgMy42MjcuODU1Ljg0MSAyLjA5NCAxLjI2MiAzLjcxOCAxLjI2Mi42MTUgMCAxLjI5LS4wNjcgMi4wMjctLjIuMjI1LS4wNDIuNTE4LS4xMDguODc3LS4yYS44NjMuODYzIDAgMDExLjAyNS41MjcuNzYuNzYgMCAwMS0uNTAyLjk5M2MtMS4wNTIuMzE2LTIuMTcuNDg4LTMuMzU3LjUxNi0yLjIwNCAwLTMuOTIyLS41Ny01LjE1NC0xLjcxM0MuNjE2IDExLjE0NiAwIDkuNTYgMCA3LjUyN2MwLTEuNDEuMzE1LTIuNjkuOTQ0LTMuODRBNi43OTIgNi43OTIgMCAwMTMuNjMuOThDNC43OTQuMzI3IDYuMTMxIDAgNy42NDUgMGMxLjI3NiAwIDIuNTE0LjI5IDMuNDE4Ljc3LjkwNS40ODEgMS41NzQgMS4yMjggMi4xMiAyLjE3Ni41NDQuOTQ3LjgxNyAyLjA0LjgxNyAzLjI4em0tOC42MTUgMS4wMWMwIDEuMjA4LjQ4OCAxLjgxMSAxLjQ2NiAxLjgxMS41MTEgMCAuOS0uMTgxIDEuMTY4LS41NDUuMjY3LS4zNjMuNDI5LS45NTQuNDg2LTEuNzcybC4xMS0xLjg5NmE0LjYzOCA0LjYzOCAwIDAwLS45OC0uMDk1Yy0uNzEgMC0xLjI2My4yMjQtMS42NTguNjctLjM5NS40NDYtLjU5MiAxLjA1NS0uNTkyIDEuODI4elwiIH0pIH0pO1xufVxudmFyIHR5cGVfZW1haWxfZGVmYXVsdCA9IFN2Z1R5cGVFbWFpbDtcblxuLy8gc3JjL2ljb25zL3R5cGUtZmlsZS50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3gzMSB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gU3ZnVHlwZUZpbGUocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gzMShcInN2Z1wiLCB7IHZpZXdCb3g6IFwiMCAwIDE0IDE0XCIsIC4uLnByb3BzLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDMxKFwicGF0aFwiLCB7IGQ6IFwiTTUuOTQ2IDE0YTQuOTc1IDQuOTc1IDAgMDEtMy40OTctMS40MTVBNC43MzEgNC43MzEgMCAwMTEgOS4xNzRjMC0xLjI4OC41MTUtMi41IDEuNDQ5LTMuNDFMNy40NTYuOTg2YzEuMzQ1LTEuMzEzIDMuNzIyLTEuMzE4IDUuMDguMDA3YTMuNDUzIDMuNDUzIDAgMDEwIDQuOTYxTDguMDMgMTAuMjQxYy0uODY3Ljg0Ny0yLjI5My44NDgtMy4xNy0uMDA2YTIuMTU4IDIuMTU4IDAgMDEwLTMuMTAybDEuNzQ0LTEuNzAxIDEuMjcyIDEuMjQtMS43NDQgMS43MDFhLjQzLjQzIDAgMDAwIC42MjFjLjIzLjIyMy40MDUuMjIzLjYzNiAwbDQuNTAzLTQuMjg4YTEuNzIzIDEuNzIzIDAgMDAtLjAwNy0yLjQ3M2MtLjY4LS42NjMtMS44NjQtLjY2My0yLjU0MyAwTDMuNzEzIDcuMDExYTMuMDA2IDMuMDA2IDAgMDAtLjkxNSAyLjE2M2MwIC44Mi4zMjggMS41OTEuOTIyIDIuMTcgMS4xOSAxLjE2MiAzLjI2MiAxLjE2MiA0LjQ1MSAwbDIuMjQ4LTIuMTkyIDEuMjcyIDEuMjQtMi4yNDggMi4xOTNBNC45NzggNC45NzggMCAwMTUuOTQ2IDE0elwiIH0pIH0pO1xufVxudmFyIHR5cGVfZmlsZV9kZWZhdWx0ID0gU3ZnVHlwZUZpbGU7XG5cbi8vIHNyYy9pY29ucy90eXBlLWZvcm11bGEudHN4XG5pbXBvcnQgeyBqc3ggYXMganN4MzIgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIFN2Z1R5cGVGb3JtdWxhKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MzIoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gzMihcInBhdGhcIiwgeyBkOiBcIk03Ljc3OSA3LjA2M2wtMy4xNTcgNC4yMjRhLjQ5LjQ5IDAgMDAtLjA3Mi4yMTguMzUuMzUgMCAwMC4zNDYuMzU3aDYuMjQyYy40NzYgMCAuODYyLjM5OC44NjIuODg5di4zNmMwIC40OTEtLjM4Ni44ODktLjg2Mi44ODlIMS44NjJBLjg3Ni44NzYgMCAwMTEgMTMuMTExdi0uNDI1YS44Mi44MiAwIDAxLjE3Ny0uNTRMNC4zOTMgNy44YTEuMzY3IDEuMzY3IDAgMDAtLjAwNi0xLjYyNUwxLjQgMi4xOTRhLjgyMi44MjIgMCAwMS0uMTgtLjU0NFYuODlDMS4yMi4zOTggMS42MDQgMCAyLjA4IDBoOC44MzhjLjQ3NiAwIC44NjEuMzk4Ljg2MS44ODl2LjM2YzAgLjQ5MS0uMzg1Ljg5LS44Ni44OUg1LjEzNWMtLjE5IDAtLjM0NS4xNTktLjM0NS4zNTZhLjQ4OS40ODkgMCAwMC4wNy4yMTZsMi45MiAzLjk3NWMuMDQ5LjA2Mi4wNjMuMTA3LjA2LjE4OGEuMjQ2LjI0NiAwIDAxLS4wNjIuMTg5elwiIH0pIH0pO1xufVxudmFyIHR5cGVfZm9ybXVsYV9kZWZhdWx0ID0gU3ZnVHlwZUZvcm11bGE7XG5cbi8vIHNyYy9pY29ucy90eXBlLW11bHRpLXNlbGVjdC50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3gzMyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gU3ZnVHlwZU11bHRpU2VsZWN0KHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MzMoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gzMyhcInBhdGhcIiwgeyBkOiBcIk00IDNhMSAxIDAgMDExLTFoN2ExIDEgMCAxMTAgMkg1YTEgMSAwIDAxLTEtMXptMCA0YTEgMSAwIDAxMS0xaDdhMSAxIDAgMTEwIDJINWExIDEgMCAwMS0xLTF6bTAgNGExIDEgMCAwMTEtMWg3YTEgMSAwIDExMCAySDVhMSAxIDAgMDEtMS0xek0yIDRhMSAxIDAgMTEwLTIgMSAxIDAgMDEwIDJ6bTAgNGExIDEgMCAxMTAtMiAxIDEgMCAwMTAgMnptMCA0YTEgMSAwIDExMC0yIDEgMSAwIDAxMCAyelwiIH0pIH0pO1xufVxudmFyIHR5cGVfbXVsdGlfc2VsZWN0X2RlZmF1bHQgPSBTdmdUeXBlTXVsdGlTZWxlY3Q7XG5cbi8vIHNyYy9pY29ucy90eXBlLW51bWJlci50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3gzNCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gU3ZnVHlwZU51bWJlcihwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDM0KFwic3ZnXCIsIHsgdmlld0JveDogXCIwIDAgMTQgMTRcIiwgLi4ucHJvcHMsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4MzQoXCJwYXRoXCIsIHsgZDogXCJNNC40NjIgMGMtLjU5NSAwLTEuMDc4LjQ4Mi0xLjA3OCAxLjA3OHYyLjMwNkgxLjA3OGExLjA3OCAxLjA3OCAwIDEwMCAyLjE1NWgyLjMwNnYyLjkyMkgxLjA3OGExLjA3OCAxLjA3OCAwIDEwMCAyLjE1NWgyLjMwNnYyLjMwNmExLjA3OCAxLjA3OCAwIDAwMi4xNTUgMHYtMi4zMDZIOC40NnYyLjMwNmExLjA3OCAxLjA3OCAwIDAwMi4xNTYgMHYtMi4zMDZoMi4zMDZhMS4wNzggMS4wNzggMCAxMDAtMi4xNTVoLTIuMzA2VjUuNTM5aDIuMzA2YTEuMDc4IDEuMDc4IDAgMTAwLTIuMTU1aC0yLjMwNlYxLjA3OGExLjA3OCAxLjA3OCAwIDAwLTIuMTU2IDB2Mi4zMDZINS41NFYxLjA3OEM1LjU0LjQ4MiA1LjA1NiAwIDQuNDYxIDB6bTEuMDc3IDguNDZWNS41NEg4LjQ2djIuOTJINS41NHpcIiB9KSB9KTtcbn1cbnZhciB0eXBlX251bWJlcl9kZWZhdWx0ID0gU3ZnVHlwZU51bWJlcjtcblxuLy8gc3JjL2ljb25zL3R5cGUtcGVyc29uLnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDM1IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBTdmdUeXBlUGVyc29uKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MzUoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gzNShcInBhdGhcIiwgeyBkOiBcIk05LjYyNSAxMC44NDdDOC45MTIgMTAuMjg5IDguMTIxIDkuOTI2IDcgOS4yNnYtLjU0YTMuMzMgMy4zMyAwIDAwLjUzOC0uODg4Yy40MDgtLjEuNzc0LS40OTguNzc0LS44MzIgMC0uNDgyLS4yMDItLjY3My0uNDQtLjgyOSAwLS4wMTUuMDAzLS4wMy4wMDMtLjA0NiAwLS43MTEtLjQzOC0yLjYyNS0yLjYyNS0yLjYyNS0yLjE4OCAwLTIuNjI1IDEuOTE1LTIuNjI1IDIuNjI1IDAgLjAxNy4wMDMuMDMuMDAzLjA0Ni0uMjM4LjE1Ni0uNDQuMzQ3LS40NC44MjkgMCAuMzM0LjM2Ni43MzEuNzc0LjgzMy4xNDYuMzQzLjMyNi42NDMuNTM4Ljg4NnYuNTQxYy0xLjEyLjY2NS0xLjkxMiAxLjAyOC0yLjYyNSAxLjU4N0MuMDQxIDExLjQ5OCAwIDEyLjQ2OSAwIDE0aDEwLjVjMC0xLjUzMS0uMDQxLTIuNTAyLS44NzUtMy4xNTN6bTMuNS0zLjVjLS43MTMtLjU1OC0xLjUwNC0uOTIxLTIuNjI1LTEuNTg3di0uNTRjLjIxMi0uMjQ0LjM5Mi0uNTQ0LjUzOC0uODg4LjQwOC0uMS43NzQtLjQ5OC43NzQtLjgzMiAwLS40ODItLjIwMi0uNjczLS40NC0uODI5IDAtLjAxNS4wMDMtLjAzLjAwMy0uMDQ2QzExLjM3NSAxLjkxNCAxMC45MzcgMCA4Ljc1IDAgNi41NjIgMCA2LjEyNSAxLjkxNSA2LjEyNSAyLjYyNWMwIC4wMTcuMDAzLjAzLjAwMy4wNDYtLjAxNi4wMTItLjAzLjAyNS0uMDQ3LjAzNiAxLjc1MS4zNTkgMi41MTYgMS44NDEgMi42NDcgMy4wNC4yNDguMjYyLjQ2LjY1LjQ2IDEuMjUzIDAgLjYwMy0uNDE3IDEuMjAzLTEuMDA0IDEuNTE1LS4wNTcuMTA5LS4xMTcuMjE0LS4xODEuMzE1bC40MzcuMjQ1Yy42NC4zNTcgMS4xOTQuNjY2IDEuNzI0IDEuMDgxLjEzOC4xMDguMjU2LjIyNC4zNjUuMzQzSDE0YzAtMS41My0uMDQxLTIuNS0uODc1LTMuMTUzelwiIH0pIH0pO1xufVxudmFyIHR5cGVfcGVyc29uX2RlZmF1bHQgPSBTdmdUeXBlUGVyc29uO1xuXG4vLyBzcmMvaWNvbnMvdHlwZS1wZXJzb24tMi50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3gzNiB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gU3ZnVHlwZVBlcnNvbjIocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gzNihcInN2Z1wiLCB7IHZpZXdCb3g6IFwiMCAwIDE0IDE0XCIsIC4uLnByb3BzLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDM2KFwicGF0aFwiLCB7IGQ6IFwiTTEzLjEyNSAxMC4wMzVjLS41NzEtLjU1LTIuMzI0LTEuNTA0LTMuNS0yLjE2di0uODM0Yy4yMjQtLjMyMi40Mi0uNjcxLjU2Ni0xLjA1NS4zOTQtLjI0Mi43NDYtLjcwMi43NDYtMS4xNzMgMC0uNDU4LS4wMDUtLjg3LS40Ny0xLjIwOEMxMC4zMDUgMS41NTggOS40MzYgMCA3IDBTMy42OTUgMS41NTggMy41MzMgMy42MDVjLS40NjUuMzM4LS40Ny43NS0uNDcgMS4yMDggMCAuNDcxLjM1Mi45My43NDYgMS4xNzMuMTQ2LjM4NC4zNDIuNzMzLjU2NiAxLjA1NXYuODM0Yy0xLjE3Ni42NTYtMi45MjkgMS42MS0zLjUgMi4xNkMuMTY1IDEwLjcyIDAgMTEuODEyIDAgMTRoMTRjMC0yLjE4OC0uMTY0LTMuMjgxLS44NzUtMy45NjV6XCIgfSkgfSk7XG59XG52YXIgdHlwZV9wZXJzb25fMl9kZWZhdWx0ID0gU3ZnVHlwZVBlcnNvbjI7XG5cbi8vIHNyYy9pY29ucy90eXBlLXBob25lLW51bWJlci50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3gzNyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gU3ZnVHlwZVBob25lTnVtYmVyKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MzcoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gzNyhcInBhdGhcIiwgeyBkOiBcIk0yLjIwNy4wMTNhLjQ4Ny40ODcgMCAwMC0uMjkuMDJDLjg3LjQzOC4yMTMgMS45My4wNTggMi45NTVjLS40ODQgMy4zMyAyLjE1IDYuMjE1IDQuNTcgOC4xMTMgMi4xNDkgMS42ODQgNi4yNzMgNC40NTMgOC43MTMgMS43ODEuMzEtLjMyOS42NzgtLjgxMy42NTgtMS4yOTctLjA1OC0uODEzLS44MTMtMS4zOTQtMS4zOTQtMS44NC0uNDQ1LS4zMjktMS4zNzUtMS4yMzktMS45NTYtMS4yMi0uNTIyLjAyLS44NTEuNTYyLTEuMTguODkxbC0uNTgyLjU4MWMtLjA5Ni4wOTctMS4zMzYtLjcxNi0xLjQ3MS0uODEzYTkuODgxIDkuODgxIDAgMDEtMS40MTQtMS4xMDRBOS4xMyA5LjEzIDAgMDE0Ljg2IDYuNzMyYy0uMDk3LS4xMzYtLjg5LTEuMzE3LS44MTMtMS40MTQgMCAwIC42NzctLjczNi44NzEtMS4wMjYuNDA3LS42Mi43MTctMS4xMDQuMjUyLTEuODQtLjE3NC0uMjctLjM4Ny0uNDg0LS42Mi0uNzE2LS40MDYtLjM4Ny0uODEzLS43OTQtMS4yNzgtMS4xMjMtLjI1MS0uMTk0LS42NzctLjU0Mi0xLjA2NS0uNnpcIiB9KSB9KTtcbn1cbnZhciB0eXBlX3Bob25lX251bWJlcl9kZWZhdWx0ID0gU3ZnVHlwZVBob25lTnVtYmVyO1xuXG4vLyBzcmMvaWNvbnMvdHlwZS1yZWxhdGlvbi50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3gzOCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gU3ZnVHlwZVJlbGF0aW9uKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MzgoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3gzOChcInBhdGhcIiwgeyBkOiBcIk00LjUgMXYyaDUuMDg2TDEgMTEuNTg2IDIuNDE0IDEzIDExIDQuNDE0VjkuNWgyVjF6XCIgfSkgfSk7XG59XG52YXIgdHlwZV9yZWxhdGlvbl9kZWZhdWx0ID0gU3ZnVHlwZVJlbGF0aW9uO1xuXG4vLyBzcmMvaWNvbnMvdHlwZS1zZWxlY3QudHN4XG5pbXBvcnQgeyBqc3ggYXMganN4MzkgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIFN2Z1R5cGVTZWxlY3QocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gzOShcInN2Z1wiLCB7IHZpZXdCb3g6IFwiMCAwIDE0IDE0XCIsIC4uLnByb3BzLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDM5KFwicGF0aFwiLCB7IGQ6IFwiTTcgMTNBNiA2IDAgMTA3IDFhNiA2IDAgMDAwIDEyek0zLjc1MSA1LjMyM0EuMi4yIDAgMDEzLjkwOSA1aDYuMTgyYS4yLjIgMCAwMS4xNTguMzIzTDcuMTU4IDkuMjk3YS4yLjIgMCAwMS0uMzE2IDBMMy43NTEgNS4zMjN6XCIgfSkgfSk7XG59XG52YXIgdHlwZV9zZWxlY3RfZGVmYXVsdCA9IFN2Z1R5cGVTZWxlY3Q7XG5cbi8vIHNyYy9pY29ucy90eXBlLXN0YXR1cy50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3g0MCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gU3ZnVHlwZVN0YXR1cyhwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDQwKFwic3ZnXCIsIHsgdmlld0JveDogXCIwIDAgMTYgMTZcIiwgLi4ucHJvcHMsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4NDAoXCJwYXRoXCIsIHsgZDogXCJNOC43NTQ4OCAxLjAyMzQ0QzguNzU0ODggMC42MTMyODEgOC40MTMwOSAwLjI2NDY0OCA4LjAwMjkzIDAuMjY0NjQ4QzcuNTkyNzcgMC4yNjQ2NDggNy4yNTA5OCAwLjYxMzI4MSA3LjI1MDk4IDEuMDIzNDRWMy4xMTUyM0M3LjI1MDk4IDMuNTE4NTUgNy41OTI3NyAzLjg2NzE5IDguMDAyOTMgMy44NjcxOUM4LjQxMzA5IDMuODY3MTkgOC43NTQ4OCAzLjUxODU1IDguNzU0ODggMy4xMTUyM1YxLjAyMzQ0Wk0zLjkxNTA0IDUuMDI5M0M0LjIwMjE1IDUuMzE2NDEgNC42OTQzNCA1LjMyMzI0IDQuOTc0NjEgNS4wMzYxM0M1LjI2ODU1IDQuNzQ5MDIgNS4yNjg1NSA0LjI1Njg0IDQuOTgxNDUgMy45Njk3M0wzLjUzOTA2IDIuNTIwNTFDMy4yNTE5NSAyLjIzMzQgMi43NjY2IDIuMjE5NzMgMi40Nzk0OSAyLjUwNjg0QzIuMTkyMzggMi43OTM5NSAyLjE4NTU1IDMuMjg2MTMgMi40NzI2NiAzLjU3MzI0TDMuOTE1MDQgNS4wMjkzWk0xMC45NjI5IDQuMDE3NThDMTAuNjgyNiA0LjMwNDY5IDEwLjY4MjYgNC43OTY4OCAxMC45Njk3IDUuMDgzOThDMTEuMjU2OCA1LjM3MTA5IDExLjc0OSA1LjM2NDI2IDEyLjAzNjEgNS4wNzcxNUwxMy40ODU0IDMuNjI3OTNDMTMuNzcyNSAzLjM0MDgyIDEzLjc3MjUgMi44NDg2MyAxMy40Nzg1IDIuNTU0NjlDMTMuMTk4MiAyLjI3NDQxIDEyLjcwNjEgMi4yNzQ0MSAxMi40MTg5IDIuNTYxNTJMMTAuOTYyOSA0LjAxNzU4Wk0xNS4wMjM0IDguNzg5MDZDMTUuNDMzNiA4Ljc4OTA2IDE1Ljc4MjIgOC40NDcyNyAxNS43ODIyIDguMDM3MTFDMTUuNzgyMiA3LjYyNjk1IDE1LjQzMzYgNy4yODUxNiAxNS4wMjM0IDcuMjg1MTZIMTIuOTM4NUMxMi41MjgzIDcuMjg1MTYgMTIuMTc5NyA3LjYyNjk1IDEyLjE3OTcgOC4wMzcxMUMxMi4xNzk3IDguNDQ3MjcgMTIuNTI4MyA4Ljc4OTA2IDEyLjkzODUgOC43ODkwNkgxNS4wMjM0Wk0wLjk3NTU4NiA3LjI4NTE2QzAuNTY1NDMgNy4yODUxNiAwLjIyMzYzMyA3LjYyNjk1IDAuMjIzNjMzIDguMDM3MTFDMC4yMjM2MzMgOC40NDcyNyAwLjU2NTQzIDguNzg5MDYgMC45NzU1ODYgOC43ODkwNkgzLjA3NDIyQzMuNDg0MzggOC43ODkwNiAzLjgzMzAxIDguNDQ3MjcgMy44MzMwMSA4LjAzNzExQzMuODMzMDEgNy42MjY5NSAzLjQ4NDM4IDcuMjg1MTYgMy4wNzQyMiA3LjI4NTE2SDAuOTc1NTg2Wk0xMi4wMzYxIDEwLjk5MDJDMTEuNzQ5IDEwLjcxIDExLjI1NjggMTAuNzEgMTAuOTYyOSAxMC45OTcxQzEwLjY4MjYgMTEuMjg0MiAxMC42ODI2IDExLjc3NjQgMTAuOTY5NyAxMi4wNjM1TDEyLjQyNTggMTMuNTEyN0MxMi43MTI5IDEzLjc5OTggMTMuMjA1MSAxMy43OTMgMTMuNDkyMiAxMy41MDU5QzEzLjc3OTMgMTMuMjI1NiAxMy43NzI1IDEyLjcyNjYgMTMuNDg1NCAxMi40Mzk1TDEyLjAzNjEgMTAuOTkwMlpNMi41MjA1MSAxMi40Mzk1QzIuMjI2NTYgMTIuNzI2NiAyLjIyNjU2IDEzLjIxODggMi41MDY4NCAxMy41MDU5QzIuNzkzOTUgMTMuNzkzIDMuMjg2MTMgMTMuNzk5OCAzLjU3MzI0IDEzLjUxMjdMNS4wMjI0NiAxMi4wNzAzQzUuMzE2NDEgMTEuNzgzMiA1LjMxNjQxIDExLjI5MSA1LjAzNjEzIDExLjAwMzlDNC43NDkwMiAxMC43MTY4IDQuMjU2ODQgMTAuNzEgMy45Njk3MyAxMC45OTcxTDIuNTIwNTEgMTIuNDM5NVpNOC43NTQ4OCAxMi45NjU4QzguNzU0ODggMTIuNTU1NyA4LjQxMzA5IDEyLjIwNyA4LjAwMjkzIDEyLjIwN0M3LjU5Mjc3IDEyLjIwNyA3LjI1MDk4IDEyLjU1NTcgNy4yNTA5OCAxMi45NjU4VjE1LjA1NzZDNy4yNTA5OCAxNS40NjA5IDcuNTkyNzcgMTUuODA5NiA4LjAwMjkzIDE1LjgwOTZDOC40MTMwOSAxNS44MDk2IDguNzU0ODggMTUuNDYwOSA4Ljc1NDg4IDE1LjA1NzZWMTIuOTY1OFpcIiB9KSB9KTtcbn1cbnZhciB0eXBlX3N0YXR1c19kZWZhdWx0ID0gU3ZnVHlwZVN0YXR1cztcblxuLy8gc3JjL2ljb25zL3R5cGUtdGV4dC50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3g0MSB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gU3ZnVHlwZVRleHQocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g0MShcInN2Z1wiLCB7IHZpZXdCb3g6IFwiMCAwIDE0IDE0XCIsIC4uLnByb3BzLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDQxKFwicGF0aFwiLCB7IGQ6IFwiTTcgNC41NjhhLjUuNSAwIDAwLS41LS41aC02YS41LjUgMCAwMC0uNS41djEuMDQ2YS41LjUgMCAwMC41LjVoNmEuNS41IDAgMDAuNS0uNVY0LjU2OHpNLjUgMWEuNS41IDAgMDAtLjUuNXYxLjA0NWEuNS41IDAgMDAuNS41aDEyYS41LjUgMCAwMC41LS41VjEuNWEuNS41IDAgMDAtLjUtLjVILjV6TTAgOC42ODJhLjUuNSAwIDAwLjUuNWgxMWEuNS41IDAgMDAuNS0uNVY3LjYzNmEuNS41IDAgMDAtLjUtLjVILjVhLjUuNSAwIDAwLS41LjV2MS4wNDZ6bTAgMy4wNjhhLjUuNSAwIDAwLjUuNWg5YS41LjUgMCAwMC41LS41di0xLjA0NWEuNS41IDAgMDAtLjUtLjVoLTlhLjUuNSAwIDAwLS41LjV2MS4wNDV6XCIgfSkgfSk7XG59XG52YXIgdHlwZV90ZXh0X2RlZmF1bHQgPSBTdmdUeXBlVGV4dDtcblxuLy8gc3JjL2ljb25zL3R5cGUtdGltZXN0YW1wLnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDQyIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBTdmdUeXBlVGltZXN0YW1wKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NDIoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g0MihcInBhdGhcIiwgeyBkOiBcIk02Ljk4NiAxNGMtMS43OSAwLTMuNTgyLS42OS00Ljk0NC0yLjA2OC0yLjcyMy0yLjcyLTIuNzIzLTcuMTcyIDAtOS44OTIgMi43MjUtMi43MiA3LjE4Mi0yLjcyIDkuOTA2IDBBNi45NzIgNi45NzIgMCAwMTE0IDYuOTk2YzAgMS44OC0uNzI4IDMuNjMzLTIuMDUyIDQuOTU1QTcuMDU4IDcuMDU4IDAgMDE2Ljk4NiAxNHptMy4yODUtNi45OXYxLjY0NUg1LjUyNnYtNS40N2gxLjg0MXYzLjYzaDIuOTA0di4xOTR6bTEuODktLjAxNGMwLTEuMzc5LS41NDItMi42Ny0xLjUyMi0zLjY0OC0yLjAwNi0yLjAwNS01LjI4Ny0yLjAwNy03LjI5Ny0uMDA5bC0uMDA5LjAwOWE1LjE2OCA1LjE2OCAwIDAwMCA3LjI5NWMyLjAxIDIuMDA3IDUuMjk3IDIuMDA3IDcuMzA2IDBhNS4xMTkgNS4xMTkgMCAwMDEuNTIxLTMuNjQ3elwiIH0pIH0pO1xufVxudmFyIHR5cGVfdGltZXN0YW1wX2RlZmF1bHQgPSBTdmdUeXBlVGltZXN0YW1wO1xuXG4vLyBzcmMvaWNvbnMvdHlwZS10aXRsZS50c3hcbmltcG9ydCB7IGpzeCBhcyBqc3g0MyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gU3ZnVHlwZVRpdGxlKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NDMoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g0MyhcInBhdGhcIiwgeyBkOiBcIk03Ljc0IDguNjk3YS44MS44MSAwIDAxLjA3My4zMDguODk0Ljg5NCAwIDAxLS45Ljg4OC44NjcuODY3IDAgMDEtLjgyNS0uNTkybC0uMzMzLS45NjFIMi4wNThsLS4zMzMuOTYxYS44ODIuODgyIDAgMDEtLjgzOC41OTJBLjg4NC44ODQgMCAwMTAgOS4wMDVjMC0uMTEuMDI1LS4yMjIuMDYyLS4zMDhsMi40MDMtNi4yMTFjLjIyMi0uNTguNzc2LS45ODYgMS40NDItLjk4Ni42NTMgMCAxLjIyLjQwNyAxLjQ0Mi45ODZsMi4zOSA2LjIxMXpNMi42IDYuODI0aDIuNjEzTDMuOTA3IDMuMTAyIDIuNiA2LjgyNHptOC44LTMuMTE4YzEuMzU1IDAgMi42LjU0MiAyLjYgMi4yNTVWOS4wOGEuOC44IDAgMDEtLjc4OS44MTQuNzk3Ljc5NyAwIDAxLS43ODgtLjcwM2MtLjM5NS40NjgtMS4wOTcuNzY0LTEuODc0Ljc2NC0uOTQ5IDAtMi4wNy0uNjQtMi4wNy0xLjk3MiAwLTEuMzkyIDEuMTIxLTEuODk3IDIuMDctMS44OTcuNzg5IDAgMS40OTEuMjQ2IDEuODg2LjcyN3YtLjgyNmMwLS42MDQtLjUxOC0uOTk4LTEuMzA2LS45OTgtLjQ2OSAwLS44ODguMTIzLTEuMzIuMzk0YS42NC42NCAwIDAxLS4zMDcuMDg2LjYwMi42MDIgMCAwMS0uNTkyLS42MDRjMC0uMjIxLjEyMy0uNDE5LjI4NC0uNTE3YTMuOTYzIDMuOTYzIDAgMDEyLjIwNi0uNjQxem0tLjIyMiA1LjE4OGMuNTA1IDAgLjk5OC0uMTcyIDEuMjU3LS41MTd2LS43NGMtLjI1OS0uMzQ1LS43NTItLjUxNy0xLjI1Ny0uNTE3LS42MTYgMC0xLjEyMi4zMzItMS4xMjIuOSAwIC41NTQuNTA2Ljg3NCAxLjEyMi44NzR6TS42NTYgMTEuMTI1aDEyLjY4OGEuNjU2LjY1NiAwIDExMCAxLjMxM0guNjU2YS42NTYuNjU2IDAgMTEwLTEuMzEzelwiIH0pIH0pO1xufVxudmFyIHR5cGVfdGl0bGVfZGVmYXVsdCA9IFN2Z1R5cGVUaXRsZTtcblxuLy8gc3JjL2ljb25zL3R5cGUtdXJsLnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDQ0IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBTdmdUeXBlVXJsKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NDQoXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCAuLi5wcm9wcywgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g0NChcInBhdGhcIiwgeyBkOiBcIk0zLjczMyAzLjg2N2gzLjczNGMxLjAzIDAgMS44NjYuODM3IDEuODY2IDEuODY2IDAgMS4wMy0uODM3IDEuODY3LTEuODY2IDEuODY3aC0uOTM0YS45MzQuOTM0IDAgMDAwIDEuODY3aC45MzRhMy43MzQgMy43MzQgMCAwMDAtNy40NjdIMy43MzNBMy43MyAzLjczIDAgMDAxLjg5IDguOTc3YTQuNjM3IDQuNjM3IDAgMDEuMzE0LTIuMTggMS44NTQgMS44NTQgMCAwMS0uMzM2LTEuMDY0YzAtMS4wMy44MzctMS44NjYgMS44NjYtMS44NjZ6bTguMzc3IDEuNDIyYTQuNiA0LjYgMCAwMS0uMzE2IDIuMTc2Yy4yMTIuMzAzLjM0LjY3LjM0IDEuMDY4IDAgMS4wMy0uODM4IDEuODY3LTEuODY3IDEuODY3SDYuNTMzYTEuODY5IDEuODY5IDAgMDEtMS44NjYtMS44NjdjMC0xLjAzLjgzNy0xLjg2NiAxLjg2Ni0xLjg2NmguOTM0YS45MzQuOTM0IDAgMDAwLTEuODY3aC0uOTM0YTMuNzMzIDMuNzMzIDAgMDAwIDcuNDY3aDMuNzM0YTMuNzMgMy43MyAwIDAwMS44NDMtNi45Nzh6XCIgfSkgfSk7XG59XG52YXIgdHlwZV91cmxfZGVmYXVsdCA9IFN2Z1R5cGVVcmw7XG5cbi8vIHNyYy9pY29ucy9wcm9wZXJ0eS1pY29uLnRzeFxudmFyIGljb25NYXAyID0ge1xuICB0aXRsZTogdHlwZV90aXRsZV9kZWZhdWx0LFxuICB0ZXh0OiB0eXBlX3RleHRfZGVmYXVsdCxcbiAgbnVtYmVyOiB0eXBlX251bWJlcl9kZWZhdWx0LFxuICBzZWxlY3Q6IHR5cGVfc2VsZWN0X2RlZmF1bHQsXG4gIHN0YXR1czogdHlwZV9zdGF0dXNfZGVmYXVsdCxcbiAgbXVsdGlfc2VsZWN0OiB0eXBlX211bHRpX3NlbGVjdF9kZWZhdWx0LFxuICBkYXRlOiB0eXBlX2RhdGVfZGVmYXVsdCxcbiAgcGVyc29uOiB0eXBlX3BlcnNvbl9kZWZhdWx0LFxuICBmaWxlOiB0eXBlX2ZpbGVfZGVmYXVsdCxcbiAgY2hlY2tib3g6IHR5cGVfY2hlY2tib3hfZGVmYXVsdCxcbiAgdXJsOiB0eXBlX3VybF9kZWZhdWx0LFxuICBlbWFpbDogdHlwZV9lbWFpbF9kZWZhdWx0LFxuICBwaG9uZV9udW1iZXI6IHR5cGVfcGhvbmVfbnVtYmVyX2RlZmF1bHQsXG4gIGZvcm11bGE6IHR5cGVfZm9ybXVsYV9kZWZhdWx0LFxuICByZWxhdGlvbjogdHlwZV9yZWxhdGlvbl9kZWZhdWx0LFxuICBjcmVhdGVkX3RpbWU6IHR5cGVfdGltZXN0YW1wX2RlZmF1bHQsXG4gIGxhc3RfZWRpdGVkX3RpbWU6IHR5cGVfdGltZXN0YW1wX2RlZmF1bHQsXG4gIGNyZWF0ZWRfYnk6IHR5cGVfcGVyc29uXzJfZGVmYXVsdCxcbiAgbGFzdF9lZGl0ZWRfYnk6IHR5cGVfcGVyc29uXzJfZGVmYXVsdCxcbiAgYXV0b19pbmNyZW1lbnRfaWQ6IHR5cGVfYXV0b19pbmNyZW1lbnRfaWRfZGVmYXVsdFxufTtcbmZ1bmN0aW9uIFByb3BlcnR5SWNvbih7IHR5cGUsIC4uLnJlc3QgfSkge1xuICBjb25zdCBpY29uID0gaWNvbk1hcDJbdHlwZV07XG4gIGlmICghaWNvbikgcmV0dXJuIG51bGw7XG4gIHJldHVybiBpY29uKHJlc3QpO1xufVxuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi1jb2x1bW4tdGl0bGUudHN4XG5pbXBvcnQgeyBqc3ggYXMganN4NDUsIGpzeHMgYXMganN4czEwIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBDb2xsZWN0aW9uQ29sdW1uVGl0bGUoe1xuICBzY2hlbWFcbn0pIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzMTAoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24tY29sdW1uLXRpdGxlXCIsIGNoaWxkcmVuOiBbXG4gICAgLyogQF9fUFVSRV9fICovIGpzeDQ1KFxuICAgICAgUHJvcGVydHlJY29uLFxuICAgICAge1xuICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24tY29sdW1uLXRpdGxlLWljb25cIixcbiAgICAgICAgdHlwZTogc2NoZW1hLnR5cGVcbiAgICAgIH1cbiAgICApLFxuICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g0NShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1jb2x1bW4tdGl0bGUtYm9keVwiLCBjaGlsZHJlbjogc2NoZW1hLm5hbWUgfSlcbiAgXSB9KTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvZW4tVVMvX2xpYi9mb3JtYXREaXN0YW5jZS5qc1xudmFyIGZvcm1hdERpc3RhbmNlTG9jYWxlID0ge1xuICBsZXNzVGhhblhTZWNvbmRzOiB7XG4gICAgb25lOiBcImxlc3MgdGhhbiBhIHNlY29uZFwiLFxuICAgIG90aGVyOiBcImxlc3MgdGhhbiB7e2NvdW50fX0gc2Vjb25kc1wiXG4gIH0sXG4gIHhTZWNvbmRzOiB7XG4gICAgb25lOiBcIjEgc2Vjb25kXCIsXG4gICAgb3RoZXI6IFwie3tjb3VudH19IHNlY29uZHNcIlxuICB9LFxuICBoYWxmQU1pbnV0ZTogXCJoYWxmIGEgbWludXRlXCIsXG4gIGxlc3NUaGFuWE1pbnV0ZXM6IHtcbiAgICBvbmU6IFwibGVzcyB0aGFuIGEgbWludXRlXCIsXG4gICAgb3RoZXI6IFwibGVzcyB0aGFuIHt7Y291bnR9fSBtaW51dGVzXCJcbiAgfSxcbiAgeE1pbnV0ZXM6IHtcbiAgICBvbmU6IFwiMSBtaW51dGVcIixcbiAgICBvdGhlcjogXCJ7e2NvdW50fX0gbWludXRlc1wiXG4gIH0sXG4gIGFib3V0WEhvdXJzOiB7XG4gICAgb25lOiBcImFib3V0IDEgaG91clwiLFxuICAgIG90aGVyOiBcImFib3V0IHt7Y291bnR9fSBob3Vyc1wiXG4gIH0sXG4gIHhIb3Vyczoge1xuICAgIG9uZTogXCIxIGhvdXJcIixcbiAgICBvdGhlcjogXCJ7e2NvdW50fX0gaG91cnNcIlxuICB9LFxuICB4RGF5czoge1xuICAgIG9uZTogXCIxIGRheVwiLFxuICAgIG90aGVyOiBcInt7Y291bnR9fSBkYXlzXCJcbiAgfSxcbiAgYWJvdXRYV2Vla3M6IHtcbiAgICBvbmU6IFwiYWJvdXQgMSB3ZWVrXCIsXG4gICAgb3RoZXI6IFwiYWJvdXQge3tjb3VudH19IHdlZWtzXCJcbiAgfSxcbiAgeFdlZWtzOiB7XG4gICAgb25lOiBcIjEgd2Vla1wiLFxuICAgIG90aGVyOiBcInt7Y291bnR9fSB3ZWVrc1wiXG4gIH0sXG4gIGFib3V0WE1vbnRoczoge1xuICAgIG9uZTogXCJhYm91dCAxIG1vbnRoXCIsXG4gICAgb3RoZXI6IFwiYWJvdXQge3tjb3VudH19IG1vbnRoc1wiXG4gIH0sXG4gIHhNb250aHM6IHtcbiAgICBvbmU6IFwiMSBtb250aFwiLFxuICAgIG90aGVyOiBcInt7Y291bnR9fSBtb250aHNcIlxuICB9LFxuICBhYm91dFhZZWFyczoge1xuICAgIG9uZTogXCJhYm91dCAxIHllYXJcIixcbiAgICBvdGhlcjogXCJhYm91dCB7e2NvdW50fX0geWVhcnNcIlxuICB9LFxuICB4WWVhcnM6IHtcbiAgICBvbmU6IFwiMSB5ZWFyXCIsXG4gICAgb3RoZXI6IFwie3tjb3VudH19IHllYXJzXCJcbiAgfSxcbiAgb3ZlclhZZWFyczoge1xuICAgIG9uZTogXCJvdmVyIDEgeWVhclwiLFxuICAgIG90aGVyOiBcIm92ZXIge3tjb3VudH19IHllYXJzXCJcbiAgfSxcbiAgYWxtb3N0WFllYXJzOiB7XG4gICAgb25lOiBcImFsbW9zdCAxIHllYXJcIixcbiAgICBvdGhlcjogXCJhbG1vc3Qge3tjb3VudH19IHllYXJzXCJcbiAgfVxufTtcbnZhciBmb3JtYXREaXN0YW5jZSA9ICh0b2tlbiwgY291bnQsIG9wdGlvbnMpID0+IHtcbiAgbGV0IHJlc3VsdDtcbiAgY29uc3QgdG9rZW5WYWx1ZSA9IGZvcm1hdERpc3RhbmNlTG9jYWxlW3Rva2VuXTtcbiAgaWYgKHR5cGVvZiB0b2tlblZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmVzdWx0ID0gdG9rZW5WYWx1ZTtcbiAgfSBlbHNlIGlmIChjb3VudCA9PT0gMSkge1xuICAgIHJlc3VsdCA9IHRva2VuVmFsdWUub25lO1xuICB9IGVsc2Uge1xuICAgIHJlc3VsdCA9IHRva2VuVmFsdWUub3RoZXIucmVwbGFjZShcInt7Y291bnR9fVwiLCBjb3VudC50b1N0cmluZygpKTtcbiAgfVxuICBpZiAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5hZGRTdWZmaXgpIHtcbiAgICBpZiAob3B0aW9ucy5jb21wYXJpc29uICYmIG9wdGlvbnMuY29tcGFyaXNvbiA+IDApIHtcbiAgICAgIHJldHVybiBcImluIFwiICsgcmVzdWx0O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gcmVzdWx0ICsgXCIgYWdvXCI7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9fbGliL2J1aWxkRm9ybWF0TG9uZ0ZuLmpzXG5mdW5jdGlvbiBidWlsZEZvcm1hdExvbmdGbihhcmdzKSB7XG4gIHJldHVybiAob3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgY29uc3Qgd2lkdGggPSBvcHRpb25zLndpZHRoID8gU3RyaW5nKG9wdGlvbnMud2lkdGgpIDogYXJncy5kZWZhdWx0V2lkdGg7XG4gICAgY29uc3QgZm9ybWF0MiA9IGFyZ3MuZm9ybWF0c1t3aWR0aF0gfHwgYXJncy5mb3JtYXRzW2FyZ3MuZGVmYXVsdFdpZHRoXTtcbiAgICByZXR1cm4gZm9ybWF0MjtcbiAgfTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvZW4tVVMvX2xpYi9mb3JtYXRMb25nLmpzXG52YXIgZGF0ZUZvcm1hdHMgPSB7XG4gIGZ1bGw6IFwiRUVFRSwgTU1NTSBkbywgeVwiLFxuICBsb25nOiBcIk1NTU0gZG8sIHlcIixcbiAgbWVkaXVtOiBcIk1NTSBkLCB5XCIsXG4gIHNob3J0OiBcIk1NL2RkL3l5eXlcIlxufTtcbnZhciB0aW1lRm9ybWF0cyA9IHtcbiAgZnVsbDogXCJoOm1tOnNzIGEgenp6elwiLFxuICBsb25nOiBcImg6bW06c3MgYSB6XCIsXG4gIG1lZGl1bTogXCJoOm1tOnNzIGFcIixcbiAgc2hvcnQ6IFwiaDptbSBhXCJcbn07XG52YXIgZGF0ZVRpbWVGb3JtYXRzID0ge1xuICBmdWxsOiBcInt7ZGF0ZX19ICdhdCcge3t0aW1lfX1cIixcbiAgbG9uZzogXCJ7e2RhdGV9fSAnYXQnIHt7dGltZX19XCIsXG4gIG1lZGl1bTogXCJ7e2RhdGV9fSwge3t0aW1lfX1cIixcbiAgc2hvcnQ6IFwie3tkYXRlfX0sIHt7dGltZX19XCJcbn07XG52YXIgZm9ybWF0TG9uZyA9IHtcbiAgZGF0ZTogYnVpbGRGb3JtYXRMb25nRm4oe1xuICAgIGZvcm1hdHM6IGRhdGVGb3JtYXRzLFxuICAgIGRlZmF1bHRXaWR0aDogXCJmdWxsXCJcbiAgfSksXG4gIHRpbWU6IGJ1aWxkRm9ybWF0TG9uZ0ZuKHtcbiAgICBmb3JtYXRzOiB0aW1lRm9ybWF0cyxcbiAgICBkZWZhdWx0V2lkdGg6IFwiZnVsbFwiXG4gIH0pLFxuICBkYXRlVGltZTogYnVpbGRGb3JtYXRMb25nRm4oe1xuICAgIGZvcm1hdHM6IGRhdGVUaW1lRm9ybWF0cyxcbiAgICBkZWZhdWx0V2lkdGg6IFwiZnVsbFwiXG4gIH0pXG59O1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9lbi1VUy9fbGliL2Zvcm1hdFJlbGF0aXZlLmpzXG52YXIgZm9ybWF0UmVsYXRpdmVMb2NhbGUgPSB7XG4gIGxhc3RXZWVrOiBcIidsYXN0JyBlZWVlICdhdCcgcFwiLFxuICB5ZXN0ZXJkYXk6IFwiJ3llc3RlcmRheSBhdCcgcFwiLFxuICB0b2RheTogXCIndG9kYXkgYXQnIHBcIixcbiAgdG9tb3Jyb3c6IFwiJ3RvbW9ycm93IGF0JyBwXCIsXG4gIG5leHRXZWVrOiBcImVlZWUgJ2F0JyBwXCIsXG4gIG90aGVyOiBcIlBcIlxufTtcbnZhciBmb3JtYXRSZWxhdGl2ZSA9ICh0b2tlbiwgX2RhdGUsIF9iYXNlRGF0ZSwgX29wdGlvbnMpID0+IGZvcm1hdFJlbGF0aXZlTG9jYWxlW3Rva2VuXTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvX2xpYi9idWlsZExvY2FsaXplRm4uanNcbmZ1bmN0aW9uIGJ1aWxkTG9jYWxpemVGbihhcmdzKSB7XG4gIHJldHVybiAodmFsdWUsIG9wdGlvbnMpID0+IHtcbiAgICBjb25zdCBjb250ZXh0ID0gKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuY29udGV4dCkgPyBTdHJpbmcob3B0aW9ucy5jb250ZXh0KSA6IFwic3RhbmRhbG9uZVwiO1xuICAgIGxldCB2YWx1ZXNBcnJheTtcbiAgICBpZiAoY29udGV4dCA9PT0gXCJmb3JtYXR0aW5nXCIgJiYgYXJncy5mb3JtYXR0aW5nVmFsdWVzKSB7XG4gICAgICBjb25zdCBkZWZhdWx0V2lkdGggPSBhcmdzLmRlZmF1bHRGb3JtYXR0aW5nV2lkdGggfHwgYXJncy5kZWZhdWx0V2lkdGg7XG4gICAgICBjb25zdCB3aWR0aCA9IChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLndpZHRoKSA/IFN0cmluZyhvcHRpb25zLndpZHRoKSA6IGRlZmF1bHRXaWR0aDtcbiAgICAgIHZhbHVlc0FycmF5ID0gYXJncy5mb3JtYXR0aW5nVmFsdWVzW3dpZHRoXSB8fCBhcmdzLmZvcm1hdHRpbmdWYWx1ZXNbZGVmYXVsdFdpZHRoXTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgZGVmYXVsdFdpZHRoID0gYXJncy5kZWZhdWx0V2lkdGg7XG4gICAgICBjb25zdCB3aWR0aCA9IChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLndpZHRoKSA/IFN0cmluZyhvcHRpb25zLndpZHRoKSA6IGFyZ3MuZGVmYXVsdFdpZHRoO1xuICAgICAgdmFsdWVzQXJyYXkgPSBhcmdzLnZhbHVlc1t3aWR0aF0gfHwgYXJncy52YWx1ZXNbZGVmYXVsdFdpZHRoXTtcbiAgICB9XG4gICAgY29uc3QgaW5kZXggPSBhcmdzLmFyZ3VtZW50Q2FsbGJhY2sgPyBhcmdzLmFyZ3VtZW50Q2FsbGJhY2sodmFsdWUpIDogdmFsdWU7XG4gICAgcmV0dXJuIHZhbHVlc0FycmF5W2luZGV4XTtcbiAgfTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvZW4tVVMvX2xpYi9sb2NhbGl6ZS5qc1xudmFyIGVyYVZhbHVlcyA9IHtcbiAgbmFycm93OiBbXCJCXCIsIFwiQVwiXSxcbiAgYWJicmV2aWF0ZWQ6IFtcIkJDXCIsIFwiQURcIl0sXG4gIHdpZGU6IFtcIkJlZm9yZSBDaHJpc3RcIiwgXCJBbm5vIERvbWluaVwiXVxufTtcbnZhciBxdWFydGVyVmFsdWVzID0ge1xuICBuYXJyb3c6IFtcIjFcIiwgXCIyXCIsIFwiM1wiLCBcIjRcIl0sXG4gIGFiYnJldmlhdGVkOiBbXCJRMVwiLCBcIlEyXCIsIFwiUTNcIiwgXCJRNFwiXSxcbiAgd2lkZTogW1wiMXN0IHF1YXJ0ZXJcIiwgXCIybmQgcXVhcnRlclwiLCBcIjNyZCBxdWFydGVyXCIsIFwiNHRoIHF1YXJ0ZXJcIl1cbn07XG52YXIgbW9udGhWYWx1ZXMgPSB7XG4gIG5hcnJvdzogW1wiSlwiLCBcIkZcIiwgXCJNXCIsIFwiQVwiLCBcIk1cIiwgXCJKXCIsIFwiSlwiLCBcIkFcIiwgXCJTXCIsIFwiT1wiLCBcIk5cIiwgXCJEXCJdLFxuICBhYmJyZXZpYXRlZDogW1xuICAgIFwiSmFuXCIsXG4gICAgXCJGZWJcIixcbiAgICBcIk1hclwiLFxuICAgIFwiQXByXCIsXG4gICAgXCJNYXlcIixcbiAgICBcIkp1blwiLFxuICAgIFwiSnVsXCIsXG4gICAgXCJBdWdcIixcbiAgICBcIlNlcFwiLFxuICAgIFwiT2N0XCIsXG4gICAgXCJOb3ZcIixcbiAgICBcIkRlY1wiXG4gIF0sXG4gIHdpZGU6IFtcbiAgICBcIkphbnVhcnlcIixcbiAgICBcIkZlYnJ1YXJ5XCIsXG4gICAgXCJNYXJjaFwiLFxuICAgIFwiQXByaWxcIixcbiAgICBcIk1heVwiLFxuICAgIFwiSnVuZVwiLFxuICAgIFwiSnVseVwiLFxuICAgIFwiQXVndXN0XCIsXG4gICAgXCJTZXB0ZW1iZXJcIixcbiAgICBcIk9jdG9iZXJcIixcbiAgICBcIk5vdmVtYmVyXCIsXG4gICAgXCJEZWNlbWJlclwiXG4gIF1cbn07XG52YXIgZGF5VmFsdWVzID0ge1xuICBuYXJyb3c6IFtcIlNcIiwgXCJNXCIsIFwiVFwiLCBcIldcIiwgXCJUXCIsIFwiRlwiLCBcIlNcIl0sXG4gIHNob3J0OiBbXCJTdVwiLCBcIk1vXCIsIFwiVHVcIiwgXCJXZVwiLCBcIlRoXCIsIFwiRnJcIiwgXCJTYVwiXSxcbiAgYWJicmV2aWF0ZWQ6IFtcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiLCBcIkZyaVwiLCBcIlNhdFwiXSxcbiAgd2lkZTogW1xuICAgIFwiU3VuZGF5XCIsXG4gICAgXCJNb25kYXlcIixcbiAgICBcIlR1ZXNkYXlcIixcbiAgICBcIldlZG5lc2RheVwiLFxuICAgIFwiVGh1cnNkYXlcIixcbiAgICBcIkZyaWRheVwiLFxuICAgIFwiU2F0dXJkYXlcIlxuICBdXG59O1xudmFyIGRheVBlcmlvZFZhbHVlcyA9IHtcbiAgbmFycm93OiB7XG4gICAgYW06IFwiYVwiLFxuICAgIHBtOiBcInBcIixcbiAgICBtaWRuaWdodDogXCJtaVwiLFxuICAgIG5vb246IFwiblwiLFxuICAgIG1vcm5pbmc6IFwibW9ybmluZ1wiLFxuICAgIGFmdGVybm9vbjogXCJhZnRlcm5vb25cIixcbiAgICBldmVuaW5nOiBcImV2ZW5pbmdcIixcbiAgICBuaWdodDogXCJuaWdodFwiXG4gIH0sXG4gIGFiYnJldmlhdGVkOiB7XG4gICAgYW06IFwiQU1cIixcbiAgICBwbTogXCJQTVwiLFxuICAgIG1pZG5pZ2h0OiBcIm1pZG5pZ2h0XCIsXG4gICAgbm9vbjogXCJub29uXCIsXG4gICAgbW9ybmluZzogXCJtb3JuaW5nXCIsXG4gICAgYWZ0ZXJub29uOiBcImFmdGVybm9vblwiLFxuICAgIGV2ZW5pbmc6IFwiZXZlbmluZ1wiLFxuICAgIG5pZ2h0OiBcIm5pZ2h0XCJcbiAgfSxcbiAgd2lkZToge1xuICAgIGFtOiBcImEubS5cIixcbiAgICBwbTogXCJwLm0uXCIsXG4gICAgbWlkbmlnaHQ6IFwibWlkbmlnaHRcIixcbiAgICBub29uOiBcIm5vb25cIixcbiAgICBtb3JuaW5nOiBcIm1vcm5pbmdcIixcbiAgICBhZnRlcm5vb246IFwiYWZ0ZXJub29uXCIsXG4gICAgZXZlbmluZzogXCJldmVuaW5nXCIsXG4gICAgbmlnaHQ6IFwibmlnaHRcIlxuICB9XG59O1xudmFyIGZvcm1hdHRpbmdEYXlQZXJpb2RWYWx1ZXMgPSB7XG4gIG5hcnJvdzoge1xuICAgIGFtOiBcImFcIixcbiAgICBwbTogXCJwXCIsXG4gICAgbWlkbmlnaHQ6IFwibWlcIixcbiAgICBub29uOiBcIm5cIixcbiAgICBtb3JuaW5nOiBcImluIHRoZSBtb3JuaW5nXCIsXG4gICAgYWZ0ZXJub29uOiBcImluIHRoZSBhZnRlcm5vb25cIixcbiAgICBldmVuaW5nOiBcImluIHRoZSBldmVuaW5nXCIsXG4gICAgbmlnaHQ6IFwiYXQgbmlnaHRcIlxuICB9LFxuICBhYmJyZXZpYXRlZDoge1xuICAgIGFtOiBcIkFNXCIsXG4gICAgcG06IFwiUE1cIixcbiAgICBtaWRuaWdodDogXCJtaWRuaWdodFwiLFxuICAgIG5vb246IFwibm9vblwiLFxuICAgIG1vcm5pbmc6IFwiaW4gdGhlIG1vcm5pbmdcIixcbiAgICBhZnRlcm5vb246IFwiaW4gdGhlIGFmdGVybm9vblwiLFxuICAgIGV2ZW5pbmc6IFwiaW4gdGhlIGV2ZW5pbmdcIixcbiAgICBuaWdodDogXCJhdCBuaWdodFwiXG4gIH0sXG4gIHdpZGU6IHtcbiAgICBhbTogXCJhLm0uXCIsXG4gICAgcG06IFwicC5tLlwiLFxuICAgIG1pZG5pZ2h0OiBcIm1pZG5pZ2h0XCIsXG4gICAgbm9vbjogXCJub29uXCIsXG4gICAgbW9ybmluZzogXCJpbiB0aGUgbW9ybmluZ1wiLFxuICAgIGFmdGVybm9vbjogXCJpbiB0aGUgYWZ0ZXJub29uXCIsXG4gICAgZXZlbmluZzogXCJpbiB0aGUgZXZlbmluZ1wiLFxuICAgIG5pZ2h0OiBcImF0IG5pZ2h0XCJcbiAgfVxufTtcbnZhciBvcmRpbmFsTnVtYmVyID0gKGRpcnR5TnVtYmVyLCBfb3B0aW9ucykgPT4ge1xuICBjb25zdCBudW1iZXIgPSBOdW1iZXIoZGlydHlOdW1iZXIpO1xuICBjb25zdCByZW0xMDAgPSBudW1iZXIgJSAxMDA7XG4gIGlmIChyZW0xMDAgPiAyMCB8fCByZW0xMDAgPCAxMCkge1xuICAgIHN3aXRjaCAocmVtMTAwICUgMTApIHtcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgcmV0dXJuIG51bWJlciArIFwic3RcIjtcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgcmV0dXJuIG51bWJlciArIFwibmRcIjtcbiAgICAgIGNhc2UgMzpcbiAgICAgICAgcmV0dXJuIG51bWJlciArIFwicmRcIjtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG51bWJlciArIFwidGhcIjtcbn07XG52YXIgbG9jYWxpemUgPSB7XG4gIG9yZGluYWxOdW1iZXIsXG4gIGVyYTogYnVpbGRMb2NhbGl6ZUZuKHtcbiAgICB2YWx1ZXM6IGVyYVZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6IFwid2lkZVwiXG4gIH0pLFxuICBxdWFydGVyOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogcXVhcnRlclZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6IFwid2lkZVwiLFxuICAgIGFyZ3VtZW50Q2FsbGJhY2s6IChxdWFydGVyKSA9PiBxdWFydGVyIC0gMVxuICB9KSxcbiAgbW9udGg6IGJ1aWxkTG9jYWxpemVGbih7XG4gICAgdmFsdWVzOiBtb250aFZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6IFwid2lkZVwiXG4gIH0pLFxuICBkYXk6IGJ1aWxkTG9jYWxpemVGbih7XG4gICAgdmFsdWVzOiBkYXlWYWx1ZXMsXG4gICAgZGVmYXVsdFdpZHRoOiBcIndpZGVcIlxuICB9KSxcbiAgZGF5UGVyaW9kOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogZGF5UGVyaW9kVmFsdWVzLFxuICAgIGRlZmF1bHRXaWR0aDogXCJ3aWRlXCIsXG4gICAgZm9ybWF0dGluZ1ZhbHVlczogZm9ybWF0dGluZ0RheVBlcmlvZFZhbHVlcyxcbiAgICBkZWZhdWx0Rm9ybWF0dGluZ1dpZHRoOiBcIndpZGVcIlxuICB9KVxufTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvX2xpYi9idWlsZE1hdGNoRm4uanNcbmZ1bmN0aW9uIGJ1aWxkTWF0Y2hGbihhcmdzKSB7XG4gIHJldHVybiAoc3RyaW5nLCBvcHRpb25zID0ge30pID0+IHtcbiAgICBjb25zdCB3aWR0aCA9IG9wdGlvbnMud2lkdGg7XG4gICAgY29uc3QgbWF0Y2hQYXR0ZXJuID0gd2lkdGggJiYgYXJncy5tYXRjaFBhdHRlcm5zW3dpZHRoXSB8fCBhcmdzLm1hdGNoUGF0dGVybnNbYXJncy5kZWZhdWx0TWF0Y2hXaWR0aF07XG4gICAgY29uc3QgbWF0Y2hSZXN1bHQgPSBzdHJpbmcubWF0Y2gobWF0Y2hQYXR0ZXJuKTtcbiAgICBpZiAoIW1hdGNoUmVzdWx0KSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgbWF0Y2hlZFN0cmluZyA9IG1hdGNoUmVzdWx0WzBdO1xuICAgIGNvbnN0IHBhcnNlUGF0dGVybnMgPSB3aWR0aCAmJiBhcmdzLnBhcnNlUGF0dGVybnNbd2lkdGhdIHx8IGFyZ3MucGFyc2VQYXR0ZXJuc1thcmdzLmRlZmF1bHRQYXJzZVdpZHRoXTtcbiAgICBjb25zdCBrZXkgPSBBcnJheS5pc0FycmF5KHBhcnNlUGF0dGVybnMpID8gZmluZEluZGV4KHBhcnNlUGF0dGVybnMsIChwYXR0ZXJuKSA9PiBwYXR0ZXJuLnRlc3QobWF0Y2hlZFN0cmluZykpIDogKFxuICAgICAgLy8gW1RPRE9dIC0tIEkgY2hhbGxlbmdlIHlvdSB0byBmaXggdGhlIHR5cGVcbiAgICAgIGZpbmRLZXkocGFyc2VQYXR0ZXJucywgKHBhdHRlcm4pID0+IHBhdHRlcm4udGVzdChtYXRjaGVkU3RyaW5nKSlcbiAgICApO1xuICAgIGxldCB2YWx1ZTtcbiAgICB2YWx1ZSA9IGFyZ3MudmFsdWVDYWxsYmFjayA/IGFyZ3MudmFsdWVDYWxsYmFjayhrZXkpIDoga2V5O1xuICAgIHZhbHVlID0gb3B0aW9ucy52YWx1ZUNhbGxiYWNrID8gKFxuICAgICAgLy8gW1RPRE9dIC0tIEkgY2hhbGxlbmdlIHlvdSB0byBmaXggdGhlIHR5cGVcbiAgICAgIG9wdGlvbnMudmFsdWVDYWxsYmFjayh2YWx1ZSlcbiAgICApIDogdmFsdWU7XG4gICAgY29uc3QgcmVzdCA9IHN0cmluZy5zbGljZShtYXRjaGVkU3RyaW5nLmxlbmd0aCk7XG4gICAgcmV0dXJuIHsgdmFsdWUsIHJlc3QgfTtcbiAgfTtcbn1cbmZ1bmN0aW9uIGZpbmRLZXkob2JqZWN0LCBwcmVkaWNhdGUpIHtcbiAgZm9yIChjb25zdCBrZXkgaW4gb2JqZWN0KSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSkgJiYgcHJlZGljYXRlKG9iamVjdFtrZXldKSkge1xuICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZvaWQgMDtcbn1cbmZ1bmN0aW9uIGZpbmRJbmRleChhcnJheSwgcHJlZGljYXRlKSB7XG4gIGZvciAobGV0IGtleSA9IDA7IGtleSA8IGFycmF5Lmxlbmd0aDsga2V5KyspIHtcbiAgICBpZiAocHJlZGljYXRlKGFycmF5W2tleV0pKSB7XG4gICAgICByZXR1cm4ga2V5O1xuICAgIH1cbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9fbGliL2J1aWxkTWF0Y2hQYXR0ZXJuRm4uanNcbmZ1bmN0aW9uIGJ1aWxkTWF0Y2hQYXR0ZXJuRm4oYXJncykge1xuICByZXR1cm4gKHN0cmluZywgb3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgY29uc3QgbWF0Y2hSZXN1bHQgPSBzdHJpbmcubWF0Y2goYXJncy5tYXRjaFBhdHRlcm4pO1xuICAgIGlmICghbWF0Y2hSZXN1bHQpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IG1hdGNoZWRTdHJpbmcgPSBtYXRjaFJlc3VsdFswXTtcbiAgICBjb25zdCBwYXJzZVJlc3VsdCA9IHN0cmluZy5tYXRjaChhcmdzLnBhcnNlUGF0dGVybik7XG4gICAgaWYgKCFwYXJzZVJlc3VsdCkgcmV0dXJuIG51bGw7XG4gICAgbGV0IHZhbHVlID0gYXJncy52YWx1ZUNhbGxiYWNrID8gYXJncy52YWx1ZUNhbGxiYWNrKHBhcnNlUmVzdWx0WzBdKSA6IHBhcnNlUmVzdWx0WzBdO1xuICAgIHZhbHVlID0gb3B0aW9ucy52YWx1ZUNhbGxiYWNrID8gb3B0aW9ucy52YWx1ZUNhbGxiYWNrKHZhbHVlKSA6IHZhbHVlO1xuICAgIGNvbnN0IHJlc3QgPSBzdHJpbmcuc2xpY2UobWF0Y2hlZFN0cmluZy5sZW5ndGgpO1xuICAgIHJldHVybiB7IHZhbHVlLCByZXN0IH07XG4gIH07XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL2VuLVVTL19saWIvbWF0Y2guanNcbnZhciBtYXRjaE9yZGluYWxOdW1iZXJQYXR0ZXJuID0gL14oXFxkKykodGh8c3R8bmR8cmQpPy9pO1xudmFyIHBhcnNlT3JkaW5hbE51bWJlclBhdHRlcm4gPSAvXFxkKy9pO1xudmFyIG1hdGNoRXJhUGF0dGVybnMgPSB7XG4gIG5hcnJvdzogL14oYnxhKS9pLFxuICBhYmJyZXZpYXRlZDogL14oYlxcLj9cXHM/Y1xcLj98YlxcLj9cXHM/Y1xcLj9cXHM/ZVxcLj98YVxcLj9cXHM/ZFxcLj98Y1xcLj9cXHM/ZVxcLj8pL2ksXG4gIHdpZGU6IC9eKGJlZm9yZSBjaHJpc3R8YmVmb3JlIGNvbW1vbiBlcmF8YW5ubyBkb21pbml8Y29tbW9uIGVyYSkvaVxufTtcbnZhciBwYXJzZUVyYVBhdHRlcm5zID0ge1xuICBhbnk6IFsvXmIvaSwgL14oYXxjKS9pXVxufTtcbnZhciBtYXRjaFF1YXJ0ZXJQYXR0ZXJucyA9IHtcbiAgbmFycm93OiAvXlsxMjM0XS9pLFxuICBhYmJyZXZpYXRlZDogL15xWzEyMzRdL2ksXG4gIHdpZGU6IC9eWzEyMzRdKHRofHN0fG5kfHJkKT8gcXVhcnRlci9pXG59O1xudmFyIHBhcnNlUXVhcnRlclBhdHRlcm5zID0ge1xuICBhbnk6IFsvMS9pLCAvMi9pLCAvMy9pLCAvNC9pXVxufTtcbnZhciBtYXRjaE1vbnRoUGF0dGVybnMgPSB7XG4gIG5hcnJvdzogL15bamZtYXNvbmRdL2ksXG4gIGFiYnJldmlhdGVkOiAvXihqYW58ZmVifG1hcnxhcHJ8bWF5fGp1bnxqdWx8YXVnfHNlcHxvY3R8bm92fGRlYykvaSxcbiAgd2lkZTogL14oamFudWFyeXxmZWJydWFyeXxtYXJjaHxhcHJpbHxtYXl8anVuZXxqdWx5fGF1Z3VzdHxzZXB0ZW1iZXJ8b2N0b2Jlcnxub3ZlbWJlcnxkZWNlbWJlcikvaVxufTtcbnZhciBwYXJzZU1vbnRoUGF0dGVybnMgPSB7XG4gIG5hcnJvdzogW1xuICAgIC9eai9pLFxuICAgIC9eZi9pLFxuICAgIC9ebS9pLFxuICAgIC9eYS9pLFxuICAgIC9ebS9pLFxuICAgIC9eai9pLFxuICAgIC9eai9pLFxuICAgIC9eYS9pLFxuICAgIC9ecy9pLFxuICAgIC9eby9pLFxuICAgIC9ebi9pLFxuICAgIC9eZC9pXG4gIF0sXG4gIGFueTogW1xuICAgIC9eamEvaSxcbiAgICAvXmYvaSxcbiAgICAvXm1hci9pLFxuICAgIC9eYXAvaSxcbiAgICAvXm1heS9pLFxuICAgIC9eanVuL2ksXG4gICAgL15qdWwvaSxcbiAgICAvXmF1L2ksXG4gICAgL15zL2ksXG4gICAgL15vL2ksXG4gICAgL15uL2ksXG4gICAgL15kL2lcbiAgXVxufTtcbnZhciBtYXRjaERheVBhdHRlcm5zID0ge1xuICBuYXJyb3c6IC9eW3NtdHdmXS9pLFxuICBzaG9ydDogL14oc3V8bW98dHV8d2V8dGh8ZnJ8c2EpL2ksXG4gIGFiYnJldmlhdGVkOiAvXihzdW58bW9ufHR1ZXx3ZWR8dGh1fGZyaXxzYXQpL2ksXG4gIHdpZGU6IC9eKHN1bmRheXxtb25kYXl8dHVlc2RheXx3ZWRuZXNkYXl8dGh1cnNkYXl8ZnJpZGF5fHNhdHVyZGF5KS9pXG59O1xudmFyIHBhcnNlRGF5UGF0dGVybnMgPSB7XG4gIG5hcnJvdzogWy9ecy9pLCAvXm0vaSwgL150L2ksIC9edy9pLCAvXnQvaSwgL15mL2ksIC9ecy9pXSxcbiAgYW55OiBbL15zdS9pLCAvXm0vaSwgL150dS9pLCAvXncvaSwgL150aC9pLCAvXmYvaSwgL15zYS9pXVxufTtcbnZhciBtYXRjaERheVBlcmlvZFBhdHRlcm5zID0ge1xuICBuYXJyb3c6IC9eKGF8cHxtaXxufChpbiB0aGV8YXQpIChtb3JuaW5nfGFmdGVybm9vbnxldmVuaW5nfG5pZ2h0KSkvaSxcbiAgYW55OiAvXihbYXBdXFwuP1xccz9tXFwuP3xtaWRuaWdodHxub29ufChpbiB0aGV8YXQpIChtb3JuaW5nfGFmdGVybm9vbnxldmVuaW5nfG5pZ2h0KSkvaVxufTtcbnZhciBwYXJzZURheVBlcmlvZFBhdHRlcm5zID0ge1xuICBhbnk6IHtcbiAgICBhbTogL15hL2ksXG4gICAgcG06IC9ecC9pLFxuICAgIG1pZG5pZ2h0OiAvXm1pL2ksXG4gICAgbm9vbjogL15uby9pLFxuICAgIG1vcm5pbmc6IC9tb3JuaW5nL2ksXG4gICAgYWZ0ZXJub29uOiAvYWZ0ZXJub29uL2ksXG4gICAgZXZlbmluZzogL2V2ZW5pbmcvaSxcbiAgICBuaWdodDogL25pZ2h0L2lcbiAgfVxufTtcbnZhciBtYXRjaCA9IHtcbiAgb3JkaW5hbE51bWJlcjogYnVpbGRNYXRjaFBhdHRlcm5Gbih7XG4gICAgbWF0Y2hQYXR0ZXJuOiBtYXRjaE9yZGluYWxOdW1iZXJQYXR0ZXJuLFxuICAgIHBhcnNlUGF0dGVybjogcGFyc2VPcmRpbmFsTnVtYmVyUGF0dGVybixcbiAgICB2YWx1ZUNhbGxiYWNrOiAodmFsdWUpID0+IHBhcnNlSW50KHZhbHVlLCAxMClcbiAgfSksXG4gIGVyYTogYnVpbGRNYXRjaEZuKHtcbiAgICBtYXRjaFBhdHRlcm5zOiBtYXRjaEVyYVBhdHRlcm5zLFxuICAgIGRlZmF1bHRNYXRjaFdpZHRoOiBcIndpZGVcIixcbiAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZUVyYVBhdHRlcm5zLFxuICAgIGRlZmF1bHRQYXJzZVdpZHRoOiBcImFueVwiXG4gIH0pLFxuICBxdWFydGVyOiBidWlsZE1hdGNoRm4oe1xuICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoUXVhcnRlclBhdHRlcm5zLFxuICAgIGRlZmF1bHRNYXRjaFdpZHRoOiBcIndpZGVcIixcbiAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZVF1YXJ0ZXJQYXR0ZXJucyxcbiAgICBkZWZhdWx0UGFyc2VXaWR0aDogXCJhbnlcIixcbiAgICB2YWx1ZUNhbGxiYWNrOiAoaW5kZXgpID0+IGluZGV4ICsgMVxuICB9KSxcbiAgbW9udGg6IGJ1aWxkTWF0Y2hGbih7XG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hNb250aFBhdHRlcm5zLFxuICAgIGRlZmF1bHRNYXRjaFdpZHRoOiBcIndpZGVcIixcbiAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZU1vbnRoUGF0dGVybnMsXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6IFwiYW55XCJcbiAgfSksXG4gIGRheTogYnVpbGRNYXRjaEZuKHtcbiAgICBtYXRjaFBhdHRlcm5zOiBtYXRjaERheVBhdHRlcm5zLFxuICAgIGRlZmF1bHRNYXRjaFdpZHRoOiBcIndpZGVcIixcbiAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZURheVBhdHRlcm5zLFxuICAgIGRlZmF1bHRQYXJzZVdpZHRoOiBcImFueVwiXG4gIH0pLFxuICBkYXlQZXJpb2Q6IGJ1aWxkTWF0Y2hGbih7XG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hEYXlQZXJpb2RQYXR0ZXJucyxcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogXCJhbnlcIixcbiAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZURheVBlcmlvZFBhdHRlcm5zLFxuICAgIGRlZmF1bHRQYXJzZVdpZHRoOiBcImFueVwiXG4gIH0pXG59O1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9lbi1VUy5qc1xudmFyIGVuVVMgPSB7XG4gIGNvZGU6IFwiZW4tVVNcIixcbiAgZm9ybWF0RGlzdGFuY2UsXG4gIGZvcm1hdExvbmcsXG4gIGZvcm1hdFJlbGF0aXZlLFxuICBsb2NhbGl6ZSxcbiAgbWF0Y2gsXG4gIG9wdGlvbnM6IHtcbiAgICB3ZWVrU3RhcnRzT246IDAsXG4gICAgZmlyc3RXZWVrQ29udGFpbnNEYXRlOiAxXG4gIH1cbn07XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9kZWZhdWx0T3B0aW9ucy5qc1xudmFyIGRlZmF1bHRPcHRpb25zID0ge307XG5mdW5jdGlvbiBnZXREZWZhdWx0T3B0aW9ucygpIHtcbiAgcmV0dXJuIGRlZmF1bHRPcHRpb25zO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2NvbnN0YW50cy5qc1xudmFyIGRheXNJblllYXIgPSAzNjUuMjQyNTtcbnZhciBtYXhUaW1lID0gTWF0aC5wb3coMTAsIDgpICogMjQgKiA2MCAqIDYwICogMWUzO1xudmFyIG1pblRpbWUgPSAtbWF4VGltZTtcbnZhciBtaWxsaXNlY29uZHNJbldlZWsgPSA2MDQ4ZTU7XG52YXIgbWlsbGlzZWNvbmRzSW5EYXkgPSA4NjRlNTtcbnZhciBtaWxsaXNlY29uZHNJbk1pbnV0ZSA9IDZlNDtcbnZhciBtaWxsaXNlY29uZHNJbkhvdXIgPSAzNmU1O1xudmFyIHNlY29uZHNJbkhvdXIgPSAzNjAwO1xudmFyIHNlY29uZHNJbkRheSA9IHNlY29uZHNJbkhvdXIgKiAyNDtcbnZhciBzZWNvbmRzSW5XZWVrID0gc2Vjb25kc0luRGF5ICogNztcbnZhciBzZWNvbmRzSW5ZZWFyID0gc2Vjb25kc0luRGF5ICogZGF5c0luWWVhcjtcbnZhciBzZWNvbmRzSW5Nb250aCA9IHNlY29uZHNJblllYXIgLyAxMjtcbnZhciBzZWNvbmRzSW5RdWFydGVyID0gc2Vjb25kc0luTW9udGggKiAzO1xudmFyIGNvbnN0cnVjdEZyb21TeW1ib2wgPSBTeW1ib2wuZm9yKFwiY29uc3RydWN0RGF0ZUZyb21cIik7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvY29uc3RydWN0RnJvbS5qc1xuZnVuY3Rpb24gY29uc3RydWN0RnJvbShkYXRlLCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIGRhdGUgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIGRhdGUodmFsdWUpO1xuICBpZiAoZGF0ZSAmJiB0eXBlb2YgZGF0ZSA9PT0gXCJvYmplY3RcIiAmJiBjb25zdHJ1Y3RGcm9tU3ltYm9sIGluIGRhdGUpXG4gICAgcmV0dXJuIGRhdGVbY29uc3RydWN0RnJvbVN5bWJvbF0odmFsdWUpO1xuICBpZiAoZGF0ZSBpbnN0YW5jZW9mIERhdGUpIHJldHVybiBuZXcgZGF0ZS5jb25zdHJ1Y3Rvcih2YWx1ZSk7XG4gIHJldHVybiBuZXcgRGF0ZSh2YWx1ZSk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvdG9EYXRlLmpzXG5mdW5jdGlvbiB0b0RhdGUoYXJndW1lbnQsIGNvbnRleHQpIHtcbiAgcmV0dXJuIGNvbnN0cnVjdEZyb20oY29udGV4dCB8fCBhcmd1bWVudCwgYXJndW1lbnQpO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcy5qc1xuZnVuY3Rpb24gZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyhkYXRlKSB7XG4gIGNvbnN0IF9kYXRlID0gdG9EYXRlKGRhdGUpO1xuICBjb25zdCB1dGNEYXRlID0gbmV3IERhdGUoXG4gICAgRGF0ZS5VVEMoXG4gICAgICBfZGF0ZS5nZXRGdWxsWWVhcigpLFxuICAgICAgX2RhdGUuZ2V0TW9udGgoKSxcbiAgICAgIF9kYXRlLmdldERhdGUoKSxcbiAgICAgIF9kYXRlLmdldEhvdXJzKCksXG4gICAgICBfZGF0ZS5nZXRNaW51dGVzKCksXG4gICAgICBfZGF0ZS5nZXRTZWNvbmRzKCksXG4gICAgICBfZGF0ZS5nZXRNaWxsaXNlY29uZHMoKVxuICAgIClcbiAgKTtcbiAgdXRjRGF0ZS5zZXRVVENGdWxsWWVhcihfZGF0ZS5nZXRGdWxsWWVhcigpKTtcbiAgcmV0dXJuICtkYXRlIC0gK3V0Y0RhdGU7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9ub3JtYWxpemVEYXRlcy5qc1xuZnVuY3Rpb24gbm9ybWFsaXplRGF0ZXMoY29udGV4dCwgLi4uZGF0ZXMpIHtcbiAgY29uc3Qgbm9ybWFsaXplID0gY29uc3RydWN0RnJvbS5iaW5kKFxuICAgIG51bGwsXG4gICAgY29udGV4dCB8fCBkYXRlcy5maW5kKChkYXRlKSA9PiB0eXBlb2YgZGF0ZSA9PT0gXCJvYmplY3RcIilcbiAgKTtcbiAgcmV0dXJuIGRhdGVzLm1hcChub3JtYWxpemUpO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL3N0YXJ0T2ZEYXkuanNcbmZ1bmN0aW9uIHN0YXJ0T2ZEYXkoZGF0ZSwgb3B0aW9ucykge1xuICBjb25zdCBfZGF0ZSA9IHRvRGF0ZShkYXRlLCBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKTtcbiAgX2RhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gIHJldHVybiBfZGF0ZTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9kaWZmZXJlbmNlSW5DYWxlbmRhckRheXMuanNcbmZ1bmN0aW9uIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhsYXRlckRhdGUsIGVhcmxpZXJEYXRlLCBvcHRpb25zKSB7XG4gIGNvbnN0IFtsYXRlckRhdGVfLCBlYXJsaWVyRGF0ZV9dID0gbm9ybWFsaXplRGF0ZXMoXG4gICAgb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5pbixcbiAgICBsYXRlckRhdGUsXG4gICAgZWFybGllckRhdGVcbiAgKTtcbiAgY29uc3QgbGF0ZXJTdGFydE9mRGF5ID0gc3RhcnRPZkRheShsYXRlckRhdGVfKTtcbiAgY29uc3QgZWFybGllclN0YXJ0T2ZEYXkgPSBzdGFydE9mRGF5KGVhcmxpZXJEYXRlXyk7XG4gIGNvbnN0IGxhdGVyVGltZXN0YW1wID0gK2xhdGVyU3RhcnRPZkRheSAtIGdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMobGF0ZXJTdGFydE9mRGF5KTtcbiAgY29uc3QgZWFybGllclRpbWVzdGFtcCA9ICtlYXJsaWVyU3RhcnRPZkRheSAtIGdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMoZWFybGllclN0YXJ0T2ZEYXkpO1xuICByZXR1cm4gTWF0aC5yb3VuZCgobGF0ZXJUaW1lc3RhbXAgLSBlYXJsaWVyVGltZXN0YW1wKSAvIG1pbGxpc2Vjb25kc0luRGF5KTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9zdGFydE9mWWVhci5qc1xuZnVuY3Rpb24gc3RhcnRPZlllYXIoZGF0ZSwgb3B0aW9ucykge1xuICBjb25zdCBkYXRlXyA9IHRvRGF0ZShkYXRlLCBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKTtcbiAgZGF0ZV8uc2V0RnVsbFllYXIoZGF0ZV8uZ2V0RnVsbFllYXIoKSwgMCwgMSk7XG4gIGRhdGVfLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICByZXR1cm4gZGF0ZV87XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZ2V0RGF5T2ZZZWFyLmpzXG5mdW5jdGlvbiBnZXREYXlPZlllYXIoZGF0ZSwgb3B0aW9ucykge1xuICBjb25zdCBfZGF0ZSA9IHRvRGF0ZShkYXRlLCBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKTtcbiAgY29uc3QgZGlmZiA9IGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhfZGF0ZSwgc3RhcnRPZlllYXIoX2RhdGUpKTtcbiAgY29uc3QgZGF5T2ZZZWFyID0gZGlmZiArIDE7XG4gIHJldHVybiBkYXlPZlllYXI7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3RhcnRPZldlZWsuanNcbmZ1bmN0aW9uIHN0YXJ0T2ZXZWVrKGRhdGUsIG9wdGlvbnMpIHtcbiAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nLCBfaDtcbiAgY29uc3QgZGVmYXVsdE9wdGlvbnMyID0gZ2V0RGVmYXVsdE9wdGlvbnMoKTtcbiAgY29uc3Qgd2Vla1N0YXJ0c09uID0gKF9oID0gKF9nID0gKF9kID0gKF9jID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy53ZWVrU3RhcnRzT24pICE9IG51bGwgPyBfYyA6IChfYiA9IChfYSA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubG9jYWxlKSA9PSBudWxsID8gdm9pZCAwIDogX2Eub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLndlZWtTdGFydHNPbikgIT0gbnVsbCA/IF9kIDogZGVmYXVsdE9wdGlvbnMyLndlZWtTdGFydHNPbikgIT0gbnVsbCA/IF9nIDogKF9mID0gKF9lID0gZGVmYXVsdE9wdGlvbnMyLmxvY2FsZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9lLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfZi53ZWVrU3RhcnRzT24pICE9IG51bGwgPyBfaCA6IDA7XG4gIGNvbnN0IF9kYXRlID0gdG9EYXRlKGRhdGUsIG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4pO1xuICBjb25zdCBkYXkgPSBfZGF0ZS5nZXREYXkoKTtcbiAgY29uc3QgZGlmZiA9IChkYXkgPCB3ZWVrU3RhcnRzT24gPyA3IDogMCkgKyBkYXkgLSB3ZWVrU3RhcnRzT247XG4gIF9kYXRlLnNldERhdGUoX2RhdGUuZ2V0RGF0ZSgpIC0gZGlmZik7XG4gIF9kYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICByZXR1cm4gX2RhdGU7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3RhcnRPZklTT1dlZWsuanNcbmZ1bmN0aW9uIHN0YXJ0T2ZJU09XZWVrKGRhdGUsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHN0YXJ0T2ZXZWVrKGRhdGUsIHsgLi4ub3B0aW9ucywgd2Vla1N0YXJ0c09uOiAxIH0pO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldElTT1dlZWtZZWFyLmpzXG5mdW5jdGlvbiBnZXRJU09XZWVrWWVhcihkYXRlLCBvcHRpb25zKSB7XG4gIGNvbnN0IF9kYXRlID0gdG9EYXRlKGRhdGUsIG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4pO1xuICBjb25zdCB5ZWFyID0gX2RhdGUuZ2V0RnVsbFllYXIoKTtcbiAgY29uc3QgZm91cnRoT2ZKYW51YXJ5T2ZOZXh0WWVhciA9IGNvbnN0cnVjdEZyb20oX2RhdGUsIDApO1xuICBmb3VydGhPZkphbnVhcnlPZk5leHRZZWFyLnNldEZ1bGxZZWFyKHllYXIgKyAxLCAwLCA0KTtcbiAgZm91cnRoT2ZKYW51YXJ5T2ZOZXh0WWVhci5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgY29uc3Qgc3RhcnRPZk5leHRZZWFyID0gc3RhcnRPZklTT1dlZWsoZm91cnRoT2ZKYW51YXJ5T2ZOZXh0WWVhcik7XG4gIGNvbnN0IGZvdXJ0aE9mSmFudWFyeU9mVGhpc1llYXIgPSBjb25zdHJ1Y3RGcm9tKF9kYXRlLCAwKTtcbiAgZm91cnRoT2ZKYW51YXJ5T2ZUaGlzWWVhci5zZXRGdWxsWWVhcih5ZWFyLCAwLCA0KTtcbiAgZm91cnRoT2ZKYW51YXJ5T2ZUaGlzWWVhci5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgY29uc3Qgc3RhcnRPZlRoaXNZZWFyID0gc3RhcnRPZklTT1dlZWsoZm91cnRoT2ZKYW51YXJ5T2ZUaGlzWWVhcik7XG4gIGlmIChfZGF0ZS5nZXRUaW1lKCkgPj0gc3RhcnRPZk5leHRZZWFyLmdldFRpbWUoKSkge1xuICAgIHJldHVybiB5ZWFyICsgMTtcbiAgfSBlbHNlIGlmIChfZGF0ZS5nZXRUaW1lKCkgPj0gc3RhcnRPZlRoaXNZZWFyLmdldFRpbWUoKSkge1xuICAgIHJldHVybiB5ZWFyO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB5ZWFyIC0gMTtcbiAgfVxufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL3N0YXJ0T2ZJU09XZWVrWWVhci5qc1xuZnVuY3Rpb24gc3RhcnRPZklTT1dlZWtZZWFyKGRhdGUsIG9wdGlvbnMpIHtcbiAgY29uc3QgeWVhciA9IGdldElTT1dlZWtZZWFyKGRhdGUsIG9wdGlvbnMpO1xuICBjb25zdCBmb3VydGhPZkphbnVhcnkgPSBjb25zdHJ1Y3RGcm9tKChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKSB8fCBkYXRlLCAwKTtcbiAgZm91cnRoT2ZKYW51YXJ5LnNldEZ1bGxZZWFyKHllYXIsIDAsIDQpO1xuICBmb3VydGhPZkphbnVhcnkuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gIHJldHVybiBzdGFydE9mSVNPV2Vlayhmb3VydGhPZkphbnVhcnkpO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldElTT1dlZWsuanNcbmZ1bmN0aW9uIGdldElTT1dlZWsoZGF0ZSwgb3B0aW9ucykge1xuICBjb25zdCBfZGF0ZSA9IHRvRGF0ZShkYXRlLCBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKTtcbiAgY29uc3QgZGlmZiA9ICtzdGFydE9mSVNPV2VlayhfZGF0ZSkgLSArc3RhcnRPZklTT1dlZWtZZWFyKF9kYXRlKTtcbiAgcmV0dXJuIE1hdGgucm91bmQoZGlmZiAvIG1pbGxpc2Vjb25kc0luV2VlaykgKyAxO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldFdlZWtZZWFyLmpzXG5mdW5jdGlvbiBnZXRXZWVrWWVhcihkYXRlLCBvcHRpb25zKSB7XG4gIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZywgX2g7XG4gIGNvbnN0IF9kYXRlID0gdG9EYXRlKGRhdGUsIG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4pO1xuICBjb25zdCB5ZWFyID0gX2RhdGUuZ2V0RnVsbFllYXIoKTtcbiAgY29uc3QgZGVmYXVsdE9wdGlvbnMyID0gZ2V0RGVmYXVsdE9wdGlvbnMoKTtcbiAgY29uc3QgZmlyc3RXZWVrQ29udGFpbnNEYXRlID0gKF9oID0gKF9nID0gKF9kID0gKF9jID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5maXJzdFdlZWtDb250YWluc0RhdGUpICE9IG51bGwgPyBfYyA6IChfYiA9IChfYSA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubG9jYWxlKSA9PSBudWxsID8gdm9pZCAwIDogX2Eub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT0gbnVsbCA/IF9kIDogZGVmYXVsdE9wdGlvbnMyLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT0gbnVsbCA/IF9nIDogKF9mID0gKF9lID0gZGVmYXVsdE9wdGlvbnMyLmxvY2FsZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9lLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfZi5maXJzdFdlZWtDb250YWluc0RhdGUpICE9IG51bGwgPyBfaCA6IDE7XG4gIGNvbnN0IGZpcnN0V2Vla09mTmV4dFllYXIgPSBjb25zdHJ1Y3RGcm9tKChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKSB8fCBkYXRlLCAwKTtcbiAgZmlyc3RXZWVrT2ZOZXh0WWVhci5zZXRGdWxsWWVhcih5ZWFyICsgMSwgMCwgZmlyc3RXZWVrQ29udGFpbnNEYXRlKTtcbiAgZmlyc3RXZWVrT2ZOZXh0WWVhci5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgY29uc3Qgc3RhcnRPZk5leHRZZWFyID0gc3RhcnRPZldlZWsoZmlyc3RXZWVrT2ZOZXh0WWVhciwgb3B0aW9ucyk7XG4gIGNvbnN0IGZpcnN0V2Vla09mVGhpc1llYXIgPSBjb25zdHJ1Y3RGcm9tKChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKSB8fCBkYXRlLCAwKTtcbiAgZmlyc3RXZWVrT2ZUaGlzWWVhci5zZXRGdWxsWWVhcih5ZWFyLCAwLCBmaXJzdFdlZWtDb250YWluc0RhdGUpO1xuICBmaXJzdFdlZWtPZlRoaXNZZWFyLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICBjb25zdCBzdGFydE9mVGhpc1llYXIgPSBzdGFydE9mV2VlayhmaXJzdFdlZWtPZlRoaXNZZWFyLCBvcHRpb25zKTtcbiAgaWYgKCtfZGF0ZSA+PSArc3RhcnRPZk5leHRZZWFyKSB7XG4gICAgcmV0dXJuIHllYXIgKyAxO1xuICB9IGVsc2UgaWYgKCtfZGF0ZSA+PSArc3RhcnRPZlRoaXNZZWFyKSB7XG4gICAgcmV0dXJuIHllYXI7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHllYXIgLSAxO1xuICB9XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3RhcnRPZldlZWtZZWFyLmpzXG5mdW5jdGlvbiBzdGFydE9mV2Vla1llYXIoZGF0ZSwgb3B0aW9ucykge1xuICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oO1xuICBjb25zdCBkZWZhdWx0T3B0aW9uczIgPSBnZXREZWZhdWx0T3B0aW9ucygpO1xuICBjb25zdCBmaXJzdFdlZWtDb250YWluc0RhdGUgPSAoX2ggPSAoX2cgPSAoX2QgPSAoX2MgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT0gbnVsbCA/IF9jIDogKF9iID0gKF9hID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5sb2NhbGUpID09IG51bGwgPyB2b2lkIDAgOiBfYS5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2IuZmlyc3RXZWVrQ29udGFpbnNEYXRlKSAhPSBudWxsID8gX2QgOiBkZWZhdWx0T3B0aW9uczIuZmlyc3RXZWVrQ29udGFpbnNEYXRlKSAhPSBudWxsID8gX2cgOiAoX2YgPSAoX2UgPSBkZWZhdWx0T3B0aW9uczIubG9jYWxlKSA9PSBudWxsID8gdm9pZCAwIDogX2Uub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9mLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT0gbnVsbCA/IF9oIDogMTtcbiAgY29uc3QgeWVhciA9IGdldFdlZWtZZWFyKGRhdGUsIG9wdGlvbnMpO1xuICBjb25zdCBmaXJzdFdlZWsgPSBjb25zdHJ1Y3RGcm9tKChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKSB8fCBkYXRlLCAwKTtcbiAgZmlyc3RXZWVrLnNldEZ1bGxZZWFyKHllYXIsIDAsIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSk7XG4gIGZpcnN0V2Vlay5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgY29uc3QgX2RhdGUgPSBzdGFydE9mV2VlayhmaXJzdFdlZWssIG9wdGlvbnMpO1xuICByZXR1cm4gX2RhdGU7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZ2V0V2Vlay5qc1xuZnVuY3Rpb24gZ2V0V2VlayhkYXRlLCBvcHRpb25zKSB7XG4gIGNvbnN0IF9kYXRlID0gdG9EYXRlKGRhdGUsIG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4pO1xuICBjb25zdCBkaWZmID0gK3N0YXJ0T2ZXZWVrKF9kYXRlLCBvcHRpb25zKSAtICtzdGFydE9mV2Vla1llYXIoX2RhdGUsIG9wdGlvbnMpO1xuICByZXR1cm4gTWF0aC5yb3VuZChkaWZmIC8gbWlsbGlzZWNvbmRzSW5XZWVrKSArIDE7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9hZGRMZWFkaW5nWmVyb3MuanNcbmZ1bmN0aW9uIGFkZExlYWRpbmdaZXJvcyhudW1iZXIsIHRhcmdldExlbmd0aCkge1xuICBjb25zdCBzaWduID0gbnVtYmVyIDwgMCA/IFwiLVwiIDogXCJcIjtcbiAgY29uc3Qgb3V0cHV0ID0gTWF0aC5hYnMobnVtYmVyKS50b1N0cmluZygpLnBhZFN0YXJ0KHRhcmdldExlbmd0aCwgXCIwXCIpO1xuICByZXR1cm4gc2lnbiArIG91dHB1dDtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL2Zvcm1hdC9saWdodEZvcm1hdHRlcnMuanNcbnZhciBsaWdodEZvcm1hdHRlcnMgPSB7XG4gIC8vIFllYXJcbiAgeShkYXRlLCB0b2tlbikge1xuICAgIGNvbnN0IHNpZ25lZFllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgY29uc3QgeWVhciA9IHNpZ25lZFllYXIgPiAwID8gc2lnbmVkWWVhciA6IDEgLSBzaWduZWRZZWFyO1xuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3ModG9rZW4gPT09IFwieXlcIiA/IHllYXIgJSAxMDAgOiB5ZWFyLCB0b2tlbi5sZW5ndGgpO1xuICB9LFxuICAvLyBNb250aFxuICBNKGRhdGUsIHRva2VuKSB7XG4gICAgY29uc3QgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7XG4gICAgcmV0dXJuIHRva2VuID09PSBcIk1cIiA/IFN0cmluZyhtb250aCArIDEpIDogYWRkTGVhZGluZ1plcm9zKG1vbnRoICsgMSwgMik7XG4gIH0sXG4gIC8vIERheSBvZiB0aGUgbW9udGhcbiAgZChkYXRlLCB0b2tlbikge1xuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoZGF0ZS5nZXREYXRlKCksIHRva2VuLmxlbmd0aCk7XG4gIH0sXG4gIC8vIEFNIG9yIFBNXG4gIGEoZGF0ZSwgdG9rZW4pIHtcbiAgICBjb25zdCBkYXlQZXJpb2RFbnVtVmFsdWUgPSBkYXRlLmdldEhvdXJzKCkgLyAxMiA+PSAxID8gXCJwbVwiIDogXCJhbVwiO1xuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIGNhc2UgXCJhXCI6XG4gICAgICBjYXNlIFwiYWFcIjpcbiAgICAgICAgcmV0dXJuIGRheVBlcmlvZEVudW1WYWx1ZS50b1VwcGVyQ2FzZSgpO1xuICAgICAgY2FzZSBcImFhYVwiOlxuICAgICAgICByZXR1cm4gZGF5UGVyaW9kRW51bVZhbHVlO1xuICAgICAgY2FzZSBcImFhYWFhXCI6XG4gICAgICAgIHJldHVybiBkYXlQZXJpb2RFbnVtVmFsdWVbMF07XG4gICAgICBjYXNlIFwiYWFhYVwiOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGRheVBlcmlvZEVudW1WYWx1ZSA9PT0gXCJhbVwiID8gXCJhLm0uXCIgOiBcInAubS5cIjtcbiAgICB9XG4gIH0sXG4gIC8vIEhvdXIgWzEtMTJdXG4gIGgoZGF0ZSwgdG9rZW4pIHtcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGRhdGUuZ2V0SG91cnMoKSAlIDEyIHx8IDEyLCB0b2tlbi5sZW5ndGgpO1xuICB9LFxuICAvLyBIb3VyIFswLTIzXVxuICBIKGRhdGUsIHRva2VuKSB7XG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhkYXRlLmdldEhvdXJzKCksIHRva2VuLmxlbmd0aCk7XG4gIH0sXG4gIC8vIE1pbnV0ZVxuICBtKGRhdGUsIHRva2VuKSB7XG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhkYXRlLmdldE1pbnV0ZXMoKSwgdG9rZW4ubGVuZ3RoKTtcbiAgfSxcbiAgLy8gU2Vjb25kXG4gIHMoZGF0ZSwgdG9rZW4pIHtcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGRhdGUuZ2V0U2Vjb25kcygpLCB0b2tlbi5sZW5ndGgpO1xuICB9LFxuICAvLyBGcmFjdGlvbiBvZiBzZWNvbmRcbiAgUyhkYXRlLCB0b2tlbikge1xuICAgIGNvbnN0IG51bWJlck9mRGlnaXRzID0gdG9rZW4ubGVuZ3RoO1xuICAgIGNvbnN0IG1pbGxpc2Vjb25kcyA9IGRhdGUuZ2V0TWlsbGlzZWNvbmRzKCk7XG4gICAgY29uc3QgZnJhY3Rpb25hbFNlY29uZHMgPSBNYXRoLnRydW5jKFxuICAgICAgbWlsbGlzZWNvbmRzICogTWF0aC5wb3coMTAsIG51bWJlck9mRGlnaXRzIC0gMylcbiAgICApO1xuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoZnJhY3Rpb25hbFNlY29uZHMsIHRva2VuLmxlbmd0aCk7XG4gIH1cbn07XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9mb3JtYXQvZm9ybWF0dGVycy5qc1xudmFyIGRheVBlcmlvZEVudW0gPSB7XG4gIGFtOiBcImFtXCIsXG4gIHBtOiBcInBtXCIsXG4gIG1pZG5pZ2h0OiBcIm1pZG5pZ2h0XCIsXG4gIG5vb246IFwibm9vblwiLFxuICBtb3JuaW5nOiBcIm1vcm5pbmdcIixcbiAgYWZ0ZXJub29uOiBcImFmdGVybm9vblwiLFxuICBldmVuaW5nOiBcImV2ZW5pbmdcIixcbiAgbmlnaHQ6IFwibmlnaHRcIlxufTtcbnZhciBmb3JtYXR0ZXJzID0ge1xuICAvLyBFcmFcbiAgRzogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplMikge1xuICAgIGNvbnN0IGVyYSA9IGRhdGUuZ2V0RnVsbFllYXIoKSA+IDAgPyAxIDogMDtcbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAvLyBBRCwgQkNcbiAgICAgIGNhc2UgXCJHXCI6XG4gICAgICBjYXNlIFwiR0dcIjpcbiAgICAgIGNhc2UgXCJHR0dcIjpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5lcmEoZXJhLCB7IHdpZHRoOiBcImFiYnJldmlhdGVkXCIgfSk7XG4gICAgICAvLyBBLCBCXG4gICAgICBjYXNlIFwiR0dHR0dcIjpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5lcmEoZXJhLCB7IHdpZHRoOiBcIm5hcnJvd1wiIH0pO1xuICAgICAgLy8gQW5ubyBEb21pbmksIEJlZm9yZSBDaHJpc3RcbiAgICAgIGNhc2UgXCJHR0dHXCI6XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLmVyYShlcmEsIHsgd2lkdGg6IFwid2lkZVwiIH0pO1xuICAgIH1cbiAgfSxcbiAgLy8gWWVhclxuICB5OiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUyKSB7XG4gICAgaWYgKHRva2VuID09PSBcInlvXCIpIHtcbiAgICAgIGNvbnN0IHNpZ25lZFllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICBjb25zdCB5ZWFyID0gc2lnbmVkWWVhciA+IDAgPyBzaWduZWRZZWFyIDogMSAtIHNpZ25lZFllYXI7XG4gICAgICByZXR1cm4gbG9jYWxpemUyLm9yZGluYWxOdW1iZXIoeWVhciwgeyB1bml0OiBcInllYXJcIiB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy55KGRhdGUsIHRva2VuKTtcbiAgfSxcbiAgLy8gTG9jYWwgd2Vlay1udW1iZXJpbmcgeWVhclxuICBZOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUyLCBvcHRpb25zKSB7XG4gICAgY29uc3Qgc2lnbmVkV2Vla1llYXIgPSBnZXRXZWVrWWVhcihkYXRlLCBvcHRpb25zKTtcbiAgICBjb25zdCB3ZWVrWWVhciA9IHNpZ25lZFdlZWtZZWFyID4gMCA/IHNpZ25lZFdlZWtZZWFyIDogMSAtIHNpZ25lZFdlZWtZZWFyO1xuICAgIGlmICh0b2tlbiA9PT0gXCJZWVwiKSB7XG4gICAgICBjb25zdCB0d29EaWdpdFllYXIgPSB3ZWVrWWVhciAlIDEwMDtcbiAgICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3ModHdvRGlnaXRZZWFyLCAyKTtcbiAgICB9XG4gICAgaWYgKHRva2VuID09PSBcIllvXCIpIHtcbiAgICAgIHJldHVybiBsb2NhbGl6ZTIub3JkaW5hbE51bWJlcih3ZWVrWWVhciwgeyB1bml0OiBcInllYXJcIiB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyh3ZWVrWWVhciwgdG9rZW4ubGVuZ3RoKTtcbiAgfSxcbiAgLy8gSVNPIHdlZWstbnVtYmVyaW5nIHllYXJcbiAgUjogZnVuY3Rpb24oZGF0ZSwgdG9rZW4pIHtcbiAgICBjb25zdCBpc29XZWVrWWVhciA9IGdldElTT1dlZWtZZWFyKGRhdGUpO1xuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoaXNvV2Vla1llYXIsIHRva2VuLmxlbmd0aCk7XG4gIH0sXG4gIC8vIEV4dGVuZGVkIHllYXIuIFRoaXMgaXMgYSBzaW5nbGUgbnVtYmVyIGRlc2lnbmF0aW5nIHRoZSB5ZWFyIG9mIHRoaXMgY2FsZW5kYXIgc3lzdGVtLlxuICAvLyBUaGUgbWFpbiBkaWZmZXJlbmNlIGJldHdlZW4gYHlgIGFuZCBgdWAgbG9jYWxpemVycyBhcmUgQi5DLiB5ZWFyczpcbiAgLy8gfCBZZWFyIHwgYHlgIHwgYHVgIHxcbiAgLy8gfC0tLS0tLXwtLS0tLXwtLS0tLXxcbiAgLy8gfCBBQyAxIHwgICAxIHwgICAxIHxcbiAgLy8gfCBCQyAxIHwgICAxIHwgICAwIHxcbiAgLy8gfCBCQyAyIHwgICAyIHwgIC0xIHxcbiAgLy8gQWxzbyBgeXlgIGFsd2F5cyByZXR1cm5zIHRoZSBsYXN0IHR3byBkaWdpdHMgb2YgYSB5ZWFyLFxuICAvLyB3aGlsZSBgdXVgIHBhZHMgc2luZ2xlIGRpZ2l0IHllYXJzIHRvIDIgY2hhcmFjdGVycyBhbmQgcmV0dXJucyBvdGhlciB5ZWFycyB1bmNoYW5nZWQuXG4gIHU6IGZ1bmN0aW9uKGRhdGUsIHRva2VuKSB7XG4gICAgY29uc3QgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKHllYXIsIHRva2VuLmxlbmd0aCk7XG4gIH0sXG4gIC8vIFF1YXJ0ZXJcbiAgUTogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplMikge1xuICAgIGNvbnN0IHF1YXJ0ZXIgPSBNYXRoLmNlaWwoKGRhdGUuZ2V0TW9udGgoKSArIDEpIC8gMyk7XG4gICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgLy8gMSwgMiwgMywgNFxuICAgICAgY2FzZSBcIlFcIjpcbiAgICAgICAgcmV0dXJuIFN0cmluZyhxdWFydGVyKTtcbiAgICAgIC8vIDAxLCAwMiwgMDMsIDA0XG4gICAgICBjYXNlIFwiUVFcIjpcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhxdWFydGVyLCAyKTtcbiAgICAgIC8vIDFzdCwgMm5kLCAzcmQsIDR0aFxuICAgICAgY2FzZSBcIlFvXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIub3JkaW5hbE51bWJlcihxdWFydGVyLCB7IHVuaXQ6IFwicXVhcnRlclwiIH0pO1xuICAgICAgLy8gUTEsIFEyLCBRMywgUTRcbiAgICAgIGNhc2UgXCJRUVFcIjpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5xdWFydGVyKHF1YXJ0ZXIsIHtcbiAgICAgICAgICB3aWR0aDogXCJhYmJyZXZpYXRlZFwiLFxuICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgIH0pO1xuICAgICAgLy8gMSwgMiwgMywgNCAobmFycm93IHF1YXJ0ZXI7IGNvdWxkIGJlIG5vdCBudW1lcmljYWwpXG4gICAgICBjYXNlIFwiUVFRUVFcIjpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5xdWFydGVyKHF1YXJ0ZXIsIHtcbiAgICAgICAgICB3aWR0aDogXCJuYXJyb3dcIixcbiAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICB9KTtcbiAgICAgIC8vIDFzdCBxdWFydGVyLCAybmQgcXVhcnRlciwgLi4uXG4gICAgICBjYXNlIFwiUVFRUVwiOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5xdWFydGVyKHF1YXJ0ZXIsIHtcbiAgICAgICAgICB3aWR0aDogXCJ3aWRlXCIsXG4gICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgfSk7XG4gICAgfVxuICB9LFxuICAvLyBTdGFuZC1hbG9uZSBxdWFydGVyXG4gIHE6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZTIpIHtcbiAgICBjb25zdCBxdWFydGVyID0gTWF0aC5jZWlsKChkYXRlLmdldE1vbnRoKCkgKyAxKSAvIDMpO1xuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIC8vIDEsIDIsIDMsIDRcbiAgICAgIGNhc2UgXCJxXCI6XG4gICAgICAgIHJldHVybiBTdHJpbmcocXVhcnRlcik7XG4gICAgICAvLyAwMSwgMDIsIDAzLCAwNFxuICAgICAgY2FzZSBcInFxXCI6XG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MocXVhcnRlciwgMik7XG4gICAgICAvLyAxc3QsIDJuZCwgM3JkLCA0dGhcbiAgICAgIGNhc2UgXCJxb1wiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLm9yZGluYWxOdW1iZXIocXVhcnRlciwgeyB1bml0OiBcInF1YXJ0ZXJcIiB9KTtcbiAgICAgIC8vIFExLCBRMiwgUTMsIFE0XG4gICAgICBjYXNlIFwicXFxXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIucXVhcnRlcihxdWFydGVyLCB7XG4gICAgICAgICAgd2lkdGg6IFwiYWJicmV2aWF0ZWRcIixcbiAgICAgICAgICBjb250ZXh0OiBcInN0YW5kYWxvbmVcIlxuICAgICAgICB9KTtcbiAgICAgIC8vIDEsIDIsIDMsIDQgKG5hcnJvdyBxdWFydGVyOyBjb3VsZCBiZSBub3QgbnVtZXJpY2FsKVxuICAgICAgY2FzZSBcInFxcXFxXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIucXVhcnRlcihxdWFydGVyLCB7XG4gICAgICAgICAgd2lkdGg6IFwibmFycm93XCIsXG4gICAgICAgICAgY29udGV4dDogXCJzdGFuZGFsb25lXCJcbiAgICAgICAgfSk7XG4gICAgICAvLyAxc3QgcXVhcnRlciwgMm5kIHF1YXJ0ZXIsIC4uLlxuICAgICAgY2FzZSBcInFxcXFcIjpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIucXVhcnRlcihxdWFydGVyLCB7XG4gICAgICAgICAgd2lkdGg6IFwid2lkZVwiLFxuICAgICAgICAgIGNvbnRleHQ6IFwic3RhbmRhbG9uZVwiXG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgLy8gTW9udGhcbiAgTTogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplMikge1xuICAgIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIGNhc2UgXCJNXCI6XG4gICAgICBjYXNlIFwiTU1cIjpcbiAgICAgICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy5NKGRhdGUsIHRva2VuKTtcbiAgICAgIC8vIDFzdCwgMm5kLCAuLi4sIDEydGhcbiAgICAgIGNhc2UgXCJNb1wiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLm9yZGluYWxOdW1iZXIobW9udGggKyAxLCB7IHVuaXQ6IFwibW9udGhcIiB9KTtcbiAgICAgIC8vIEphbiwgRmViLCAuLi4sIERlY1xuICAgICAgY2FzZSBcIk1NTVwiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLm1vbnRoKG1vbnRoLCB7XG4gICAgICAgICAgd2lkdGg6IFwiYWJicmV2aWF0ZWRcIixcbiAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICB9KTtcbiAgICAgIC8vIEosIEYsIC4uLiwgRFxuICAgICAgY2FzZSBcIk1NTU1NXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIubW9udGgobW9udGgsIHtcbiAgICAgICAgICB3aWR0aDogXCJuYXJyb3dcIixcbiAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICB9KTtcbiAgICAgIC8vIEphbnVhcnksIEZlYnJ1YXJ5LCAuLi4sIERlY2VtYmVyXG4gICAgICBjYXNlIFwiTU1NTVwiOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5tb250aChtb250aCwgeyB3aWR0aDogXCJ3aWRlXCIsIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiIH0pO1xuICAgIH1cbiAgfSxcbiAgLy8gU3RhbmQtYWxvbmUgbW9udGhcbiAgTDogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplMikge1xuICAgIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIC8vIDEsIDIsIC4uLiwgMTJcbiAgICAgIGNhc2UgXCJMXCI6XG4gICAgICAgIHJldHVybiBTdHJpbmcobW9udGggKyAxKTtcbiAgICAgIC8vIDAxLCAwMiwgLi4uLCAxMlxuICAgICAgY2FzZSBcIkxMXCI6XG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MobW9udGggKyAxLCAyKTtcbiAgICAgIC8vIDFzdCwgMm5kLCAuLi4sIDEydGhcbiAgICAgIGNhc2UgXCJMb1wiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLm9yZGluYWxOdW1iZXIobW9udGggKyAxLCB7IHVuaXQ6IFwibW9udGhcIiB9KTtcbiAgICAgIC8vIEphbiwgRmViLCAuLi4sIERlY1xuICAgICAgY2FzZSBcIkxMTFwiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLm1vbnRoKG1vbnRoLCB7XG4gICAgICAgICAgd2lkdGg6IFwiYWJicmV2aWF0ZWRcIixcbiAgICAgICAgICBjb250ZXh0OiBcInN0YW5kYWxvbmVcIlxuICAgICAgICB9KTtcbiAgICAgIC8vIEosIEYsIC4uLiwgRFxuICAgICAgY2FzZSBcIkxMTExMXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIubW9udGgobW9udGgsIHtcbiAgICAgICAgICB3aWR0aDogXCJuYXJyb3dcIixcbiAgICAgICAgICBjb250ZXh0OiBcInN0YW5kYWxvbmVcIlxuICAgICAgICB9KTtcbiAgICAgIC8vIEphbnVhcnksIEZlYnJ1YXJ5LCAuLi4sIERlY2VtYmVyXG4gICAgICBjYXNlIFwiTExMTFwiOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5tb250aChtb250aCwgeyB3aWR0aDogXCJ3aWRlXCIsIGNvbnRleHQ6IFwic3RhbmRhbG9uZVwiIH0pO1xuICAgIH1cbiAgfSxcbiAgLy8gTG9jYWwgd2VlayBvZiB5ZWFyXG4gIHc6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZTIsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB3ZWVrID0gZ2V0V2VlayhkYXRlLCBvcHRpb25zKTtcbiAgICBpZiAodG9rZW4gPT09IFwid29cIikge1xuICAgICAgcmV0dXJuIGxvY2FsaXplMi5vcmRpbmFsTnVtYmVyKHdlZWssIHsgdW5pdDogXCJ3ZWVrXCIgfSk7XG4gICAgfVxuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3Mod2VlaywgdG9rZW4ubGVuZ3RoKTtcbiAgfSxcbiAgLy8gSVNPIHdlZWsgb2YgeWVhclxuICBJOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUyKSB7XG4gICAgY29uc3QgaXNvV2VlayA9IGdldElTT1dlZWsoZGF0ZSk7XG4gICAgaWYgKHRva2VuID09PSBcIklvXCIpIHtcbiAgICAgIHJldHVybiBsb2NhbGl6ZTIub3JkaW5hbE51bWJlcihpc29XZWVrLCB7IHVuaXQ6IFwid2Vla1wiIH0pO1xuICAgIH1cbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGlzb1dlZWssIHRva2VuLmxlbmd0aCk7XG4gIH0sXG4gIC8vIERheSBvZiB0aGUgbW9udGhcbiAgZDogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplMikge1xuICAgIGlmICh0b2tlbiA9PT0gXCJkb1wiKSB7XG4gICAgICByZXR1cm4gbG9jYWxpemUyLm9yZGluYWxOdW1iZXIoZGF0ZS5nZXREYXRlKCksIHsgdW5pdDogXCJkYXRlXCIgfSk7XG4gICAgfVxuICAgIHJldHVybiBsaWdodEZvcm1hdHRlcnMuZChkYXRlLCB0b2tlbik7XG4gIH0sXG4gIC8vIERheSBvZiB5ZWFyXG4gIEQ6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZTIpIHtcbiAgICBjb25zdCBkYXlPZlllYXIgPSBnZXREYXlPZlllYXIoZGF0ZSk7XG4gICAgaWYgKHRva2VuID09PSBcIkRvXCIpIHtcbiAgICAgIHJldHVybiBsb2NhbGl6ZTIub3JkaW5hbE51bWJlcihkYXlPZlllYXIsIHsgdW5pdDogXCJkYXlPZlllYXJcIiB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhkYXlPZlllYXIsIHRva2VuLmxlbmd0aCk7XG4gIH0sXG4gIC8vIERheSBvZiB3ZWVrXG4gIEU6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZTIpIHtcbiAgICBjb25zdCBkYXlPZldlZWsgPSBkYXRlLmdldERheSgpO1xuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIC8vIFR1ZVxuICAgICAgY2FzZSBcIkVcIjpcbiAgICAgIGNhc2UgXCJFRVwiOlxuICAgICAgY2FzZSBcIkVFRVwiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICB3aWR0aDogXCJhYmJyZXZpYXRlZFwiLFxuICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgIH0pO1xuICAgICAgLy8gVFxuICAgICAgY2FzZSBcIkVFRUVFXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIuZGF5KGRheU9mV2Vlaywge1xuICAgICAgICAgIHdpZHRoOiBcIm5hcnJvd1wiLFxuICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgIH0pO1xuICAgICAgLy8gVHVcbiAgICAgIGNhc2UgXCJFRUVFRUVcIjpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6IFwic2hvcnRcIixcbiAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICB9KTtcbiAgICAgIC8vIFR1ZXNkYXlcbiAgICAgIGNhc2UgXCJFRUVFXCI6XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICB3aWR0aDogXCJ3aWRlXCIsXG4gICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgfSk7XG4gICAgfVxuICB9LFxuICAvLyBMb2NhbCBkYXkgb2Ygd2Vla1xuICBlOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUyLCBvcHRpb25zKSB7XG4gICAgY29uc3QgZGF5T2ZXZWVrID0gZGF0ZS5nZXREYXkoKTtcbiAgICBjb25zdCBsb2NhbERheU9mV2VlayA9IChkYXlPZldlZWsgLSBvcHRpb25zLndlZWtTdGFydHNPbiArIDgpICUgNyB8fCA3O1xuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIC8vIE51bWVyaWNhbCB2YWx1ZSAoTnRoIGRheSBvZiB3ZWVrIHdpdGggY3VycmVudCBsb2NhbGUgb3Igd2Vla1N0YXJ0c09uKVxuICAgICAgY2FzZSBcImVcIjpcbiAgICAgICAgcmV0dXJuIFN0cmluZyhsb2NhbERheU9mV2Vlayk7XG4gICAgICAvLyBQYWRkZWQgbnVtZXJpY2FsIHZhbHVlXG4gICAgICBjYXNlIFwiZWVcIjpcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhsb2NhbERheU9mV2VlaywgMik7XG4gICAgICAvLyAxc3QsIDJuZCwgLi4uLCA3dGhcbiAgICAgIGNhc2UgXCJlb1wiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLm9yZGluYWxOdW1iZXIobG9jYWxEYXlPZldlZWssIHsgdW5pdDogXCJkYXlcIiB9KTtcbiAgICAgIGNhc2UgXCJlZWVcIjpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6IFwiYWJicmV2aWF0ZWRcIixcbiAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICB9KTtcbiAgICAgIC8vIFRcbiAgICAgIGNhc2UgXCJlZWVlZVwiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICB3aWR0aDogXCJuYXJyb3dcIixcbiAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICB9KTtcbiAgICAgIC8vIFR1XG4gICAgICBjYXNlIFwiZWVlZWVlXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIuZGF5KGRheU9mV2Vlaywge1xuICAgICAgICAgIHdpZHRoOiBcInNob3J0XCIsXG4gICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgfSk7XG4gICAgICAvLyBUdWVzZGF5XG4gICAgICBjYXNlIFwiZWVlZVwiOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6IFwid2lkZVwiLFxuICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgLy8gU3RhbmQtYWxvbmUgbG9jYWwgZGF5IG9mIHdlZWtcbiAgYzogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplMiwgb3B0aW9ucykge1xuICAgIGNvbnN0IGRheU9mV2VlayA9IGRhdGUuZ2V0RGF5KCk7XG4gICAgY29uc3QgbG9jYWxEYXlPZldlZWsgPSAoZGF5T2ZXZWVrIC0gb3B0aW9ucy53ZWVrU3RhcnRzT24gKyA4KSAlIDcgfHwgNztcbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAvLyBOdW1lcmljYWwgdmFsdWUgKHNhbWUgYXMgaW4gYGVgKVxuICAgICAgY2FzZSBcImNcIjpcbiAgICAgICAgcmV0dXJuIFN0cmluZyhsb2NhbERheU9mV2Vlayk7XG4gICAgICAvLyBQYWRkZWQgbnVtZXJpY2FsIHZhbHVlXG4gICAgICBjYXNlIFwiY2NcIjpcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhsb2NhbERheU9mV2VlaywgdG9rZW4ubGVuZ3RoKTtcbiAgICAgIC8vIDFzdCwgMm5kLCAuLi4sIDd0aFxuICAgICAgY2FzZSBcImNvXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIub3JkaW5hbE51bWJlcihsb2NhbERheU9mV2VlaywgeyB1bml0OiBcImRheVwiIH0pO1xuICAgICAgY2FzZSBcImNjY1wiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICB3aWR0aDogXCJhYmJyZXZpYXRlZFwiLFxuICAgICAgICAgIGNvbnRleHQ6IFwic3RhbmRhbG9uZVwiXG4gICAgICAgIH0pO1xuICAgICAgLy8gVFxuICAgICAgY2FzZSBcImNjY2NjXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIuZGF5KGRheU9mV2Vlaywge1xuICAgICAgICAgIHdpZHRoOiBcIm5hcnJvd1wiLFxuICAgICAgICAgIGNvbnRleHQ6IFwic3RhbmRhbG9uZVwiXG4gICAgICAgIH0pO1xuICAgICAgLy8gVHVcbiAgICAgIGNhc2UgXCJjY2NjY2NcIjpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6IFwic2hvcnRcIixcbiAgICAgICAgICBjb250ZXh0OiBcInN0YW5kYWxvbmVcIlxuICAgICAgICB9KTtcbiAgICAgIC8vIFR1ZXNkYXlcbiAgICAgIGNhc2UgXCJjY2NjXCI6XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICB3aWR0aDogXCJ3aWRlXCIsXG4gICAgICAgICAgY29udGV4dDogXCJzdGFuZGFsb25lXCJcbiAgICAgICAgfSk7XG4gICAgfVxuICB9LFxuICAvLyBJU08gZGF5IG9mIHdlZWtcbiAgaTogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplMikge1xuICAgIGNvbnN0IGRheU9mV2VlayA9IGRhdGUuZ2V0RGF5KCk7XG4gICAgY29uc3QgaXNvRGF5T2ZXZWVrID0gZGF5T2ZXZWVrID09PSAwID8gNyA6IGRheU9mV2VlaztcbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAvLyAyXG4gICAgICBjYXNlIFwiaVwiOlxuICAgICAgICByZXR1cm4gU3RyaW5nKGlzb0RheU9mV2Vlayk7XG4gICAgICAvLyAwMlxuICAgICAgY2FzZSBcImlpXCI6XG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoaXNvRGF5T2ZXZWVrLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgLy8gMm5kXG4gICAgICBjYXNlIFwiaW9cIjpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5vcmRpbmFsTnVtYmVyKGlzb0RheU9mV2VlaywgeyB1bml0OiBcImRheVwiIH0pO1xuICAgICAgLy8gVHVlXG4gICAgICBjYXNlIFwiaWlpXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIuZGF5KGRheU9mV2Vlaywge1xuICAgICAgICAgIHdpZHRoOiBcImFiYnJldmlhdGVkXCIsXG4gICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgfSk7XG4gICAgICAvLyBUXG4gICAgICBjYXNlIFwiaWlpaWlcIjpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6IFwibmFycm93XCIsXG4gICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgfSk7XG4gICAgICAvLyBUdVxuICAgICAgY2FzZSBcImlpaWlpaVwiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICB3aWR0aDogXCJzaG9ydFwiLFxuICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgIH0pO1xuICAgICAgLy8gVHVlc2RheVxuICAgICAgY2FzZSBcImlpaWlcIjpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIuZGF5KGRheU9mV2Vlaywge1xuICAgICAgICAgIHdpZHRoOiBcIndpZGVcIixcbiAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIC8vIEFNIG9yIFBNXG4gIGE6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZTIpIHtcbiAgICBjb25zdCBob3VycyA9IGRhdGUuZ2V0SG91cnMoKTtcbiAgICBjb25zdCBkYXlQZXJpb2RFbnVtVmFsdWUgPSBob3VycyAvIDEyID49IDEgPyBcInBtXCIgOiBcImFtXCI7XG4gICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgY2FzZSBcImFcIjpcbiAgICAgIGNhc2UgXCJhYVwiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcbiAgICAgICAgICB3aWR0aDogXCJhYmJyZXZpYXRlZFwiLFxuICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgIH0pO1xuICAgICAgY2FzZSBcImFhYVwiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcbiAgICAgICAgICB3aWR0aDogXCJhYmJyZXZpYXRlZFwiLFxuICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgIH0pLnRvTG93ZXJDYXNlKCk7XG4gICAgICBjYXNlIFwiYWFhYWFcIjpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XG4gICAgICAgICAgd2lkdGg6IFwibmFycm93XCIsXG4gICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgfSk7XG4gICAgICBjYXNlIFwiYWFhYVwiOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XG4gICAgICAgICAgd2lkdGg6IFwid2lkZVwiLFxuICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgLy8gQU0sIFBNLCBtaWRuaWdodCwgbm9vblxuICBiOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUyKSB7XG4gICAgY29uc3QgaG91cnMgPSBkYXRlLmdldEhvdXJzKCk7XG4gICAgbGV0IGRheVBlcmlvZEVudW1WYWx1ZTtcbiAgICBpZiAoaG91cnMgPT09IDEyKSB7XG4gICAgICBkYXlQZXJpb2RFbnVtVmFsdWUgPSBkYXlQZXJpb2RFbnVtLm5vb247XG4gICAgfSBlbHNlIGlmIChob3VycyA9PT0gMCkge1xuICAgICAgZGF5UGVyaW9kRW51bVZhbHVlID0gZGF5UGVyaW9kRW51bS5taWRuaWdodDtcbiAgICB9IGVsc2Uge1xuICAgICAgZGF5UGVyaW9kRW51bVZhbHVlID0gaG91cnMgLyAxMiA+PSAxID8gXCJwbVwiIDogXCJhbVwiO1xuICAgIH1cbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICBjYXNlIFwiYlwiOlxuICAgICAgY2FzZSBcImJiXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xuICAgICAgICAgIHdpZHRoOiBcImFiYnJldmlhdGVkXCIsXG4gICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgfSk7XG4gICAgICBjYXNlIFwiYmJiXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xuICAgICAgICAgIHdpZHRoOiBcImFiYnJldmlhdGVkXCIsXG4gICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgfSkudG9Mb3dlckNhc2UoKTtcbiAgICAgIGNhc2UgXCJiYmJiYlwiOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcbiAgICAgICAgICB3aWR0aDogXCJuYXJyb3dcIixcbiAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICB9KTtcbiAgICAgIGNhc2UgXCJiYmJiXCI6XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gbG9jYWxpemUyLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcbiAgICAgICAgICB3aWR0aDogXCJ3aWRlXCIsXG4gICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgfSk7XG4gICAgfVxuICB9LFxuICAvLyBpbiB0aGUgbW9ybmluZywgaW4gdGhlIGFmdGVybm9vbiwgaW4gdGhlIGV2ZW5pbmcsIGF0IG5pZ2h0XG4gIEI6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZTIpIHtcbiAgICBjb25zdCBob3VycyA9IGRhdGUuZ2V0SG91cnMoKTtcbiAgICBsZXQgZGF5UGVyaW9kRW51bVZhbHVlO1xuICAgIGlmIChob3VycyA+PSAxNykge1xuICAgICAgZGF5UGVyaW9kRW51bVZhbHVlID0gZGF5UGVyaW9kRW51bS5ldmVuaW5nO1xuICAgIH0gZWxzZSBpZiAoaG91cnMgPj0gMTIpIHtcbiAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0uYWZ0ZXJub29uO1xuICAgIH0gZWxzZSBpZiAoaG91cnMgPj0gNCkge1xuICAgICAgZGF5UGVyaW9kRW51bVZhbHVlID0gZGF5UGVyaW9kRW51bS5tb3JuaW5nO1xuICAgIH0gZWxzZSB7XG4gICAgICBkYXlQZXJpb2RFbnVtVmFsdWUgPSBkYXlQZXJpb2RFbnVtLm5pZ2h0O1xuICAgIH1cbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICBjYXNlIFwiQlwiOlxuICAgICAgY2FzZSBcIkJCXCI6XG4gICAgICBjYXNlIFwiQkJCXCI6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZTIuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xuICAgICAgICAgIHdpZHRoOiBcImFiYnJldmlhdGVkXCIsXG4gICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgfSk7XG4gICAgICBjYXNlIFwiQkJCQkJcIjpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XG4gICAgICAgICAgd2lkdGg6IFwibmFycm93XCIsXG4gICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgfSk7XG4gICAgICBjYXNlIFwiQkJCQlwiOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplMi5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XG4gICAgICAgICAgd2lkdGg6IFwid2lkZVwiLFxuICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgLy8gSG91ciBbMS0xMl1cbiAgaDogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplMikge1xuICAgIGlmICh0b2tlbiA9PT0gXCJob1wiKSB7XG4gICAgICBsZXQgaG91cnMgPSBkYXRlLmdldEhvdXJzKCkgJSAxMjtcbiAgICAgIGlmIChob3VycyA9PT0gMCkgaG91cnMgPSAxMjtcbiAgICAgIHJldHVybiBsb2NhbGl6ZTIub3JkaW5hbE51bWJlcihob3VycywgeyB1bml0OiBcImhvdXJcIiB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy5oKGRhdGUsIHRva2VuKTtcbiAgfSxcbiAgLy8gSG91ciBbMC0yM11cbiAgSDogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplMikge1xuICAgIGlmICh0b2tlbiA9PT0gXCJIb1wiKSB7XG4gICAgICByZXR1cm4gbG9jYWxpemUyLm9yZGluYWxOdW1iZXIoZGF0ZS5nZXRIb3VycygpLCB7IHVuaXQ6IFwiaG91clwiIH0pO1xuICAgIH1cbiAgICByZXR1cm4gbGlnaHRGb3JtYXR0ZXJzLkgoZGF0ZSwgdG9rZW4pO1xuICB9LFxuICAvLyBIb3VyIFswLTExXVxuICBLOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUyKSB7XG4gICAgY29uc3QgaG91cnMgPSBkYXRlLmdldEhvdXJzKCkgJSAxMjtcbiAgICBpZiAodG9rZW4gPT09IFwiS29cIikge1xuICAgICAgcmV0dXJuIGxvY2FsaXplMi5vcmRpbmFsTnVtYmVyKGhvdXJzLCB7IHVuaXQ6IFwiaG91clwiIH0pO1xuICAgIH1cbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGhvdXJzLCB0b2tlbi5sZW5ndGgpO1xuICB9LFxuICAvLyBIb3VyIFsxLTI0XVxuICBrOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUyKSB7XG4gICAgbGV0IGhvdXJzID0gZGF0ZS5nZXRIb3VycygpO1xuICAgIGlmIChob3VycyA9PT0gMCkgaG91cnMgPSAyNDtcbiAgICBpZiAodG9rZW4gPT09IFwia29cIikge1xuICAgICAgcmV0dXJuIGxvY2FsaXplMi5vcmRpbmFsTnVtYmVyKGhvdXJzLCB7IHVuaXQ6IFwiaG91clwiIH0pO1xuICAgIH1cbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGhvdXJzLCB0b2tlbi5sZW5ndGgpO1xuICB9LFxuICAvLyBNaW51dGVcbiAgbTogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplMikge1xuICAgIGlmICh0b2tlbiA9PT0gXCJtb1wiKSB7XG4gICAgICByZXR1cm4gbG9jYWxpemUyLm9yZGluYWxOdW1iZXIoZGF0ZS5nZXRNaW51dGVzKCksIHsgdW5pdDogXCJtaW51dGVcIiB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy5tKGRhdGUsIHRva2VuKTtcbiAgfSxcbiAgLy8gU2Vjb25kXG4gIHM6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZTIpIHtcbiAgICBpZiAodG9rZW4gPT09IFwic29cIikge1xuICAgICAgcmV0dXJuIGxvY2FsaXplMi5vcmRpbmFsTnVtYmVyKGRhdGUuZ2V0U2Vjb25kcygpLCB7IHVuaXQ6IFwic2Vjb25kXCIgfSk7XG4gICAgfVxuICAgIHJldHVybiBsaWdodEZvcm1hdHRlcnMucyhkYXRlLCB0b2tlbik7XG4gIH0sXG4gIC8vIEZyYWN0aW9uIG9mIHNlY29uZFxuICBTOiBmdW5jdGlvbihkYXRlLCB0b2tlbikge1xuICAgIHJldHVybiBsaWdodEZvcm1hdHRlcnMuUyhkYXRlLCB0b2tlbik7XG4gIH0sXG4gIC8vIFRpbWV6b25lIChJU08tODYwMS4gSWYgb2Zmc2V0IGlzIDAsIG91dHB1dCBpcyBhbHdheXMgYCdaJ2ApXG4gIFg6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBfbG9jYWxpemUpIHtcbiAgICBjb25zdCB0aW1lem9uZU9mZnNldCA9IGRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKTtcbiAgICBpZiAodGltZXpvbmVPZmZzZXQgPT09IDApIHtcbiAgICAgIHJldHVybiBcIlpcIjtcbiAgICB9XG4gICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgLy8gSG91cnMgYW5kIG9wdGlvbmFsIG1pbnV0ZXNcbiAgICAgIGNhc2UgXCJYXCI6XG4gICAgICAgIHJldHVybiBmb3JtYXRUaW1lem9uZVdpdGhPcHRpb25hbE1pbnV0ZXModGltZXpvbmVPZmZzZXQpO1xuICAgICAgLy8gSG91cnMsIG1pbnV0ZXMgYW5kIG9wdGlvbmFsIHNlY29uZHMgd2l0aG91dCBgOmAgZGVsaW1pdGVyXG4gICAgICAvLyBOb3RlOiBuZWl0aGVyIElTTy04NjAxIG5vciBKYXZhU2NyaXB0IHN1cHBvcnRzIHNlY29uZHMgaW4gdGltZXpvbmUgb2Zmc2V0c1xuICAgICAgLy8gc28gdGhpcyB0b2tlbiBhbHdheXMgaGFzIHRoZSBzYW1lIG91dHB1dCBhcyBgWFhgXG4gICAgICBjYXNlIFwiWFhYWFwiOlxuICAgICAgY2FzZSBcIlhYXCI6XG4gICAgICAgIHJldHVybiBmb3JtYXRUaW1lem9uZSh0aW1lem9uZU9mZnNldCk7XG4gICAgICAvLyBIb3VycywgbWludXRlcyBhbmQgb3B0aW9uYWwgc2Vjb25kcyB3aXRoIGA6YCBkZWxpbWl0ZXJcbiAgICAgIC8vIE5vdGU6IG5laXRoZXIgSVNPLTg2MDEgbm9yIEphdmFTY3JpcHQgc3VwcG9ydHMgc2Vjb25kcyBpbiB0aW1lem9uZSBvZmZzZXRzXG4gICAgICAvLyBzbyB0aGlzIHRva2VuIGFsd2F5cyBoYXMgdGhlIHNhbWUgb3V0cHV0IGFzIGBYWFhgXG4gICAgICBjYXNlIFwiWFhYWFhcIjpcbiAgICAgIGNhc2UgXCJYWFhcIjpcbiAgICAgIC8vIEhvdXJzIGFuZCBtaW51dGVzIHdpdGggYDpgIGRlbGltaXRlclxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGZvcm1hdFRpbWV6b25lKHRpbWV6b25lT2Zmc2V0LCBcIjpcIik7XG4gICAgfVxuICB9LFxuICAvLyBUaW1lem9uZSAoSVNPLTg2MDEuIElmIG9mZnNldCBpcyAwLCBvdXRwdXQgaXMgYCcrMDA6MDAnYCBvciBlcXVpdmFsZW50KVxuICB4OiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgX2xvY2FsaXplKSB7XG4gICAgY29uc3QgdGltZXpvbmVPZmZzZXQgPSBkYXRlLmdldFRpbWV6b25lT2Zmc2V0KCk7XG4gICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgLy8gSG91cnMgYW5kIG9wdGlvbmFsIG1pbnV0ZXNcbiAgICAgIGNhc2UgXCJ4XCI6XG4gICAgICAgIHJldHVybiBmb3JtYXRUaW1lem9uZVdpdGhPcHRpb25hbE1pbnV0ZXModGltZXpvbmVPZmZzZXQpO1xuICAgICAgLy8gSG91cnMsIG1pbnV0ZXMgYW5kIG9wdGlvbmFsIHNlY29uZHMgd2l0aG91dCBgOmAgZGVsaW1pdGVyXG4gICAgICAvLyBOb3RlOiBuZWl0aGVyIElTTy04NjAxIG5vciBKYXZhU2NyaXB0IHN1cHBvcnRzIHNlY29uZHMgaW4gdGltZXpvbmUgb2Zmc2V0c1xuICAgICAgLy8gc28gdGhpcyB0b2tlbiBhbHdheXMgaGFzIHRoZSBzYW1lIG91dHB1dCBhcyBgeHhgXG4gICAgICBjYXNlIFwieHh4eFwiOlxuICAgICAgY2FzZSBcInh4XCI6XG4gICAgICAgIHJldHVybiBmb3JtYXRUaW1lem9uZSh0aW1lem9uZU9mZnNldCk7XG4gICAgICAvLyBIb3VycywgbWludXRlcyBhbmQgb3B0aW9uYWwgc2Vjb25kcyB3aXRoIGA6YCBkZWxpbWl0ZXJcbiAgICAgIC8vIE5vdGU6IG5laXRoZXIgSVNPLTg2MDEgbm9yIEphdmFTY3JpcHQgc3VwcG9ydHMgc2Vjb25kcyBpbiB0aW1lem9uZSBvZmZzZXRzXG4gICAgICAvLyBzbyB0aGlzIHRva2VuIGFsd2F5cyBoYXMgdGhlIHNhbWUgb3V0cHV0IGFzIGB4eHhgXG4gICAgICBjYXNlIFwieHh4eHhcIjpcbiAgICAgIGNhc2UgXCJ4eHhcIjpcbiAgICAgIC8vIEhvdXJzIGFuZCBtaW51dGVzIHdpdGggYDpgIGRlbGltaXRlclxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGZvcm1hdFRpbWV6b25lKHRpbWV6b25lT2Zmc2V0LCBcIjpcIik7XG4gICAgfVxuICB9LFxuICAvLyBUaW1lem9uZSAoR01UKVxuICBPOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgX2xvY2FsaXplKSB7XG4gICAgY29uc3QgdGltZXpvbmVPZmZzZXQgPSBkYXRlLmdldFRpbWV6b25lT2Zmc2V0KCk7XG4gICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgLy8gU2hvcnRcbiAgICAgIGNhc2UgXCJPXCI6XG4gICAgICBjYXNlIFwiT09cIjpcbiAgICAgIGNhc2UgXCJPT09cIjpcbiAgICAgICAgcmV0dXJuIFwiR01UXCIgKyBmb3JtYXRUaW1lem9uZVNob3J0KHRpbWV6b25lT2Zmc2V0LCBcIjpcIik7XG4gICAgICAvLyBMb25nXG4gICAgICBjYXNlIFwiT09PT1wiOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIFwiR01UXCIgKyBmb3JtYXRUaW1lem9uZSh0aW1lem9uZU9mZnNldCwgXCI6XCIpO1xuICAgIH1cbiAgfSxcbiAgLy8gVGltZXpvbmUgKHNwZWNpZmljIG5vbi1sb2NhdGlvbilcbiAgejogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIF9sb2NhbGl6ZSkge1xuICAgIGNvbnN0IHRpbWV6b25lT2Zmc2V0ID0gZGF0ZS5nZXRUaW1lem9uZU9mZnNldCgpO1xuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIC8vIFNob3J0XG4gICAgICBjYXNlIFwielwiOlxuICAgICAgY2FzZSBcInp6XCI6XG4gICAgICBjYXNlIFwienp6XCI6XG4gICAgICAgIHJldHVybiBcIkdNVFwiICsgZm9ybWF0VGltZXpvbmVTaG9ydCh0aW1lem9uZU9mZnNldCwgXCI6XCIpO1xuICAgICAgLy8gTG9uZ1xuICAgICAgY2FzZSBcInp6enpcIjpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBcIkdNVFwiICsgZm9ybWF0VGltZXpvbmUodGltZXpvbmVPZmZzZXQsIFwiOlwiKTtcbiAgICB9XG4gIH0sXG4gIC8vIFNlY29uZHMgdGltZXN0YW1wXG4gIHQ6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBfbG9jYWxpemUpIHtcbiAgICBjb25zdCB0aW1lc3RhbXAgPSBNYXRoLnRydW5jKCtkYXRlIC8gMWUzKTtcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKHRpbWVzdGFtcCwgdG9rZW4ubGVuZ3RoKTtcbiAgfSxcbiAgLy8gTWlsbGlzZWNvbmRzIHRpbWVzdGFtcFxuICBUOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgX2xvY2FsaXplKSB7XG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcygrZGF0ZSwgdG9rZW4ubGVuZ3RoKTtcbiAgfVxufTtcbmZ1bmN0aW9uIGZvcm1hdFRpbWV6b25lU2hvcnQob2Zmc2V0LCBkZWxpbWl0ZXIgPSBcIlwiKSB7XG4gIGNvbnN0IHNpZ24gPSBvZmZzZXQgPiAwID8gXCItXCIgOiBcIitcIjtcbiAgY29uc3QgYWJzT2Zmc2V0ID0gTWF0aC5hYnMob2Zmc2V0KTtcbiAgY29uc3QgaG91cnMgPSBNYXRoLnRydW5jKGFic09mZnNldCAvIDYwKTtcbiAgY29uc3QgbWludXRlcyA9IGFic09mZnNldCAlIDYwO1xuICBpZiAobWludXRlcyA9PT0gMCkge1xuICAgIHJldHVybiBzaWduICsgU3RyaW5nKGhvdXJzKTtcbiAgfVxuICByZXR1cm4gc2lnbiArIFN0cmluZyhob3VycykgKyBkZWxpbWl0ZXIgKyBhZGRMZWFkaW5nWmVyb3MobWludXRlcywgMik7XG59XG5mdW5jdGlvbiBmb3JtYXRUaW1lem9uZVdpdGhPcHRpb25hbE1pbnV0ZXMob2Zmc2V0LCBkZWxpbWl0ZXIpIHtcbiAgaWYgKG9mZnNldCAlIDYwID09PSAwKSB7XG4gICAgY29uc3Qgc2lnbiA9IG9mZnNldCA+IDAgPyBcIi1cIiA6IFwiK1wiO1xuICAgIHJldHVybiBzaWduICsgYWRkTGVhZGluZ1plcm9zKE1hdGguYWJzKG9mZnNldCkgLyA2MCwgMik7XG4gIH1cbiAgcmV0dXJuIGZvcm1hdFRpbWV6b25lKG9mZnNldCwgZGVsaW1pdGVyKTtcbn1cbmZ1bmN0aW9uIGZvcm1hdFRpbWV6b25lKG9mZnNldCwgZGVsaW1pdGVyID0gXCJcIikge1xuICBjb25zdCBzaWduID0gb2Zmc2V0ID4gMCA/IFwiLVwiIDogXCIrXCI7XG4gIGNvbnN0IGFic09mZnNldCA9IE1hdGguYWJzKG9mZnNldCk7XG4gIGNvbnN0IGhvdXJzID0gYWRkTGVhZGluZ1plcm9zKE1hdGgudHJ1bmMoYWJzT2Zmc2V0IC8gNjApLCAyKTtcbiAgY29uc3QgbWludXRlcyA9IGFkZExlYWRpbmdaZXJvcyhhYnNPZmZzZXQgJSA2MCwgMik7XG4gIHJldHVybiBzaWduICsgaG91cnMgKyBkZWxpbWl0ZXIgKyBtaW51dGVzO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvZm9ybWF0L2xvbmdGb3JtYXR0ZXJzLmpzXG52YXIgZGF0ZUxvbmdGb3JtYXR0ZXIgPSAocGF0dGVybiwgZm9ybWF0TG9uZzIpID0+IHtcbiAgc3dpdGNoIChwYXR0ZXJuKSB7XG4gICAgY2FzZSBcIlBcIjpcbiAgICAgIHJldHVybiBmb3JtYXRMb25nMi5kYXRlKHsgd2lkdGg6IFwic2hvcnRcIiB9KTtcbiAgICBjYXNlIFwiUFBcIjpcbiAgICAgIHJldHVybiBmb3JtYXRMb25nMi5kYXRlKHsgd2lkdGg6IFwibWVkaXVtXCIgfSk7XG4gICAgY2FzZSBcIlBQUFwiOlxuICAgICAgcmV0dXJuIGZvcm1hdExvbmcyLmRhdGUoeyB3aWR0aDogXCJsb25nXCIgfSk7XG4gICAgY2FzZSBcIlBQUFBcIjpcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGZvcm1hdExvbmcyLmRhdGUoeyB3aWR0aDogXCJmdWxsXCIgfSk7XG4gIH1cbn07XG52YXIgdGltZUxvbmdGb3JtYXR0ZXIgPSAocGF0dGVybiwgZm9ybWF0TG9uZzIpID0+IHtcbiAgc3dpdGNoIChwYXR0ZXJuKSB7XG4gICAgY2FzZSBcInBcIjpcbiAgICAgIHJldHVybiBmb3JtYXRMb25nMi50aW1lKHsgd2lkdGg6IFwic2hvcnRcIiB9KTtcbiAgICBjYXNlIFwicHBcIjpcbiAgICAgIHJldHVybiBmb3JtYXRMb25nMi50aW1lKHsgd2lkdGg6IFwibWVkaXVtXCIgfSk7XG4gICAgY2FzZSBcInBwcFwiOlxuICAgICAgcmV0dXJuIGZvcm1hdExvbmcyLnRpbWUoeyB3aWR0aDogXCJsb25nXCIgfSk7XG4gICAgY2FzZSBcInBwcHBcIjpcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGZvcm1hdExvbmcyLnRpbWUoeyB3aWR0aDogXCJmdWxsXCIgfSk7XG4gIH1cbn07XG52YXIgZGF0ZVRpbWVMb25nRm9ybWF0dGVyID0gKHBhdHRlcm4sIGZvcm1hdExvbmcyKSA9PiB7XG4gIGNvbnN0IG1hdGNoUmVzdWx0ID0gcGF0dGVybi5tYXRjaCgvKFArKShwKyk/LykgfHwgW107XG4gIGNvbnN0IGRhdGVQYXR0ZXJuID0gbWF0Y2hSZXN1bHRbMV07XG4gIGNvbnN0IHRpbWVQYXR0ZXJuID0gbWF0Y2hSZXN1bHRbMl07XG4gIGlmICghdGltZVBhdHRlcm4pIHtcbiAgICByZXR1cm4gZGF0ZUxvbmdGb3JtYXR0ZXIocGF0dGVybiwgZm9ybWF0TG9uZzIpO1xuICB9XG4gIGxldCBkYXRlVGltZUZvcm1hdDtcbiAgc3dpdGNoIChkYXRlUGF0dGVybikge1xuICAgIGNhc2UgXCJQXCI6XG4gICAgICBkYXRlVGltZUZvcm1hdCA9IGZvcm1hdExvbmcyLmRhdGVUaW1lKHsgd2lkdGg6IFwic2hvcnRcIiB9KTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJQUFwiOlxuICAgICAgZGF0ZVRpbWVGb3JtYXQgPSBmb3JtYXRMb25nMi5kYXRlVGltZSh7IHdpZHRoOiBcIm1lZGl1bVwiIH0pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcIlBQUFwiOlxuICAgICAgZGF0ZVRpbWVGb3JtYXQgPSBmb3JtYXRMb25nMi5kYXRlVGltZSh7IHdpZHRoOiBcImxvbmdcIiB9KTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJQUFBQXCI6XG4gICAgZGVmYXVsdDpcbiAgICAgIGRhdGVUaW1lRm9ybWF0ID0gZm9ybWF0TG9uZzIuZGF0ZVRpbWUoeyB3aWR0aDogXCJmdWxsXCIgfSk7XG4gICAgICBicmVhaztcbiAgfVxuICByZXR1cm4gZGF0ZVRpbWVGb3JtYXQucmVwbGFjZShcInt7ZGF0ZX19XCIsIGRhdGVMb25nRm9ybWF0dGVyKGRhdGVQYXR0ZXJuLCBmb3JtYXRMb25nMikpLnJlcGxhY2UoXCJ7e3RpbWV9fVwiLCB0aW1lTG9uZ0Zvcm1hdHRlcih0aW1lUGF0dGVybiwgZm9ybWF0TG9uZzIpKTtcbn07XG52YXIgbG9uZ0Zvcm1hdHRlcnMgPSB7XG4gIHA6IHRpbWVMb25nRm9ybWF0dGVyLFxuICBQOiBkYXRlVGltZUxvbmdGb3JtYXR0ZXJcbn07XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9wcm90ZWN0ZWRUb2tlbnMuanNcbnZhciBkYXlPZlllYXJUb2tlblJFID0gL15EKyQvO1xudmFyIHdlZWtZZWFyVG9rZW5SRSA9IC9eWSskLztcbnZhciB0aHJvd1Rva2VucyA9IFtcIkRcIiwgXCJERFwiLCBcIllZXCIsIFwiWVlZWVwiXTtcbmZ1bmN0aW9uIGlzUHJvdGVjdGVkRGF5T2ZZZWFyVG9rZW4odG9rZW4pIHtcbiAgcmV0dXJuIGRheU9mWWVhclRva2VuUkUudGVzdCh0b2tlbik7XG59XG5mdW5jdGlvbiBpc1Byb3RlY3RlZFdlZWtZZWFyVG9rZW4odG9rZW4pIHtcbiAgcmV0dXJuIHdlZWtZZWFyVG9rZW5SRS50ZXN0KHRva2VuKTtcbn1cbmZ1bmN0aW9uIHdhcm5PclRocm93UHJvdGVjdGVkRXJyb3IodG9rZW4sIGZvcm1hdDIsIGlucHV0KSB7XG4gIGNvbnN0IF9tZXNzYWdlID0gbWVzc2FnZSh0b2tlbiwgZm9ybWF0MiwgaW5wdXQpO1xuICBjb25zb2xlLndhcm4oX21lc3NhZ2UpO1xuICBpZiAodGhyb3dUb2tlbnMuaW5jbHVkZXModG9rZW4pKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcihfbWVzc2FnZSk7XG59XG5mdW5jdGlvbiBtZXNzYWdlKHRva2VuLCBmb3JtYXQyLCBpbnB1dCkge1xuICBjb25zdCBzdWJqZWN0ID0gdG9rZW5bMF0gPT09IFwiWVwiID8gXCJ5ZWFyc1wiIDogXCJkYXlzIG9mIHRoZSBtb250aFwiO1xuICByZXR1cm4gYFVzZSBcXGAke3Rva2VuLnRvTG93ZXJDYXNlKCl9XFxgIGluc3RlYWQgb2YgXFxgJHt0b2tlbn1cXGAgKGluIFxcYCR7Zm9ybWF0Mn1cXGApIGZvciBmb3JtYXR0aW5nICR7c3ViamVjdH0gdG8gdGhlIGlucHV0IFxcYCR7aW5wdXR9XFxgOyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VuaWNvZGVUb2tlbnMubWRgO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2lzRGF0ZS5qc1xuZnVuY3Rpb24gaXNEYXRlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIERhdGUgfHwgdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09IFwiW29iamVjdCBEYXRlXVwiO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2lzVmFsaWQuanNcbmZ1bmN0aW9uIGlzVmFsaWQoZGF0ZSkge1xuICByZXR1cm4gISghaXNEYXRlKGRhdGUpICYmIHR5cGVvZiBkYXRlICE9PSBcIm51bWJlclwiIHx8IGlzTmFOKCt0b0RhdGUoZGF0ZSkpKTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9mb3JtYXQuanNcbnZhciBmb3JtYXR0aW5nVG9rZW5zUmVnRXhwID0gL1t5WVFxTUx3SWREZWNpaEhLa21zXW98KFxcdylcXDEqfCcnfCcoJyd8W14nXSkrKCd8JCl8Li9nO1xudmFyIGxvbmdGb3JtYXR0aW5nVG9rZW5zUmVnRXhwID0gL1ArcCt8UCt8cCt8Jyd8JygnJ3xbXiddKSsoJ3wkKXwuL2c7XG52YXIgZXNjYXBlZFN0cmluZ1JlZ0V4cCA9IC9eJyhbXl0qPyknPyQvO1xudmFyIGRvdWJsZVF1b3RlUmVnRXhwID0gLycnL2c7XG52YXIgdW5lc2NhcGVkTGF0aW5DaGFyYWN0ZXJSZWdFeHAgPSAvW2EtekEtWl0vO1xuZnVuY3Rpb24gZm9ybWF0KGRhdGUsIGZvcm1hdFN0ciwgb3B0aW9ucykge1xuICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oLCBfaSwgX2osIF9rLCBfbCwgX20sIF9uLCBfbywgX3AsIF9xLCBfcjtcbiAgY29uc3QgZGVmYXVsdE9wdGlvbnMyID0gZ2V0RGVmYXVsdE9wdGlvbnMoKTtcbiAgY29uc3QgbG9jYWxlID0gKF9iID0gKF9hID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5sb2NhbGUpICE9IG51bGwgPyBfYSA6IGRlZmF1bHRPcHRpb25zMi5sb2NhbGUpICE9IG51bGwgPyBfYiA6IGVuVVM7XG4gIGNvbnN0IGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA9IChfaiA9IChfaSA9IChfZiA9IChfZSA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlKSAhPSBudWxsID8gX2UgOiAoX2QgPSAoX2MgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmxvY2FsZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfZC5maXJzdFdlZWtDb250YWluc0RhdGUpICE9IG51bGwgPyBfZiA6IGRlZmF1bHRPcHRpb25zMi5maXJzdFdlZWtDb250YWluc0RhdGUpICE9IG51bGwgPyBfaSA6IChfaCA9IChfZyA9IGRlZmF1bHRPcHRpb25zMi5sb2NhbGUpID09IG51bGwgPyB2b2lkIDAgOiBfZy5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2guZmlyc3RXZWVrQ29udGFpbnNEYXRlKSAhPSBudWxsID8gX2ogOiAxO1xuICBjb25zdCB3ZWVrU3RhcnRzT24gPSAoX3IgPSAoX3EgPSAoX24gPSAoX20gPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLndlZWtTdGFydHNPbikgIT0gbnVsbCA/IF9tIDogKF9sID0gKF9rID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5sb2NhbGUpID09IG51bGwgPyB2b2lkIDAgOiBfay5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2wud2Vla1N0YXJ0c09uKSAhPSBudWxsID8gX24gOiBkZWZhdWx0T3B0aW9uczIud2Vla1N0YXJ0c09uKSAhPSBudWxsID8gX3EgOiAoX3AgPSAoX28gPSBkZWZhdWx0T3B0aW9uczIubG9jYWxlKSA9PSBudWxsID8gdm9pZCAwIDogX28ub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9wLndlZWtTdGFydHNPbikgIT0gbnVsbCA/IF9yIDogMDtcbiAgY29uc3Qgb3JpZ2luYWxEYXRlID0gdG9EYXRlKGRhdGUsIG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4pO1xuICBpZiAoIWlzVmFsaWQob3JpZ2luYWxEYXRlKSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFwiSW52YWxpZCB0aW1lIHZhbHVlXCIpO1xuICB9XG4gIGxldCBwYXJ0cyA9IGZvcm1hdFN0ci5tYXRjaChsb25nRm9ybWF0dGluZ1Rva2Vuc1JlZ0V4cCkubWFwKChzdWJzdHJpbmcpID0+IHtcbiAgICBjb25zdCBmaXJzdENoYXJhY3RlciA9IHN1YnN0cmluZ1swXTtcbiAgICBpZiAoZmlyc3RDaGFyYWN0ZXIgPT09IFwicFwiIHx8IGZpcnN0Q2hhcmFjdGVyID09PSBcIlBcIikge1xuICAgICAgY29uc3QgbG9uZ0Zvcm1hdHRlciA9IGxvbmdGb3JtYXR0ZXJzW2ZpcnN0Q2hhcmFjdGVyXTtcbiAgICAgIHJldHVybiBsb25nRm9ybWF0dGVyKHN1YnN0cmluZywgbG9jYWxlLmZvcm1hdExvbmcpO1xuICAgIH1cbiAgICByZXR1cm4gc3Vic3RyaW5nO1xuICB9KS5qb2luKFwiXCIpLm1hdGNoKGZvcm1hdHRpbmdUb2tlbnNSZWdFeHApLm1hcCgoc3Vic3RyaW5nKSA9PiB7XG4gICAgaWYgKHN1YnN0cmluZyA9PT0gXCInJ1wiKSB7XG4gICAgICByZXR1cm4geyBpc1Rva2VuOiBmYWxzZSwgdmFsdWU6IFwiJ1wiIH07XG4gICAgfVxuICAgIGNvbnN0IGZpcnN0Q2hhcmFjdGVyID0gc3Vic3RyaW5nWzBdO1xuICAgIGlmIChmaXJzdENoYXJhY3RlciA9PT0gXCInXCIpIHtcbiAgICAgIHJldHVybiB7IGlzVG9rZW46IGZhbHNlLCB2YWx1ZTogY2xlYW5Fc2NhcGVkU3RyaW5nKHN1YnN0cmluZykgfTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdHRlcnNbZmlyc3RDaGFyYWN0ZXJdKSB7XG4gICAgICByZXR1cm4geyBpc1Rva2VuOiB0cnVlLCB2YWx1ZTogc3Vic3RyaW5nIH07XG4gICAgfVxuICAgIGlmIChmaXJzdENoYXJhY3Rlci5tYXRjaCh1bmVzY2FwZWRMYXRpbkNoYXJhY3RlclJlZ0V4cCkpIHtcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFxuICAgICAgICBcIkZvcm1hdCBzdHJpbmcgY29udGFpbnMgYW4gdW5lc2NhcGVkIGxhdGluIGFscGhhYmV0IGNoYXJhY3RlciBgXCIgKyBmaXJzdENoYXJhY3RlciArIFwiYFwiXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4geyBpc1Rva2VuOiBmYWxzZSwgdmFsdWU6IHN1YnN0cmluZyB9O1xuICB9KTtcbiAgaWYgKGxvY2FsZS5sb2NhbGl6ZS5wcmVwcm9jZXNzb3IpIHtcbiAgICBwYXJ0cyA9IGxvY2FsZS5sb2NhbGl6ZS5wcmVwcm9jZXNzb3Iob3JpZ2luYWxEYXRlLCBwYXJ0cyk7XG4gIH1cbiAgY29uc3QgZm9ybWF0dGVyT3B0aW9ucyA9IHtcbiAgICBmaXJzdFdlZWtDb250YWluc0RhdGUsXG4gICAgd2Vla1N0YXJ0c09uLFxuICAgIGxvY2FsZVxuICB9O1xuICByZXR1cm4gcGFydHMubWFwKChwYXJ0KSA9PiB7XG4gICAgaWYgKCFwYXJ0LmlzVG9rZW4pIHJldHVybiBwYXJ0LnZhbHVlO1xuICAgIGNvbnN0IHRva2VuID0gcGFydC52YWx1ZTtcbiAgICBpZiAoIShvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnVzZUFkZGl0aW9uYWxXZWVrWWVhclRva2VucykgJiYgaXNQcm90ZWN0ZWRXZWVrWWVhclRva2VuKHRva2VuKSB8fCAhKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMudXNlQWRkaXRpb25hbERheU9mWWVhclRva2VucykgJiYgaXNQcm90ZWN0ZWREYXlPZlllYXJUb2tlbih0b2tlbikpIHtcbiAgICAgIHdhcm5PclRocm93UHJvdGVjdGVkRXJyb3IodG9rZW4sIGZvcm1hdFN0ciwgU3RyaW5nKGRhdGUpKTtcbiAgICB9XG4gICAgY29uc3QgZm9ybWF0dGVyID0gZm9ybWF0dGVyc1t0b2tlblswXV07XG4gICAgcmV0dXJuIGZvcm1hdHRlcihvcmlnaW5hbERhdGUsIHRva2VuLCBsb2NhbGUubG9jYWxpemUsIGZvcm1hdHRlck9wdGlvbnMpO1xuICB9KS5qb2luKFwiXCIpO1xufVxuZnVuY3Rpb24gY2xlYW5Fc2NhcGVkU3RyaW5nKGlucHV0KSB7XG4gIGNvbnN0IG1hdGNoZWQgPSBpbnB1dC5tYXRjaChlc2NhcGVkU3RyaW5nUmVnRXhwKTtcbiAgaWYgKCFtYXRjaGVkKSB7XG4gICAgcmV0dXJuIGlucHV0O1xuICB9XG4gIHJldHVybiBtYXRjaGVkWzFdLnJlcGxhY2UoZG91YmxlUXVvdGVSZWdFeHAsIFwiJ1wiKTtcbn1cblxuLy8gc3JjL3RoaXJkLXBhcnR5L3Byb3BlcnR5LnRzeFxudmFyIGltcG9ydF9mb3JtYXRfbnVtYmVyID0gX190b0VTTShyZXF1aXJlX2Zvcm1hdF9udW1iZXIoKSwgMSk7XG5pbXBvcnQgXCJub3Rpb24tdHlwZXNcIjtcbmltcG9ydCAqIGFzIFJlYWN0MTUgZnJvbSBcInJlYWN0XCI7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvYWRkRGF5cy5qc1xuZnVuY3Rpb24gYWRkRGF5cyhkYXRlLCBhbW91bnQsIG9wdGlvbnMpIHtcbiAgY29uc3QgX2RhdGUgPSB0b0RhdGUoZGF0ZSwgb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5pbik7XG4gIGlmIChpc05hTihhbW91bnQpKSByZXR1cm4gY29uc3RydWN0RnJvbSgob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5pbikgfHwgZGF0ZSwgTmFOKTtcbiAgaWYgKCFhbW91bnQpIHJldHVybiBfZGF0ZTtcbiAgX2RhdGUuc2V0RGF0ZShfZGF0ZS5nZXREYXRlKCkgKyBhbW91bnQpO1xuICByZXR1cm4gX2RhdGU7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvYWRkTW9udGhzLmpzXG5mdW5jdGlvbiBhZGRNb250aHMoZGF0ZSwgYW1vdW50LCBvcHRpb25zKSB7XG4gIGNvbnN0IF9kYXRlID0gdG9EYXRlKGRhdGUsIG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4pO1xuICBpZiAoaXNOYU4oYW1vdW50KSkgcmV0dXJuIGNvbnN0cnVjdEZyb20oKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4pIHx8IGRhdGUsIE5hTik7XG4gIGlmICghYW1vdW50KSB7XG4gICAgcmV0dXJuIF9kYXRlO1xuICB9XG4gIGNvbnN0IGRheU9mTW9udGggPSBfZGF0ZS5nZXREYXRlKCk7XG4gIGNvbnN0IGVuZE9mRGVzaXJlZE1vbnRoID0gY29uc3RydWN0RnJvbSgob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5pbikgfHwgZGF0ZSwgX2RhdGUuZ2V0VGltZSgpKTtcbiAgZW5kT2ZEZXNpcmVkTW9udGguc2V0TW9udGgoX2RhdGUuZ2V0TW9udGgoKSArIGFtb3VudCArIDEsIDApO1xuICBjb25zdCBkYXlzSW5Nb250aCA9IGVuZE9mRGVzaXJlZE1vbnRoLmdldERhdGUoKTtcbiAgaWYgKGRheU9mTW9udGggPj0gZGF5c0luTW9udGgpIHtcbiAgICByZXR1cm4gZW5kT2ZEZXNpcmVkTW9udGg7XG4gIH0gZWxzZSB7XG4gICAgX2RhdGUuc2V0RnVsbFllYXIoXG4gICAgICBlbmRPZkRlc2lyZWRNb250aC5nZXRGdWxsWWVhcigpLFxuICAgICAgZW5kT2ZEZXNpcmVkTW9udGguZ2V0TW9udGgoKSxcbiAgICAgIGRheU9mTW9udGhcbiAgICApO1xuICAgIHJldHVybiBfZGF0ZTtcbiAgfVxufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2FkZC5qc1xuZnVuY3Rpb24gYWRkKGRhdGUsIGR1cmF0aW9uLCBvcHRpb25zKSB7XG4gIGNvbnN0IHtcbiAgICB5ZWFycyA9IDAsXG4gICAgbW9udGhzID0gMCxcbiAgICB3ZWVrcyA9IDAsXG4gICAgZGF5cyA9IDAsXG4gICAgaG91cnMgPSAwLFxuICAgIG1pbnV0ZXMgPSAwLFxuICAgIHNlY29uZHMgPSAwXG4gIH0gPSBkdXJhdGlvbjtcbiAgY29uc3QgX2RhdGUgPSB0b0RhdGUoZGF0ZSwgb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5pbik7XG4gIGNvbnN0IGRhdGVXaXRoTW9udGhzID0gbW9udGhzIHx8IHllYXJzID8gYWRkTW9udGhzKF9kYXRlLCBtb250aHMgKyB5ZWFycyAqIDEyKSA6IF9kYXRlO1xuICBjb25zdCBkYXRlV2l0aERheXMgPSBkYXlzIHx8IHdlZWtzID8gYWRkRGF5cyhkYXRlV2l0aE1vbnRocywgZGF5cyArIHdlZWtzICogNykgOiBkYXRlV2l0aE1vbnRocztcbiAgY29uc3QgbWludXRlc1RvQWRkID0gbWludXRlcyArIGhvdXJzICogNjA7XG4gIGNvbnN0IHNlY29uZHNUb0FkZCA9IHNlY29uZHMgKyBtaW51dGVzVG9BZGQgKiA2MDtcbiAgY29uc3QgbXNUb0FkZCA9IHNlY29uZHNUb0FkZCAqIDFlMztcbiAgcmV0dXJuIGNvbnN0cnVjdEZyb20oKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4pIHx8IGRhdGUsICtkYXRlV2l0aERheXMgKyBtc1RvQWRkKTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9nZXREYXRlLmpzXG5mdW5jdGlvbiBnZXREYXRlKGRhdGUsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvRGF0ZShkYXRlLCBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKS5nZXREYXRlKCk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZ2V0RGF5LmpzXG5mdW5jdGlvbiBnZXREYXkoZGF0ZSwgb3B0aW9ucykge1xuICByZXR1cm4gdG9EYXRlKGRhdGUsIG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4pLmdldERheSgpO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldEhvdXJzLmpzXG5mdW5jdGlvbiBnZXRIb3VycyhkYXRlLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b0RhdGUoZGF0ZSwgb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5pbikuZ2V0SG91cnMoKTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9nZXRNaW51dGVzLmpzXG5mdW5jdGlvbiBnZXRNaW51dGVzKGRhdGUsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvRGF0ZShkYXRlLCBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKS5nZXRNaW51dGVzKCk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZ2V0TW9udGguanNcbmZ1bmN0aW9uIGdldE1vbnRoKGRhdGUsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvRGF0ZShkYXRlLCBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKS5nZXRNb250aCgpO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldFllYXIuanNcbmZ1bmN0aW9uIGdldFllYXIoZGF0ZSwgb3B0aW9ucykge1xuICByZXR1cm4gdG9EYXRlKGRhdGUsIG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4pLmdldEZ1bGxZZWFyKCk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9ub3JtYWxpemVJbnRlcnZhbC5qc1xuZnVuY3Rpb24gbm9ybWFsaXplSW50ZXJ2YWwoY29udGV4dCwgaW50ZXJ2YWwpIHtcbiAgY29uc3QgW3N0YXJ0LCBlbmRdID0gbm9ybWFsaXplRGF0ZXMoY29udGV4dCwgaW50ZXJ2YWwuc3RhcnQsIGludGVydmFsLmVuZCk7XG4gIHJldHVybiB7IHN0YXJ0LCBlbmQgfTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9kaWZmZXJlbmNlSW5EYXlzLmpzXG5mdW5jdGlvbiBkaWZmZXJlbmNlSW5EYXlzKGxhdGVyRGF0ZSwgZWFybGllckRhdGUsIG9wdGlvbnMpIHtcbiAgY29uc3QgW2xhdGVyRGF0ZV8sIGVhcmxpZXJEYXRlX10gPSBub3JtYWxpemVEYXRlcyhcbiAgICBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluLFxuICAgIGxhdGVyRGF0ZSxcbiAgICBlYXJsaWVyRGF0ZVxuICApO1xuICBjb25zdCBzaWduID0gY29tcGFyZUxvY2FsQXNjKGxhdGVyRGF0ZV8sIGVhcmxpZXJEYXRlXyk7XG4gIGNvbnN0IGRpZmZlcmVuY2UgPSBNYXRoLmFicyhcbiAgICBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMobGF0ZXJEYXRlXywgZWFybGllckRhdGVfKVxuICApO1xuICBsYXRlckRhdGVfLnNldERhdGUobGF0ZXJEYXRlXy5nZXREYXRlKCkgLSBzaWduICogZGlmZmVyZW5jZSk7XG4gIGNvbnN0IGlzTGFzdERheU5vdEZ1bGwgPSBOdW1iZXIoXG4gICAgY29tcGFyZUxvY2FsQXNjKGxhdGVyRGF0ZV8sIGVhcmxpZXJEYXRlXykgPT09IC1zaWduXG4gICk7XG4gIGNvbnN0IHJlc3VsdCA9IHNpZ24gKiAoZGlmZmVyZW5jZSAtIGlzTGFzdERheU5vdEZ1bGwpO1xuICByZXR1cm4gcmVzdWx0ID09PSAwID8gMCA6IHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGNvbXBhcmVMb2NhbEFzYyhsYXRlckRhdGUsIGVhcmxpZXJEYXRlKSB7XG4gIGNvbnN0IGRpZmYgPSBsYXRlckRhdGUuZ2V0RnVsbFllYXIoKSAtIGVhcmxpZXJEYXRlLmdldEZ1bGxZZWFyKCkgfHwgbGF0ZXJEYXRlLmdldE1vbnRoKCkgLSBlYXJsaWVyRGF0ZS5nZXRNb250aCgpIHx8IGxhdGVyRGF0ZS5nZXREYXRlKCkgLSBlYXJsaWVyRGF0ZS5nZXREYXRlKCkgfHwgbGF0ZXJEYXRlLmdldEhvdXJzKCkgLSBlYXJsaWVyRGF0ZS5nZXRIb3VycygpIHx8IGxhdGVyRGF0ZS5nZXRNaW51dGVzKCkgLSBlYXJsaWVyRGF0ZS5nZXRNaW51dGVzKCkgfHwgbGF0ZXJEYXRlLmdldFNlY29uZHMoKSAtIGVhcmxpZXJEYXRlLmdldFNlY29uZHMoKSB8fCBsYXRlckRhdGUuZ2V0TWlsbGlzZWNvbmRzKCkgLSBlYXJsaWVyRGF0ZS5nZXRNaWxsaXNlY29uZHMoKTtcbiAgaWYgKGRpZmYgPCAwKSByZXR1cm4gLTE7XG4gIGlmIChkaWZmID4gMCkgcmV0dXJuIDE7XG4gIHJldHVybiBkaWZmO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvZ2V0Um91bmRpbmdNZXRob2QuanNcbmZ1bmN0aW9uIGdldFJvdW5kaW5nTWV0aG9kKG1ldGhvZCkge1xuICByZXR1cm4gKG51bWJlcikgPT4ge1xuICAgIGNvbnN0IHJvdW5kID0gbWV0aG9kID8gTWF0aFttZXRob2RdIDogTWF0aC50cnVuYztcbiAgICBjb25zdCByZXN1bHQgPSByb3VuZChudW1iZXIpO1xuICAgIHJldHVybiByZXN1bHQgPT09IDAgPyAwIDogcmVzdWx0O1xuICB9O1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbkhvdXJzLmpzXG5mdW5jdGlvbiBkaWZmZXJlbmNlSW5Ib3VycyhsYXRlckRhdGUsIGVhcmxpZXJEYXRlLCBvcHRpb25zKSB7XG4gIGNvbnN0IFtsYXRlckRhdGVfLCBlYXJsaWVyRGF0ZV9dID0gbm9ybWFsaXplRGF0ZXMoXG4gICAgb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5pbixcbiAgICBsYXRlckRhdGUsXG4gICAgZWFybGllckRhdGVcbiAgKTtcbiAgY29uc3QgZGlmZiA9ICgrbGF0ZXJEYXRlXyAtICtlYXJsaWVyRGF0ZV8pIC8gbWlsbGlzZWNvbmRzSW5Ib3VyO1xuICByZXR1cm4gZ2V0Um91bmRpbmdNZXRob2Qob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5yb3VuZGluZ01ldGhvZCkoZGlmZik7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzLmpzXG5mdW5jdGlvbiBkaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMobGF0ZXJEYXRlLCBlYXJsaWVyRGF0ZSkge1xuICByZXR1cm4gK3RvRGF0ZShsYXRlckRhdGUpIC0gK3RvRGF0ZShlYXJsaWVyRGF0ZSk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZGlmZmVyZW5jZUluTWludXRlcy5qc1xuZnVuY3Rpb24gZGlmZmVyZW5jZUluTWludXRlcyhkYXRlTGVmdCwgZGF0ZVJpZ2h0LCBvcHRpb25zKSB7XG4gIGNvbnN0IGRpZmYgPSBkaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMoZGF0ZUxlZnQsIGRhdGVSaWdodCkgLyBtaWxsaXNlY29uZHNJbk1pbnV0ZTtcbiAgcmV0dXJuIGdldFJvdW5kaW5nTWV0aG9kKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMucm91bmRpbmdNZXRob2QpKGRpZmYpO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2NvbXBhcmVBc2MuanNcbmZ1bmN0aW9uIGNvbXBhcmVBc2MoZGF0ZUxlZnQsIGRhdGVSaWdodCkge1xuICBjb25zdCBkaWZmID0gK3RvRGF0ZShkYXRlTGVmdCkgLSArdG9EYXRlKGRhdGVSaWdodCk7XG4gIGlmIChkaWZmIDwgMCkgcmV0dXJuIC0xO1xuICBlbHNlIGlmIChkaWZmID4gMCkgcmV0dXJuIDE7XG4gIHJldHVybiBkaWZmO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzLmpzXG5mdW5jdGlvbiBkaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocyhsYXRlckRhdGUsIGVhcmxpZXJEYXRlLCBvcHRpb25zKSB7XG4gIGNvbnN0IFtsYXRlckRhdGVfLCBlYXJsaWVyRGF0ZV9dID0gbm9ybWFsaXplRGF0ZXMoXG4gICAgb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5pbixcbiAgICBsYXRlckRhdGUsXG4gICAgZWFybGllckRhdGVcbiAgKTtcbiAgY29uc3QgeWVhcnNEaWZmID0gbGF0ZXJEYXRlXy5nZXRGdWxsWWVhcigpIC0gZWFybGllckRhdGVfLmdldEZ1bGxZZWFyKCk7XG4gIGNvbnN0IG1vbnRoc0RpZmYgPSBsYXRlckRhdGVfLmdldE1vbnRoKCkgLSBlYXJsaWVyRGF0ZV8uZ2V0TW9udGgoKTtcbiAgcmV0dXJuIHllYXJzRGlmZiAqIDEyICsgbW9udGhzRGlmZjtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lbmRPZkRheS5qc1xuZnVuY3Rpb24gZW5kT2ZEYXkoZGF0ZSwgb3B0aW9ucykge1xuICBjb25zdCBfZGF0ZSA9IHRvRGF0ZShkYXRlLCBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKTtcbiAgX2RhdGUuc2V0SG91cnMoMjMsIDU5LCA1OSwgOTk5KTtcbiAgcmV0dXJuIF9kYXRlO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VuZE9mTW9udGguanNcbmZ1bmN0aW9uIGVuZE9mTW9udGgoZGF0ZSwgb3B0aW9ucykge1xuICBjb25zdCBfZGF0ZSA9IHRvRGF0ZShkYXRlLCBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKTtcbiAgY29uc3QgbW9udGggPSBfZGF0ZS5nZXRNb250aCgpO1xuICBfZGF0ZS5zZXRGdWxsWWVhcihfZGF0ZS5nZXRGdWxsWWVhcigpLCBtb250aCArIDEsIDApO1xuICBfZGF0ZS5zZXRIb3VycygyMywgNTksIDU5LCA5OTkpO1xuICByZXR1cm4gX2RhdGU7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvaXNMYXN0RGF5T2ZNb250aC5qc1xuZnVuY3Rpb24gaXNMYXN0RGF5T2ZNb250aChkYXRlLCBvcHRpb25zKSB7XG4gIGNvbnN0IF9kYXRlID0gdG9EYXRlKGRhdGUsIG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4pO1xuICByZXR1cm4gK2VuZE9mRGF5KF9kYXRlLCBvcHRpb25zKSA9PT0gK2VuZE9mTW9udGgoX2RhdGUsIG9wdGlvbnMpO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZGF0ZS1mbnNANC4xLjAvbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbk1vbnRocy5qc1xuZnVuY3Rpb24gZGlmZmVyZW5jZUluTW9udGhzKGxhdGVyRGF0ZSwgZWFybGllckRhdGUsIG9wdGlvbnMpIHtcbiAgY29uc3QgW2xhdGVyRGF0ZV8sIHdvcmtpbmdMYXRlckRhdGUsIGVhcmxpZXJEYXRlX10gPSBub3JtYWxpemVEYXRlcyhcbiAgICBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluLFxuICAgIGxhdGVyRGF0ZSxcbiAgICBsYXRlckRhdGUsXG4gICAgZWFybGllckRhdGVcbiAgKTtcbiAgY29uc3Qgc2lnbiA9IGNvbXBhcmVBc2Mod29ya2luZ0xhdGVyRGF0ZSwgZWFybGllckRhdGVfKTtcbiAgY29uc3QgZGlmZmVyZW5jZSA9IE1hdGguYWJzKFxuICAgIGRpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzKHdvcmtpbmdMYXRlckRhdGUsIGVhcmxpZXJEYXRlXylcbiAgKTtcbiAgaWYgKGRpZmZlcmVuY2UgPCAxKSByZXR1cm4gMDtcbiAgaWYgKHdvcmtpbmdMYXRlckRhdGUuZ2V0TW9udGgoKSA9PT0gMSAmJiB3b3JraW5nTGF0ZXJEYXRlLmdldERhdGUoKSA+IDI3KVxuICAgIHdvcmtpbmdMYXRlckRhdGUuc2V0RGF0ZSgzMCk7XG4gIHdvcmtpbmdMYXRlckRhdGUuc2V0TW9udGgod29ya2luZ0xhdGVyRGF0ZS5nZXRNb250aCgpIC0gc2lnbiAqIGRpZmZlcmVuY2UpO1xuICBsZXQgaXNMYXN0TW9udGhOb3RGdWxsID0gY29tcGFyZUFzYyh3b3JraW5nTGF0ZXJEYXRlLCBlYXJsaWVyRGF0ZV8pID09PSAtc2lnbjtcbiAgaWYgKGlzTGFzdERheU9mTW9udGgobGF0ZXJEYXRlXykgJiYgZGlmZmVyZW5jZSA9PT0gMSAmJiBjb21wYXJlQXNjKGxhdGVyRGF0ZV8sIGVhcmxpZXJEYXRlXykgPT09IDEpIHtcbiAgICBpc0xhc3RNb250aE5vdEZ1bGwgPSBmYWxzZTtcbiAgfVxuICBjb25zdCByZXN1bHQgPSBzaWduICogKGRpZmZlcmVuY2UgLSAraXNMYXN0TW9udGhOb3RGdWxsKTtcbiAgcmV0dXJuIHJlc3VsdCA9PT0gMCA/IDAgOiByZXN1bHQ7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZGlmZmVyZW5jZUluU2Vjb25kcy5qc1xuZnVuY3Rpb24gZGlmZmVyZW5jZUluU2Vjb25kcyhsYXRlckRhdGUsIGVhcmxpZXJEYXRlLCBvcHRpb25zKSB7XG4gIGNvbnN0IGRpZmYgPSBkaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMobGF0ZXJEYXRlLCBlYXJsaWVyRGF0ZSkgLyAxZTM7XG4gIHJldHVybiBnZXRSb3VuZGluZ01ldGhvZChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnJvdW5kaW5nTWV0aG9kKShkaWZmKTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9kaWZmZXJlbmNlSW5DYWxlbmRhclllYXJzLmpzXG5mdW5jdGlvbiBkaWZmZXJlbmNlSW5DYWxlbmRhclllYXJzKGxhdGVyRGF0ZSwgZWFybGllckRhdGUsIG9wdGlvbnMpIHtcbiAgY29uc3QgW2xhdGVyRGF0ZV8sIGVhcmxpZXJEYXRlX10gPSBub3JtYWxpemVEYXRlcyhcbiAgICBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluLFxuICAgIGxhdGVyRGF0ZSxcbiAgICBlYXJsaWVyRGF0ZVxuICApO1xuICByZXR1cm4gbGF0ZXJEYXRlXy5nZXRGdWxsWWVhcigpIC0gZWFybGllckRhdGVfLmdldEZ1bGxZZWFyKCk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZGlmZmVyZW5jZUluWWVhcnMuanNcbmZ1bmN0aW9uIGRpZmZlcmVuY2VJblllYXJzKGxhdGVyRGF0ZSwgZWFybGllckRhdGUsIG9wdGlvbnMpIHtcbiAgY29uc3QgW2xhdGVyRGF0ZV8sIGVhcmxpZXJEYXRlX10gPSBub3JtYWxpemVEYXRlcyhcbiAgICBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluLFxuICAgIGxhdGVyRGF0ZSxcbiAgICBlYXJsaWVyRGF0ZVxuICApO1xuICBjb25zdCBzaWduID0gY29tcGFyZUFzYyhsYXRlckRhdGVfLCBlYXJsaWVyRGF0ZV8pO1xuICBjb25zdCBkaWZmID0gTWF0aC5hYnMoZGlmZmVyZW5jZUluQ2FsZW5kYXJZZWFycyhsYXRlckRhdGVfLCBlYXJsaWVyRGF0ZV8pKTtcbiAgbGF0ZXJEYXRlXy5zZXRGdWxsWWVhcigxNTg0KTtcbiAgZWFybGllckRhdGVfLnNldEZ1bGxZZWFyKDE1ODQpO1xuICBjb25zdCBwYXJ0aWFsID0gY29tcGFyZUFzYyhsYXRlckRhdGVfLCBlYXJsaWVyRGF0ZV8pID09PSAtc2lnbjtcbiAgY29uc3QgcmVzdWx0ID0gc2lnbiAqIChkaWZmIC0gK3BhcnRpYWwpO1xuICByZXR1cm4gcmVzdWx0ID09PSAwID8gMCA6IHJlc3VsdDtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2RhdGUtZm5zQDQuMS4wL25vZGVfbW9kdWxlcy9kYXRlLWZucy9pbnRlcnZhbFRvRHVyYXRpb24uanNcbmZ1bmN0aW9uIGludGVydmFsVG9EdXJhdGlvbihpbnRlcnZhbCwgb3B0aW9ucykge1xuICBjb25zdCB7IHN0YXJ0LCBlbmQgfSA9IG5vcm1hbGl6ZUludGVydmFsKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaW4sIGludGVydmFsKTtcbiAgY29uc3QgZHVyYXRpb24gPSB7fTtcbiAgY29uc3QgeWVhcnMgPSBkaWZmZXJlbmNlSW5ZZWFycyhlbmQsIHN0YXJ0KTtcbiAgaWYgKHllYXJzKSBkdXJhdGlvbi55ZWFycyA9IHllYXJzO1xuICBjb25zdCByZW1haW5pbmdNb250aHMgPSBhZGQoc3RhcnQsIHsgeWVhcnM6IGR1cmF0aW9uLnllYXJzIH0pO1xuICBjb25zdCBtb250aHMgPSBkaWZmZXJlbmNlSW5Nb250aHMoZW5kLCByZW1haW5pbmdNb250aHMpO1xuICBpZiAobW9udGhzKSBkdXJhdGlvbi5tb250aHMgPSBtb250aHM7XG4gIGNvbnN0IHJlbWFpbmluZ0RheXMgPSBhZGQocmVtYWluaW5nTW9udGhzLCB7IG1vbnRoczogZHVyYXRpb24ubW9udGhzIH0pO1xuICBjb25zdCBkYXlzID0gZGlmZmVyZW5jZUluRGF5cyhlbmQsIHJlbWFpbmluZ0RheXMpO1xuICBpZiAoZGF5cykgZHVyYXRpb24uZGF5cyA9IGRheXM7XG4gIGNvbnN0IHJlbWFpbmluZ0hvdXJzID0gYWRkKHJlbWFpbmluZ0RheXMsIHsgZGF5czogZHVyYXRpb24uZGF5cyB9KTtcbiAgY29uc3QgaG91cnMgPSBkaWZmZXJlbmNlSW5Ib3VycyhlbmQsIHJlbWFpbmluZ0hvdXJzKTtcbiAgaWYgKGhvdXJzKSBkdXJhdGlvbi5ob3VycyA9IGhvdXJzO1xuICBjb25zdCByZW1haW5pbmdNaW51dGVzID0gYWRkKHJlbWFpbmluZ0hvdXJzLCB7IGhvdXJzOiBkdXJhdGlvbi5ob3VycyB9KTtcbiAgY29uc3QgbWludXRlcyA9IGRpZmZlcmVuY2VJbk1pbnV0ZXMoZW5kLCByZW1haW5pbmdNaW51dGVzKTtcbiAgaWYgKG1pbnV0ZXMpIGR1cmF0aW9uLm1pbnV0ZXMgPSBtaW51dGVzO1xuICBjb25zdCByZW1haW5pbmdTZWNvbmRzID0gYWRkKHJlbWFpbmluZ01pbnV0ZXMsIHsgbWludXRlczogZHVyYXRpb24ubWludXRlcyB9KTtcbiAgY29uc3Qgc2Vjb25kcyA9IGRpZmZlcmVuY2VJblNlY29uZHMoZW5kLCByZW1haW5pbmdTZWNvbmRzKTtcbiAgaWYgKHNlY29uZHMpIGR1cmF0aW9uLnNlY29uZHMgPSBzZWNvbmRzO1xuICByZXR1cm4gZHVyYXRpb247XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3ViRGF5cy5qc1xuZnVuY3Rpb24gc3ViRGF5cyhkYXRlLCBhbW91bnQsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIGFkZERheXMoZGF0ZSwgLWFtb3VudCwgb3B0aW9ucyk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3ViTW9udGhzLmpzXG5mdW5jdGlvbiBzdWJNb250aHMoZGF0ZSwgYW1vdW50LCBvcHRpb25zKSB7XG4gIHJldHVybiBhZGRNb250aHMoZGF0ZSwgLWFtb3VudCwgb3B0aW9ucyk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9kYXRlLWZuc0A0LjEuMC9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3ViLmpzXG5mdW5jdGlvbiBzdWIoZGF0ZSwgZHVyYXRpb24sIG9wdGlvbnMpIHtcbiAgY29uc3Qge1xuICAgIHllYXJzID0gMCxcbiAgICBtb250aHMgPSAwLFxuICAgIHdlZWtzID0gMCxcbiAgICBkYXlzID0gMCxcbiAgICBob3VycyA9IDAsXG4gICAgbWludXRlcyA9IDAsXG4gICAgc2Vjb25kcyA9IDBcbiAgfSA9IGR1cmF0aW9uO1xuICBjb25zdCB3aXRob3V0TW9udGhzID0gc3ViTW9udGhzKGRhdGUsIG1vbnRocyArIHllYXJzICogMTIsIG9wdGlvbnMpO1xuICBjb25zdCB3aXRob3V0RGF5cyA9IHN1YkRheXMod2l0aG91dE1vbnRocywgZGF5cyArIHdlZWtzICogNywgb3B0aW9ucyk7XG4gIGNvbnN0IG1pbnV0ZXNUb1N1YiA9IG1pbnV0ZXMgKyBob3VycyAqIDYwO1xuICBjb25zdCBzZWNvbmRzVG9TdWIgPSBzZWNvbmRzICsgbWludXRlc1RvU3ViICogNjA7XG4gIGNvbnN0IG1zVG9TdWIgPSBzZWNvbmRzVG9TdWIgKiAxZTM7XG4gIHJldHVybiBjb25zdHJ1Y3RGcm9tKChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmluKSB8fCBkYXRlLCArd2l0aG91dERheXMgLSBtc1RvU3ViKTtcbn1cblxuLy8gc3JjL3RoaXJkLXBhcnR5L2V2YWwtZm9ybXVsYS50c1xuaW1wb3J0IHsgZ2V0RGF0ZVZhbHVlLCBnZXRUZXh0Q29udGVudCBhcyBnZXRUZXh0Q29udGVudDIgfSBmcm9tIFwibm90aW9uLXV0aWxzXCI7XG5mdW5jdGlvbiBldmFsRm9ybXVsYShmb3JtdWxhLCBjb250ZXh0KSB7XG4gIGNvbnN0IHsgZW5kRGF0ZSwgLi4uY3R4MiB9ID0gY29udGV4dDtcbiAgc3dpdGNoIChmb3JtdWxhID09IG51bGwgPyB2b2lkIDAgOiBmb3JtdWxhLnR5cGUpIHtcbiAgICBjYXNlIFwic3ltYm9sXCI6XG4gICAgICByZXR1cm4gZm9ybXVsYS5uYW1lID09PSBcInRydWVcIjtcbiAgICBjYXNlIFwiY29uc3RhbnRcIjoge1xuICAgICAgY29uc3QgdmFsdWUgPSBmb3JtdWxhLnZhbHVlO1xuICAgICAgc3dpdGNoIChmb3JtdWxhLnJlc3VsdF90eXBlKSB7XG4gICAgICAgIGNhc2UgXCJ0ZXh0XCI6XG4gICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICBjYXNlIFwibnVtYmVyXCI6XG4gICAgICAgICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KHZhbHVlKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuICAgIGNhc2UgXCJwcm9wZXJ0eVwiOiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IGN0eDIucHJvcGVydGllc1tmb3JtdWxhLmlkXTtcbiAgICAgIGNvbnN0IHRleHQgPSBnZXRUZXh0Q29udGVudDIodmFsdWUpO1xuICAgICAgc3dpdGNoIChmb3JtdWxhLnJlc3VsdF90eXBlKSB7XG4gICAgICAgIGNhc2UgXCJ0ZXh0XCI6XG4gICAgICAgICAgcmV0dXJuIHRleHQ7XG4gICAgICAgIGNhc2UgXCJudW1iZXJcIjpcbiAgICAgICAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQodGV4dCk7XG4gICAgICAgIGNhc2UgXCJib29sZWFuXCI6XG4gICAgICAgICAgaWYgKHR5cGVvZiB0ZXh0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICByZXR1cm4gdGV4dCA9PT0gXCJ0cnVlXCI7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiAhIXRleHQ7XG4gICAgICAgICAgfVxuICAgICAgICBjYXNlIFwiZGF0ZVwiOiB7XG4gICAgICAgICAgY29uc3QgdiA9IGdldERhdGVWYWx1ZSh2YWx1ZSk7XG4gICAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICAgIGlmIChlbmREYXRlICYmIHYuZW5kX2RhdGUpIHtcbiAgICAgICAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHYuZW5kX2RhdGUpO1xuICAgICAgICAgICAgICByZXR1cm4gbmV3IERhdGUoXG4gICAgICAgICAgICAgICAgZGF0ZS5nZXRVVENGdWxsWWVhcigpLFxuICAgICAgICAgICAgICAgIGRhdGUuZ2V0VVRDTW9udGgoKSxcbiAgICAgICAgICAgICAgICBkYXRlLmdldFVUQ0RhdGUoKVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHYuc3RhcnRfZGF0ZSk7XG4gICAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZShcbiAgICAgICAgICAgICAgICBkYXRlLmdldFVUQ0Z1bGxZZWFyKCksXG4gICAgICAgICAgICAgICAgZGF0ZS5nZXRVVENNb250aCgpLFxuICAgICAgICAgICAgICAgIGRhdGUuZ2V0VVRDRGF0ZSgpXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZSh0ZXh0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZXR1cm4gdGV4dDtcbiAgICAgIH1cbiAgICB9XG4gICAgY2FzZSBcIm9wZXJhdG9yXCI6XG4gICAgLy8gQWxsIG9wZXJhdG9ycyBhcmUgZXhwb3NlZCBhcyBmdW5jdGlvbnMsIHNvIHdlIGhhbmRsZSB0aGVtIHRoZSBzYW1lXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWZhbGx0aHJvdWdoXG4gICAgY2FzZSBcImZ1bmN0aW9uXCI6XG4gICAgICByZXR1cm4gZXZhbEZ1bmN0aW9uRm9ybXVsYShmb3JtdWxhLCBjdHgyKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgaW52YWxpZCBvciB1bnN1cHBvcnRlZCBmb3JtdWxhIFwiJHtmb3JtdWxhID09IG51bGwgPyB2b2lkIDAgOiBmb3JtdWxhLnR5cGV9YFxuICAgICAgKTtcbiAgfVxufVxuZnVuY3Rpb24gZXZhbEZ1bmN0aW9uRm9ybXVsYShmb3JtdWxhLCBjdHgyKSB7XG4gIGNvbnN0IGFyZ3MgPSBmb3JtdWxhID09IG51bGwgPyB2b2lkIDAgOiBmb3JtdWxhLmFyZ3M7XG4gIHN3aXRjaCAoZm9ybXVsYS5uYW1lKSB7XG4gICAgLy8gbG9naWNcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBjYXNlIFwiYW5kXCI6XG4gICAgICByZXR1cm4gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikgJiYgZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgY2FzZSBcImVtcHR5XCI6XG4gICAgICByZXR1cm4gIWV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpO1xuICAgIGNhc2UgXCJlcXVhbFwiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpID09IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgIGNhc2UgXCJpZlwiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpID8gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4MikgOiBldmFsRm9ybXVsYShhcmdzWzJdLCBjdHgyKTtcbiAgICBjYXNlIFwibGFyZ2VyXCI6XG4gICAgICByZXR1cm4gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikgPiBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICBjYXNlIFwibGFyZ2VyRXFcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSA+PSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICBjYXNlIFwibm90XCI6XG4gICAgICByZXR1cm4gIWV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpO1xuICAgIGNhc2UgXCJvclwiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpIHx8IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgIGNhc2UgXCJzbWFsbGVyXCI6XG4gICAgICByZXR1cm4gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikgPCBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICBjYXNlIFwic21hbGxlckVxXCI6XG4gICAgICByZXR1cm4gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikgPD0gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgY2FzZSBcInVuZXF1YWxcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSAhPSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICAvLyBudW1lcmljXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgY2FzZSBcImFic1wiOlxuICAgICAgcmV0dXJuIE1hdGguYWJzKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwiYWRkXCI6IHtcbiAgICAgIGNvbnN0IHYwID0gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4Mik7XG4gICAgICBjb25zdCB2MSA9IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgICAgaWYgKHR5cGVvZiB2MCA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICByZXR1cm4gdjAgKyArdjE7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2MCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gdjAgKyBgJHt2MX1gO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHYwO1xuICAgICAgfVxuICAgIH1cbiAgICBjYXNlIFwiY2JydFwiOlxuICAgICAgcmV0dXJuIE1hdGguY2JydChldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcImNlaWxcIjpcbiAgICAgIHJldHVybiBNYXRoLmNlaWwoZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikpO1xuICAgIGNhc2UgXCJkaXZpZGVcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSAvIGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgIGNhc2UgXCJleHBcIjpcbiAgICAgIHJldHVybiBNYXRoLmV4cChldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcImZsb29yXCI6XG4gICAgICByZXR1cm4gTWF0aC5mbG9vcihldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcImxuXCI6XG4gICAgICByZXR1cm4gTWF0aC5sb2coZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikpO1xuICAgIGNhc2UgXCJsb2cxMFwiOlxuICAgICAgcmV0dXJuIE1hdGgubG9nMTAoZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikpO1xuICAgIGNhc2UgXCJsb2cyXCI6XG4gICAgICByZXR1cm4gTWF0aC5sb2cyKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwibWF4XCI6IHtcbiAgICAgIGNvbnN0IHZhbHVlcyA9IGFyZ3MubWFwKChhcmcpID0+IGV2YWxGb3JtdWxhKGFyZywgY3R4MikpO1xuICAgICAgcmV0dXJuIHZhbHVlcy5yZWR1Y2UoXG4gICAgICAgIChhY2MsIHZhbHVlKSA9PiBNYXRoLm1heChhY2MsIHZhbHVlKSxcbiAgICAgICAgTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZXG4gICAgICApO1xuICAgIH1cbiAgICBjYXNlIFwibWluXCI6IHtcbiAgICAgIGNvbnN0IHZhbHVlcyA9IGFyZ3MubWFwKChhcmcpID0+IGV2YWxGb3JtdWxhKGFyZywgY3R4MikpO1xuICAgICAgcmV0dXJuIHZhbHVlcy5yZWR1Y2UoXG4gICAgICAgIChhY2MsIHZhbHVlKSA9PiBNYXRoLm1pbihhY2MsIHZhbHVlKSxcbiAgICAgICAgTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZXG4gICAgICApO1xuICAgIH1cbiAgICBjYXNlIFwibW9kXCI6XG4gICAgICByZXR1cm4gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikgJSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICBjYXNlIFwibXVsdGlwbHlcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSAqIGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgIGNhc2UgXCJwb3dcIjpcbiAgICAgIHJldHVybiBNYXRoLnBvdyhcbiAgICAgICAgZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MiksXG4gICAgICAgIGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpXG4gICAgICApO1xuICAgIGNhc2UgXCJyb3VuZFwiOlxuICAgICAgcmV0dXJuIE1hdGgucm91bmQoZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikpO1xuICAgIGNhc2UgXCJzaWduXCI6XG4gICAgICByZXR1cm4gTWF0aC5zaWduKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwic3FydFwiOlxuICAgICAgcmV0dXJuIE1hdGguc3FydChldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcInN1YnRyYWN0XCI6XG4gICAgICByZXR1cm4gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikgLSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICBjYXNlIFwidG9OdW1iZXJcIjpcbiAgICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcInVuYXJ5TWludXNcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSAqIC0xO1xuICAgIGNhc2UgXCJ1bmFyeVBsdXNcIjpcbiAgICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgLy8gdGV4dFxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIGNhc2UgXCJjb25jYXRcIjoge1xuICAgICAgY29uc3QgdmFsdWVzID0gYXJncy5tYXAoKGFyZykgPT4gZXZhbEZvcm11bGEoYXJnLCBjdHgyKSk7XG4gICAgICByZXR1cm4gdmFsdWVzLmpvaW4oXCJcIik7XG4gICAgfVxuICAgIGNhc2UgXCJjb250YWluc1wiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpLmluY2x1ZGVzKFxuICAgICAgICBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKVxuICAgICAgKTtcbiAgICBjYXNlIFwiZm9ybWF0XCI6IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4Mik7XG4gICAgICBzd2l0Y2ggKHR5cGVvZiB2YWx1ZSkge1xuICAgICAgICBjYXNlIFwic3RyaW5nXCI6XG4gICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICBjYXNlIFwib2JqZWN0XCI6XG4gICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZvcm1hdCh2YWx1ZSwgXCJNTU0gZCwgWVlZXCIpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7dmFsdWV9YDtcbiAgICAgICAgICB9XG4gICAgICAgIC8vIGNhc2UgJ251bWJlcic6XG4gICAgICAgIC8vIGZhbGx0aHJvdWdoXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmV0dXJuIGAke3ZhbHVlfWA7XG4gICAgICB9XG4gICAgfVxuICAgIGNhc2UgXCJqb2luXCI6IHtcbiAgICAgIGNvbnN0IFtkZWxpbWl0ZXJBcmcsIC4uLnJlc3RBcmdzXSA9IGFyZ3M7XG4gICAgICBjb25zdCBkZWxpbWl0ZXIgPSBldmFsRm9ybXVsYShkZWxpbWl0ZXJBcmcsIGN0eDIpO1xuICAgICAgY29uc3QgdmFsdWVzID0gcmVzdEFyZ3MubWFwKChhcmcpID0+IGV2YWxGb3JtdWxhKGFyZywgY3R4MikpO1xuICAgICAgcmV0dXJuIHZhbHVlcy5qb2luKGRlbGltaXRlcik7XG4gICAgfVxuICAgIGNhc2UgXCJsZW5ndGhcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKS5sZW5ndGg7XG4gICAgY2FzZSBcInJlcGxhY2VcIjoge1xuICAgICAgY29uc3QgdmFsdWUgPSBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKTtcbiAgICAgIGNvbnN0IHJlZ2V4ID0gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgICBjb25zdCByZXBsYWNlbWVudCA9IGV2YWxGb3JtdWxhKGFyZ3NbMl0sIGN0eDIpO1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChyZWdleCksIHJlcGxhY2VtZW50KTtcbiAgICB9XG4gICAgY2FzZSBcInJlcGxhY2VBbGxcIjoge1xuICAgICAgY29uc3QgdmFsdWUgPSBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKTtcbiAgICAgIGNvbnN0IHJlZ2V4ID0gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgICBjb25zdCByZXBsYWNlbWVudCA9IGV2YWxGb3JtdWxhKGFyZ3NbMl0sIGN0eDIpO1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2VBbGwobmV3IFJlZ0V4cChyZWdleCwgXCJnXCIpLCByZXBsYWNlbWVudCk7XG4gICAgfVxuICAgIGNhc2UgXCJzbGljZVwiOiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpO1xuICAgICAgY29uc3QgYmVnaW5JbmRleCA9IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgICAgY29uc3QgZW5kSW5kZXggPSBhcmdzWzJdID8gZXZhbEZvcm11bGEoYXJnc1syXSwgY3R4MikgOiB2YWx1ZS5sZW5ndGg7XG4gICAgICByZXR1cm4gdmFsdWUuc2xpY2UoYmVnaW5JbmRleCwgZW5kSW5kZXgpO1xuICAgIH1cbiAgICBjYXNlIFwidGVzdFwiOiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpO1xuICAgICAgY29uc3QgcmVnZXggPSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICAgIHJldHVybiBuZXcgUmVnRXhwKHJlZ2V4KS50ZXN0KHZhbHVlKTtcbiAgICB9XG4gICAgLy8gZGF0ZSAmIHRpbWVcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBjYXNlIFwiZGF0ZVwiOlxuICAgICAgcmV0dXJuIGdldERhdGUoZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikpO1xuICAgIGNhc2UgXCJkYXRlQWRkXCI6IHtcbiAgICAgIGNvbnN0IGRhdGUgPSBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKTtcbiAgICAgIGNvbnN0IG51bWJlciA9IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgICAgY29uc3QgdW5pdCA9IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgICAgcmV0dXJuIGFkZChkYXRlLCB7IFt1bml0XTogbnVtYmVyIH0pO1xuICAgIH1cbiAgICBjYXNlIFwiZGF0ZUJldHdlZW5cIjoge1xuICAgICAgY29uc3QgZGF0ZTEgPSBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKTtcbiAgICAgIGNvbnN0IGRhdGUyID0gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgICBjb25zdCB1bml0ID0gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgICByZXR1cm4gaW50ZXJ2YWxUb0R1cmF0aW9uKHtcbiAgICAgICAgc3RhcnQ6IGRhdGUyLFxuICAgICAgICBlbmQ6IGRhdGUxXG4gICAgICB9KVt1bml0XTtcbiAgICB9XG4gICAgY2FzZSBcImRhdGVTdWJ0cmFjdFwiOiB7XG4gICAgICBjb25zdCBkYXRlID0gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4Mik7XG4gICAgICBjb25zdCBudW1iZXIgPSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICAgIGNvbnN0IHVuaXQgPSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICAgIHJldHVybiBzdWIoZGF0ZSwgeyBbdW5pdF06IG51bWJlciB9KTtcbiAgICB9XG4gICAgY2FzZSBcImRheVwiOlxuICAgICAgcmV0dXJuIGdldERheShldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcImVuZFwiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIHsgLi4uY3R4MiwgZW5kRGF0ZTogdHJ1ZSB9KTtcbiAgICBjYXNlIFwiZm9ybWF0RGF0ZVwiOiB7XG4gICAgICBjb25zdCBkYXRlID0gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4Mik7XG4gICAgICBjb25zdCBmb3JtYXRWYWx1ZSA9IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpLnJlcGxhY2UoXG4gICAgICAgIFwiZGRkZFwiLFxuICAgICAgICBcImVlZWVcIlxuICAgICAgKTtcbiAgICAgIHJldHVybiBmb3JtYXQoZGF0ZSwgZm9ybWF0VmFsdWUpO1xuICAgIH1cbiAgICBjYXNlIFwiZnJvbVRpbWVzdGFtcFwiOlxuICAgICAgcmV0dXJuIG5ldyBEYXRlKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwiaG91clwiOlxuICAgICAgcmV0dXJuIGdldEhvdXJzKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwibWludXRlXCI6XG4gICAgICByZXR1cm4gZ2V0TWludXRlcyhldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcIm1vbnRoXCI6XG4gICAgICByZXR1cm4gZ2V0TW9udGgoZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikpO1xuICAgIGNhc2UgXCJub3dcIjpcbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gbmV3IERhdGUoKTtcbiAgICBjYXNlIFwic3RhcnRcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCB7IC4uLmN0eDIsIGVuZERhdGU6IGZhbHNlIH0pO1xuICAgIGNhc2UgXCJ0aW1lc3RhbXBcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKS5nZXRUaW1lKCk7XG4gICAgY2FzZSBcInllYXJcIjpcbiAgICAgIHJldHVybiBnZXRZZWFyKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgaW52YWxpZCBvciB1bnN1cHBvcnRlZCBmdW5jdGlvbiBmb3JtdWxhIFwiJHtmb3JtdWxhID09IG51bGwgPyB2b2lkIDAgOiBmb3JtdWxhLnR5cGV9YFxuICAgICAgKTtcbiAgfVxufVxuXG4vLyBzcmMvdGhpcmQtcGFydHkvcHJvcGVydHkudHN4XG5pbXBvcnQgeyBqc3ggYXMganN4NDYsIGpzeHMgYXMganN4czExIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBQcm9wZXJ0eShwcm9wcykge1xuICBjb25zdCB7IGNvbXBvbmVudHMgfSA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgaWYgKGNvbXBvbmVudHMuUHJvcGVydHkpIHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDQ2KGNvbXBvbmVudHMuUHJvcGVydHksIHsgLi4ucHJvcHMgfSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g0NihQcm9wZXJ0eUltcGxNZW1vLCB7IC4uLnByb3BzIH0pO1xuICB9XG59XG5mdW5jdGlvbiBQcm9wZXJ0eUltcGwocHJvcHMpIHtcbiAgdmFyIF9hLCBfYiwgX2M7XG4gIGNvbnN0IHsgY29tcG9uZW50cywgbWFwSW1hZ2VVcmwsIG1hcFBhZ2VVcmwgfSA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgY29uc3Qge1xuICAgIHNjaGVtYSxcbiAgICBkYXRhLFxuICAgIGJsb2NrLFxuICAgIGNvbGxlY3Rpb24sXG4gICAgaW5saW5lID0gZmFsc2UsXG4gICAgbGlua1RvVGl0bGVQYWdlID0gdHJ1ZVxuICB9ID0gcHJvcHM7XG4gIGNvbnN0IHJlbmRlclRleHRWYWx1ZSA9IFJlYWN0MTUudXNlTWVtbyhcbiAgICAoKSA9PiBmdW5jdGlvbiBUZXh0UHJvcGVydHkoKSB7XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDQ2KFRleHQsIHsgdmFsdWU6IGRhdGEsIGJsb2NrIH0pO1xuICAgIH0sXG4gICAgW2Jsb2NrLCBkYXRhXVxuICApO1xuICBjb25zdCByZW5kZXJEYXRlVmFsdWUgPSBSZWFjdDE1LnVzZU1lbW8oXG4gICAgKCkgPT4gZnVuY3Rpb24gRGF0ZVByb3BlcnR5KCkge1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g0NihUZXh0LCB7IHZhbHVlOiBkYXRhLCBibG9jayB9KTtcbiAgICB9LFxuICAgIFtibG9jaywgZGF0YV1cbiAgKTtcbiAgY29uc3QgcmVuZGVyUmVsYXRpb25WYWx1ZSA9IFJlYWN0MTUudXNlTWVtbyhcbiAgICAoKSA9PiBmdW5jdGlvbiBSZWxhdGlvblByb3BlcnR5KCkge1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g0NihUZXh0LCB7IHZhbHVlOiBkYXRhLCBibG9jayB9KTtcbiAgICB9LFxuICAgIFtibG9jaywgZGF0YV1cbiAgKTtcbiAgY29uc3QgcmVuZGVyRm9ybXVsYVZhbHVlID0gUmVhY3QxNS51c2VNZW1vKFxuICAgICgpID0+IGZ1bmN0aW9uIEZvcm11bGFQcm9wZXJ0eSgpIHtcbiAgICAgIGxldCBjb250ZW50MjtcbiAgICAgIGlmICghc2NoZW1hKSByZXR1cm4gbnVsbDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnRlbnQyID0gZXZhbEZvcm11bGEoc2NoZW1hLmZvcm11bGEsIHtcbiAgICAgICAgICBzY2hlbWE6IGNvbGxlY3Rpb24gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb24uc2NoZW1hLFxuICAgICAgICAgIHByb3BlcnRpZXM6IGJsb2NrID09IG51bGwgPyB2b2lkIDAgOiBibG9jay5wcm9wZXJ0aWVzXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoTnVtYmVyLmlzTmFOKGNvbnRlbnQyKSkge1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb250ZW50MiBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgICBjb250ZW50MiA9IGZvcm1hdChjb250ZW50MiwgXCJNTU0gZCwgWVlZIGhoOm1tIGFhXCIpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnRlbnQyID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50MjtcbiAgICB9LFxuICAgIFtibG9jayA9PSBudWxsID8gdm9pZCAwIDogYmxvY2sucHJvcGVydGllcywgY29sbGVjdGlvbiA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvbi5zY2hlbWEsIHNjaGVtYV1cbiAgKTtcbiAgY29uc3QgcmVuZGVyVGl0bGVWYWx1ZSA9IFJlYWN0MTUudXNlTWVtbyhcbiAgICAoKSA9PiBmdW5jdGlvbiBGb3JtdWxhVGl0bGUoKSB7XG4gICAgICBpZiAoYmxvY2sgJiYgbGlua1RvVGl0bGVQYWdlKSB7XG4gICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NDYoXG4gICAgICAgICAgY29tcG9uZW50cy5QYWdlTGluayxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IGNzKFwibm90aW9uLXBhZ2UtbGlua1wiKSxcbiAgICAgICAgICAgIGhyZWY6IG1hcFBhZ2VVcmwoYmxvY2suaWQpLFxuICAgICAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g0NihQYWdlVGl0bGUsIHsgYmxvY2sgfSlcbiAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDQ2KFRleHQsIHsgdmFsdWU6IGRhdGEsIGJsb2NrIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgW2Jsb2NrLCBjb21wb25lbnRzLCBkYXRhLCBsaW5rVG9UaXRsZVBhZ2UsIG1hcFBhZ2VVcmxdXG4gICk7XG4gIGNvbnN0IHJlbmRlclBlcnNvblZhbHVlID0gUmVhY3QxNS51c2VNZW1vKFxuICAgICgpID0+IGZ1bmN0aW9uIFBlcnNvblByb3BlcnR5KCkge1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g0NihUZXh0LCB7IHZhbHVlOiBkYXRhLCBibG9jayB9KTtcbiAgICB9LFxuICAgIFtibG9jaywgZGF0YV1cbiAgKTtcbiAgY29uc3QgcmVuZGVyRmlsZVZhbHVlID0gUmVhY3QxNS51c2VNZW1vKFxuICAgICgpID0+IGZ1bmN0aW9uIEZpbGVQcm9wZXJ0eSgpIHtcbiAgICAgIGlmICghZGF0YSkgcmV0dXJuIG51bGw7XG4gICAgICBjb25zdCBmaWxlcyA9IGRhdGEuZmlsdGVyKCh2KSA9PiB2Lmxlbmd0aCA9PT0gMikubWFwKChmKSA9PiBmLmZsYXQoKS5mbGF0KCkpO1xuICAgICAgcmV0dXJuIGZpbGVzLm1hcCgoZmlsZSwgaSkgPT4gLyogQF9fUFVSRV9fICovIGpzeDQ2KFxuICAgICAgICBjb21wb25lbnRzLkxpbmssXG4gICAgICAgIHtcbiAgICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLXByb3BlcnR5LWZpbGVcIixcbiAgICAgICAgICBocmVmOiBtYXBJbWFnZVVybChmaWxlWzJdLCBibG9jayksXG4gICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiLFxuICAgICAgICAgIHJlbDogXCJub3JlZmVycmVyIG5vb3BlbmVyXCIsXG4gICAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g0NihcbiAgICAgICAgICAgIEdyYWNlZnVsSW1hZ2UsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGFsdDogZmlsZVswXSxcbiAgICAgICAgICAgICAgc3JjOiBtYXBJbWFnZVVybChmaWxlWzJdLCBibG9jayksXG4gICAgICAgICAgICAgIGxvYWRpbmc6IFwibGF6eVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKVxuICAgICAgICB9LFxuICAgICAgICBpXG4gICAgICApKTtcbiAgICB9LFxuICAgIFtibG9jaywgY29tcG9uZW50cywgZGF0YSwgbWFwSW1hZ2VVcmxdXG4gICk7XG4gIGNvbnN0IHJlbmRlckNoZWNrYm94VmFsdWUgPSBSZWFjdDE1LnVzZU1lbW8oXG4gICAgKCkgPT4gZnVuY3Rpb24gQ2hlY2tib3hQcm9wZXJ0eSgpIHtcbiAgICAgIHZhciBfYTI7XG4gICAgICBpZiAoIWRhdGEgfHwgIShzY2hlbWEgPT0gbnVsbCA/IHZvaWQgMCA6IHNjaGVtYS5uYW1lKSkgcmV0dXJuIG51bGw7XG4gICAgICBjb25zdCBpc0NoZWNrZWQgPSBkYXRhICYmICgoX2EyID0gZGF0YVswXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMlswXSkgPT09IFwiWWVzXCI7XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeHMxMShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tcHJvcGVydHktY2hlY2tib3gtY29udGFpbmVyXCIsIGNoaWxkcmVuOiBbXG4gICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g0NihDaGVja2JveCwgeyBpc0NoZWNrZWQsIGJsb2NrSWQ6IHZvaWQgMCB9KSxcbiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDQ2KFwic3BhblwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tcHJvcGVydHktY2hlY2tib3gtdGV4dFwiLCBjaGlsZHJlbjogc2NoZW1hLm5hbWUgfSlcbiAgICAgIF0gfSk7XG4gICAgfSxcbiAgICBbZGF0YSwgc2NoZW1hXVxuICApO1xuICBjb25zdCByZW5kZXJVcmxWYWx1ZSA9IFJlYWN0MTUudXNlTWVtbyhcbiAgICAoKSA9PiBmdW5jdGlvbiBVcmxQcm9wZXJ0eSgpIHtcbiAgICAgIHZhciBfYTI7XG4gICAgICBpZiAoIWRhdGEpIHJldHVybiBudWxsO1xuICAgICAgY29uc3QgZCA9IHN0cnVjdHVyZWRDbG9uZShkYXRhKTtcbiAgICAgIGlmIChpbmxpbmUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKChfYTIgPSBkWzBdKSA9PSBudWxsID8gdm9pZCAwIDogX2EyWzBdKTtcbiAgICAgICAgICBkWzBdWzBdID0gdXJsLmhvc3RuYW1lLnJlcGxhY2UoL153d3dcXC4vLCBcIlwiKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDQ2KFxuICAgICAgICBUZXh0LFxuICAgICAgICB7XG4gICAgICAgICAgdmFsdWU6IGQsXG4gICAgICAgICAgYmxvY2ssXG4gICAgICAgICAgaW5saW5lLFxuICAgICAgICAgIGxpbmtQcm9wczoge1xuICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiLFxuICAgICAgICAgICAgcmVsOiBcIm5vcmVmZXJyZXIgbm9vcGVuZXJcIlxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9LFxuICAgIFtibG9jaywgZGF0YSwgaW5saW5lXVxuICApO1xuICBjb25zdCByZW5kZXJFbWFpbFZhbHVlID0gUmVhY3QxNS51c2VNZW1vKFxuICAgICgpID0+IGZ1bmN0aW9uIEVtYWlsUHJvcGVydHkoKSB7XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDQ2KFRleHQsIHsgdmFsdWU6IGRhdGEsIGxpbmtQcm90b2NvbDogXCJtYWlsdG9cIiwgYmxvY2sgfSk7XG4gICAgfSxcbiAgICBbYmxvY2ssIGRhdGFdXG4gICk7XG4gIGNvbnN0IHJlbmRlclBob25lTnVtYmVyVmFsdWUgPSBSZWFjdDE1LnVzZU1lbW8oXG4gICAgKCkgPT4gZnVuY3Rpb24gUGhvbmVOdW1iZXJQcm9wZXJ0eSgpIHtcbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NDYoVGV4dCwgeyB2YWx1ZTogZGF0YSwgbGlua1Byb3RvY29sOiBcInRlbFwiLCBibG9jayB9KTtcbiAgICB9LFxuICAgIFtibG9jaywgZGF0YV1cbiAgKTtcbiAgY29uc3QgcmVuZGVyTnVtYmVyVmFsdWUgPSBSZWFjdDE1LnVzZU1lbW8oXG4gICAgKCkgPT4gZnVuY3Rpb24gTnVtYmVyUHJvcGVydHkoKSB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgaWYgKCFkYXRhIHx8ICFzY2hlbWEpIHJldHVybiBudWxsO1xuICAgICAgY29uc3QgdmFsdWUgPSBOdW1iZXIucGFyc2VGbG9hdCgoKF9hMiA9IGRhdGFbMF0pID09IG51bGwgPyB2b2lkIDAgOiBfYTJbMF0pIHx8IFwiMFwiKTtcbiAgICAgIGxldCBvdXRwdXQgPSBcIlwiO1xuICAgICAgaWYgKE51bWJlci5pc05hTih2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g0NihUZXh0LCB7IHZhbHVlOiBkYXRhLCBibG9jayB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN3aXRjaCAoc2NoZW1hLm51bWJlcl9mb3JtYXQpIHtcbiAgICAgICAgICBjYXNlIFwibnVtYmVyX3dpdGhfY29tbWFzXCI6XG4gICAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoKSh2YWx1ZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwicGVyY2VudFwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgc3VmZml4OiBcIiVcIiB9KSh2YWx1ZSAqIDEwMCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiZG9sbGFyXCI6XG4gICAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiJFwiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkoXG4gICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcImV1cm9cIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJcXHUyMEFDXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwicG91bmRcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJcXHhBM1wiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkoXG4gICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcInllblwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIlxceEE1XCIsIHJvdW5kOiAwIH0pKHZhbHVlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJydXBlZVwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIlxcdTIwQjlcIiwgcm91bmQ6IDIsIHBhZFJpZ2h0OiAyIH0pKFxuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJ3b25cIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJcXHUyMEE5XCIsIHJvdW5kOiAwIH0pKHZhbHVlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJ5dWFuXCI6XG4gICAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiQ05cXHhBNVwiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkoXG4gICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcImFyZ2VudGluZV9wZXNvXCI6XG4gICAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiQVJTIFwiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkoXG4gICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcImJhaHRcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJUSEIgXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiY2FuYWRpYW5fZG9sbGFyXCI6XG4gICAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiQ0EkXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiY2hpbGVhbl9wZXNvXCI6XG4gICAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiQ0xQIFwiLCByb3VuZDogMCB9KSh2YWx1ZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiY29sb21iaWFuX3Blc29cIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJDT1AgXCIsIHJvdW5kOiAwIH0pKHZhbHVlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJkYW5pc2hfa3JvbmVcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJES0sgXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiZGlyaGFtXCI6XG4gICAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiQUVEIFwiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkoXG4gICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcImZvcmludFwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIkhVRiBcIiwgcm91bmQ6IDAgfSkodmFsdWUpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcImZyYW5jXCI6XG4gICAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiQ0hGIFwiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkoXG4gICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcImhvbmdfa29uZ19kb2xsYXJcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJISyRcIiwgcm91bmQ6IDIsIHBhZFJpZ2h0OiAyIH0pKFxuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJrb3J1bmFcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJDWksgXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwia3JvbmFcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJTRUsgXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwibGV1XCI6XG4gICAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiUk9OIFwiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkoXG4gICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcImxpcmFcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJUUlkgXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwibWV4aWNhbl9wZXNvXCI6XG4gICAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiTVgkXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwibmV3X3RhaXdhbl9kb2xsYXJcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJOVCRcIiwgcm91bmQ6IDAgfSkodmFsdWUpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIm5ld196ZWFsYW5kX2RvbGxhclwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIk5aJFwiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkoXG4gICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIm5vcndlZ2lhbl9rcm9uZVwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIk5PSyBcIiwgcm91bmQ6IDIsIHBhZFJpZ2h0OiAyIH0pKFxuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJudW1iZXJcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSgpKHZhbHVlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJwaGlsaXBwaW5lX3Blc29cIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJcXHUyMEIxXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwicGVydXZpYW5fc29sXCI6XG4gICAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiUEVOIFwiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkoXG4gICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcInJhbmRcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJaQVIgXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwicmVhbFwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIlIkXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwicmluZ2dpdFwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIk1ZUiBcIiwgcm91bmQ6IDIsIHBhZFJpZ2h0OiAyIH0pKFxuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJyaXlhbFwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIlNBUiBcIiwgcm91bmQ6IDIsIHBhZFJpZ2h0OiAyIH0pKFxuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJydWJsZVwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIlJVQiBcIiwgcm91bmQ6IDIsIHBhZFJpZ2h0OiAyIH0pKFxuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJydXBpYWhcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJJRFIgXCIsIHJvdW5kOiAwIH0pKHZhbHVlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJzaGVrZWxcIjpcbiAgICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJcXHUyMEFBXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KShcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwic2luZ2Fwb3JlX2RvbGxhclwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIlNHRCBcIiwgcm91bmQ6IDIsIHBhZFJpZ2h0OiAyIH0pKFxuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJ1cnVndWF5YW5fcGVzb1wiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIlVZVSBcIiwgcm91bmQ6IDIsIHBhZFJpZ2h0OiAyIH0pKFxuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJ6bG90eVwiOlxuICAgICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIlBMTiBcIiwgcm91bmQ6IDIsIHBhZFJpZ2h0OiAyIH0pKFxuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDQ2KFRleHQsIHsgdmFsdWU6IGRhdGEsIGJsb2NrIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NDYoVGV4dCwgeyB2YWx1ZTogW1tvdXRwdXRdXSwgYmxvY2sgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBbYmxvY2ssIGRhdGEsIHNjaGVtYV1cbiAgKTtcbiAgY29uc3QgcmVuZGVyQXV0b0luY3JlbWVudElkVmFsdWUgPSBSZWFjdDE1LnVzZU1lbW8oXG4gICAgKCkgPT4gZnVuY3Rpb24gcmVuZGVyQXV0b0luY3JlbWVudElkVmFsdWVQcm9wZXJ0eSgpIHtcbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NDYoVGV4dCwgeyB2YWx1ZTogZGF0YSwgYmxvY2sgfSk7XG4gICAgfSxcbiAgICBbYmxvY2ssIGRhdGFdXG4gICk7XG4gIGNvbnN0IHJlbmRlckNyZWF0ZWRUaW1lVmFsdWUgPSBSZWFjdDE1LnVzZU1lbW8oXG4gICAgKCkgPT4gZnVuY3Rpb24gQ3JlYXRlZFRpbWVQcm9wZXJ0eSgpIHtcbiAgICAgIHJldHVybiBmb3JtYXQobmV3IERhdGUoYmxvY2suY3JlYXRlZF90aW1lKSwgXCJNTU0gZCwgWVlZIGhoOm1tIGFhXCIpO1xuICAgIH0sXG4gICAgW2Jsb2NrXVxuICApO1xuICBjb25zdCByZW5kZXJMYXN0RWRpdGVkVGltZVZhbHVlID0gUmVhY3QxNS51c2VNZW1vKFxuICAgICgpID0+IGZ1bmN0aW9uIExhc3RFZGl0ZWRUaW1lUHJvcGVydHkoKSB7XG4gICAgICByZXR1cm4gZm9ybWF0KG5ldyBEYXRlKGJsb2NrLmxhc3RfZWRpdGVkX3RpbWUpLCBcIk1NTSBkLCBZWVkgaGg6bW0gYWFcIik7XG4gICAgfSxcbiAgICBbYmxvY2tdXG4gICk7XG4gIGlmICghc2NoZW1hKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgbGV0IGNvbnRlbnQgPSBudWxsO1xuICBpZiAoZGF0YSB8fCBzY2hlbWEudHlwZSA9PT0gXCJjaGVja2JveFwiIHx8IHNjaGVtYS50eXBlID09PSBcInRpdGxlXCIgfHwgc2NoZW1hLnR5cGUgPT09IFwiZm9ybXVsYVwiIHx8IHNjaGVtYS50eXBlID09PSBcImNyZWF0ZWRfYnlcIiB8fCBzY2hlbWEudHlwZSA9PT0gXCJsYXN0X2VkaXRlZF9ieVwiIHx8IHNjaGVtYS50eXBlID09PSBcImNyZWF0ZWRfdGltZVwiIHx8IHNjaGVtYS50eXBlID09PSBcImxhc3RfZWRpdGVkX3RpbWVcIikge1xuICAgIHN3aXRjaCAoc2NoZW1hLnR5cGUpIHtcbiAgICAgIGNhc2UgXCJyZWxhdGlvblwiOlxuICAgICAgICBjb250ZW50ID0gY29tcG9uZW50cy5wcm9wZXJ0eVJlbGF0aW9uVmFsdWUocHJvcHMsIHJlbmRlclJlbGF0aW9uVmFsdWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJmb3JtdWxhXCI6XG4gICAgICAgIGNvbnRlbnQgPSBjb21wb25lbnRzLnByb3BlcnR5Rm9ybXVsYVZhbHVlKHByb3BzLCByZW5kZXJGb3JtdWxhVmFsdWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJ0aXRsZVwiOlxuICAgICAgICBjb250ZW50ID0gY29tcG9uZW50cy5wcm9wZXJ0eVRpdGxlVmFsdWUocHJvcHMsIHJlbmRlclRpdGxlVmFsdWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJzdGF0dXNcIjoge1xuICAgICAgICBjb25zdCB2YWx1ZSA9ICgoX2EgPSBkYXRhID09IG51bGwgPyB2b2lkIDAgOiBkYXRhWzBdKSA9PSBudWxsID8gdm9pZCAwIDogX2FbMF0pIHx8IFwiXCI7XG4gICAgICAgIGNvbnN0IG9wdGlvbiA9IChfYiA9IHNjaGVtYS5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2IuZmluZCgob3B0aW9uMikgPT4gdmFsdWUgPT09IG9wdGlvbjIudmFsdWUpO1xuICAgICAgICBjb25zdCBjb2xvciA9IChvcHRpb24gPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbi5jb2xvcikgfHwgXCJkZWZhdWx0LWluZmVycmVkXCI7XG4gICAgICAgIGNvbnRlbnQgPSBjb21wb25lbnRzLnByb3BlcnR5U2VsZWN0VmFsdWUoXG4gICAgICAgICAge1xuICAgICAgICAgICAgLi4ucHJvcHMsXG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgIG9wdGlvbixcbiAgICAgICAgICAgIGNvbG9yXG4gICAgICAgICAgfSxcbiAgICAgICAgICAoKSA9PiAvKiBAX19QVVJFX18gKi8ganN4czExKFxuICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgY2xhc3NOYW1lOiBjcyhcbiAgICAgICAgICAgICAgICBgbm90aW9uLXByb3BlcnR5LSR7c2NoZW1hLnR5cGV9LWl0ZW1gLFxuICAgICAgICAgICAgICAgIGNvbG9yICYmIGBub3Rpb24taXRlbS0ke2NvbG9yfWBcbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4NDYoXG4gICAgICAgICAgICAgICAgICBcInNwYW5cIixcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBjcyhgbm90aW9uLWl0ZW0tYnVsbGV0LSR7Y29sb3J9YCksXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgbWFyZ2luUmlnaHQ6IFwiNXB4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiBcIjEwMCVcIixcbiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiOHB4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiOHB4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogXCJpbmxpbmUtZmxleFwiLFxuICAgICAgICAgICAgICAgICAgICAgIGZsZXhTaHJpbms6IDBcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfVxuICAgICAgICAgIClcbiAgICAgICAgKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIFwic2VsZWN0XCI6XG4gICAgICAvLyBpbnRlbnRpb25hbCBmYWxsdGhyb3VnaFxuICAgICAgY2FzZSBcIm11bHRpX3NlbGVjdFwiOiB7XG4gICAgICAgIGNvbnN0IHZhbHVlcyA9ICgoKF9jID0gZGF0YSA9PSBudWxsID8gdm9pZCAwIDogZGF0YVswXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jWzBdKSB8fCBcIlwiKS5zcGxpdChcIixcIik7XG4gICAgICAgIGNvbnRlbnQgPSB2YWx1ZXMubWFwKCh2YWx1ZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICB2YXIgX2EyO1xuICAgICAgICAgIGNvbnN0IG9wdGlvbiA9IChfYTIgPSBzY2hlbWEub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5maW5kKFxuICAgICAgICAgICAgKG9wdGlvbjIpID0+IHZhbHVlID09PSBvcHRpb24yLnZhbHVlXG4gICAgICAgICAgKTtcbiAgICAgICAgICBjb25zdCBjb2xvciA9IG9wdGlvbiA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9uLmNvbG9yO1xuICAgICAgICAgIHJldHVybiBjb21wb25lbnRzLnByb3BlcnR5U2VsZWN0VmFsdWUoXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIC4uLnByb3BzLFxuICAgICAgICAgICAgICBrZXk6IGluZGV4LFxuICAgICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgICAgb3B0aW9uLFxuICAgICAgICAgICAgICBjb2xvclxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICgpID0+IC8qIEBfX1BVUkVfXyAqLyBqc3g0NihcbiAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogY3MoXG4gICAgICAgICAgICAgICAgICBgbm90aW9uLXByb3BlcnR5LSR7c2NoZW1hLnR5cGV9LWl0ZW1gLFxuICAgICAgICAgICAgICAgICAgY29sb3IgJiYgYG5vdGlvbi1pdGVtLSR7Y29sb3J9YFxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IHZhbHVlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGluZGV4XG4gICAgICAgICAgICApXG4gICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSBcInBlcnNvblwiOlxuICAgICAgICBjb250ZW50ID0gY29tcG9uZW50cy5wcm9wZXJ0eVBlcnNvblZhbHVlKHByb3BzLCByZW5kZXJQZXJzb25WYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImZpbGVcIjpcbiAgICAgICAgY29udGVudCA9IGNvbXBvbmVudHMucHJvcGVydHlGaWxlVmFsdWUocHJvcHMsIHJlbmRlckZpbGVWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImNoZWNrYm94XCI6XG4gICAgICAgIGNvbnRlbnQgPSBjb21wb25lbnRzLnByb3BlcnR5Q2hlY2tib3hWYWx1ZShwcm9wcywgcmVuZGVyQ2hlY2tib3hWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInVybFwiOlxuICAgICAgICBjb250ZW50ID0gY29tcG9uZW50cy5wcm9wZXJ0eVVybFZhbHVlKHByb3BzLCByZW5kZXJVcmxWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImVtYWlsXCI6XG4gICAgICAgIGNvbnRlbnQgPSBjb21wb25lbnRzLnByb3BlcnR5RW1haWxWYWx1ZShwcm9wcywgcmVuZGVyRW1haWxWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInBob25lX251bWJlclwiOlxuICAgICAgICBjb250ZW50ID0gY29tcG9uZW50cy5wcm9wZXJ0eVBob25lTnVtYmVyVmFsdWUoXG4gICAgICAgICAgcHJvcHMsXG4gICAgICAgICAgcmVuZGVyUGhvbmVOdW1iZXJWYWx1ZVxuICAgICAgICApO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJudW1iZXJcIjpcbiAgICAgICAgY29udGVudCA9IGNvbXBvbmVudHMucHJvcGVydHlOdW1iZXJWYWx1ZShwcm9wcywgcmVuZGVyTnVtYmVyVmFsdWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJjcmVhdGVkX3RpbWVcIjpcbiAgICAgICAgY29udGVudCA9IGNvbXBvbmVudHMucHJvcGVydHlDcmVhdGVkVGltZVZhbHVlKFxuICAgICAgICAgIHByb3BzLFxuICAgICAgICAgIHJlbmRlckNyZWF0ZWRUaW1lVmFsdWVcbiAgICAgICAgKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwibGFzdF9lZGl0ZWRfdGltZVwiOlxuICAgICAgICBjb250ZW50ID0gY29tcG9uZW50cy5wcm9wZXJ0eUxhc3RFZGl0ZWRUaW1lVmFsdWUoXG4gICAgICAgICAgcHJvcHMsXG4gICAgICAgICAgcmVuZGVyTGFzdEVkaXRlZFRpbWVWYWx1ZVxuICAgICAgICApO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJjcmVhdGVkX2J5XCI6XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImxhc3RfZWRpdGVkX2J5XCI6XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImF1dG9faW5jcmVtZW50X2lkXCI6XG4gICAgICAgIGNvbnRlbnQgPSBjb21wb25lbnRzLnByb3BlcnR5VGV4dFZhbHVlKFxuICAgICAgICAgIHByb3BzLFxuICAgICAgICAgIHJlbmRlckF1dG9JbmNyZW1lbnRJZFZhbHVlXG4gICAgICAgICk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInRleHRcIjpcbiAgICAgICAgY29udGVudCA9IGNvbXBvbmVudHMucHJvcGVydHlUZXh0VmFsdWUocHJvcHMsIHJlbmRlclRleHRWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImRhdGVcIjpcbiAgICAgICAgY29udGVudCA9IGNvbXBvbmVudHMucHJvcGVydHlEYXRlVmFsdWUocHJvcHMsIHJlbmRlckRhdGVWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgY29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBqc3g0NihUZXh0LCB7IHZhbHVlOiBkYXRhLCBibG9jayB9KTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NDYoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBgbm90aW9uLXByb3BlcnR5IG5vdGlvbi1wcm9wZXJ0eS0ke3NjaGVtYS50eXBlfWAsIGNoaWxkcmVuOiBjb250ZW50IH0pO1xufVxudmFyIFByb3BlcnR5SW1wbE1lbW8gPSBSZWFjdDE1Lm1lbW8oUHJvcGVydHlJbXBsKTtcblxuLy8gc3JjL3RoaXJkLXBhcnR5L2NvbGxlY3Rpb24tcm93LnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDQ3LCBqc3hzIGFzIGpzeHMxMiB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gQ29sbGVjdGlvblJvdyh7XG4gIGJsb2NrLFxuICBwYWdlSGVhZGVyID0gZmFsc2UsXG4gIGNsYXNzTmFtZVxufSkge1xuICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gIGNvbnN0IHsgcmVjb3JkTWFwIH0gPSB1c2VOb3Rpb25Db250ZXh0KCk7XG4gIGNvbnN0IGNvbGxlY3Rpb25JZCA9IGJsb2NrLnBhcmVudF9pZDtcbiAgY29uc3QgY29sbGVjdGlvbiA9IChfYSA9IHJlY29yZE1hcC5jb2xsZWN0aW9uW2NvbGxlY3Rpb25JZF0pID09IG51bGwgPyB2b2lkIDAgOiBfYS52YWx1ZTtcbiAgY29uc3Qgc2NoZW1hcyA9IGNvbGxlY3Rpb24gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb24uc2NoZW1hO1xuICBpZiAoIWNvbGxlY3Rpb24gfHwgIXNjaGVtYXMpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBsZXQgcHJvcGVydHlJZHMgPSBPYmplY3Qua2V5cyhzY2hlbWFzKS5maWx0ZXIoKGlkKSA9PiBpZCAhPT0gXCJ0aXRsZVwiKTtcbiAgaWYgKChfYiA9IGNvbGxlY3Rpb24uZm9ybWF0KSA9PSBudWxsID8gdm9pZCAwIDogX2IucHJvcGVydHlfdmlzaWJpbGl0eSkge1xuICAgIHByb3BlcnR5SWRzID0gcHJvcGVydHlJZHMuZmlsdGVyKFxuICAgICAgKGlkKSA9PiB7XG4gICAgICAgIHZhciBfYTIsIF9iMiwgX2MyO1xuICAgICAgICByZXR1cm4gKChfYzIgPSAoX2IyID0gKF9hMiA9IGNvbGxlY3Rpb24uZm9ybWF0KSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnByb3BlcnR5X3Zpc2liaWxpdHkpID09IG51bGwgPyB2b2lkIDAgOiBfYjIuZmluZChcbiAgICAgICAgICAoeyBwcm9wZXJ0eSB9KSA9PiBwcm9wZXJ0eSA9PT0gaWRcbiAgICAgICAgKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jMi52aXNpYmlsaXR5KSAhPT0gXCJoaWRlXCI7XG4gICAgICB9XG4gICAgKTtcbiAgfVxuICBpZiAoKF9jID0gY29sbGVjdGlvbi5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfYy5jb2xsZWN0aW9uX3BhZ2VfcHJvcGVydGllcykge1xuICAgIGNvbnN0IGlkVG9JbmRleCA9IE9iamVjdC5mcm9tRW50cmllcyhcbiAgICAgIChfZCA9IGNvbGxlY3Rpb24uZm9ybWF0KSA9PSBudWxsID8gdm9pZCAwIDogX2QuY29sbGVjdGlvbl9wYWdlX3Byb3BlcnRpZXMubWFwKChwLCBpKSA9PiBbXG4gICAgICAgIHAucHJvcGVydHksXG4gICAgICAgIGlcbiAgICAgIF0pXG4gICAgKTtcbiAgICBwcm9wZXJ0eUlkcy5zb3J0KChhLCBiKSA9PiBpZFRvSW5kZXhbYV0gLSBpZFRvSW5kZXhbYl0pO1xuICB9IGVsc2Uge1xuICAgIHByb3BlcnR5SWRzLnNvcnQoKGEsIGIpID0+IHNjaGVtYXNbYV0ubmFtZS5sb2NhbGVDb21wYXJlKHNjaGVtYXNbYl0ubmFtZSkpO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NDcoXCJkaXZcIiwgeyBjbGFzc05hbWU6IGNzKFwibm90aW9uLWNvbGxlY3Rpb24tcm93XCIsIGNsYXNzTmFtZSksIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4NDcoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24tcm93LWJvZHlcIiwgY2hpbGRyZW46IHByb3BlcnR5SWRzLm1hcCgocHJvcGVydHlJZCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgY29uc3Qgc2NoZW1hID0gc2NoZW1hc1twcm9wZXJ0eUlkXTtcbiAgICBpZiAoIXNjaGVtYSkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzMTIoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24tcm93LXByb3BlcnR5XCIsIGNoaWxkcmVuOiBbXG4gICAgICAvKiBAX19QVVJFX18gKi8ganN4NDcoQ29sbGVjdGlvbkNvbHVtblRpdGxlLCB7IHNjaGVtYSB9KSxcbiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g0NyhcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1yb3ctdmFsdWVcIiwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g0NyhcbiAgICAgICAgUHJvcGVydHksXG4gICAgICAgIHtcbiAgICAgICAgICBzY2hlbWEsXG4gICAgICAgICAgZGF0YTogKF9hMiA9IGJsb2NrLnByb3BlcnRpZXMpID09IG51bGwgPyB2b2lkIDAgOiBfYTJbcHJvcGVydHlJZF0sXG4gICAgICAgICAgcHJvcGVydHlJZCxcbiAgICAgICAgICBibG9jayxcbiAgICAgICAgICBjb2xsZWN0aW9uLFxuICAgICAgICAgIHBhZ2VIZWFkZXJcbiAgICAgICAgfVxuICAgICAgKSB9KVxuICAgIF0gfSwgcHJvcGVydHlJZCk7XG4gIH0pIH0pIH0pO1xufVxuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi12aWV3LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QxOSBmcm9tIFwicmVhY3RcIjtcblxuLy8gc3JjL3RoaXJkLXBhcnR5L2NvbGxlY3Rpb24tdmlldy1ib2FyZC50c3hcbmltcG9ydCBcIm5vdGlvbi10eXBlc1wiO1xuaW1wb3J0ICogYXMgUmVhY3QxNyBmcm9tIFwicmVhY3RcIjtcblxuLy8gc3JjL2ljb25zL2VtcHR5LWljb24udHN4XG5pbXBvcnQgXCJyZWFjdFwiO1xuaW1wb3J0IHsganN4IGFzIGpzeDQ4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBFbXB0eUljb24ocHJvcHMpIHtcbiAgY29uc3QgeyBjbGFzc05hbWUsIC4uLnJlc3QgfSA9IHByb3BzO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDQ4KFwic3ZnXCIsIHsgY2xhc3NOYW1lLCAuLi5yZXN0LCB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiLCB3aWR0aDogXCIxNFwiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDQ4KFwicGF0aFwiLCB7IGQ6IFwiTTExLjA5MTgsMCBDMTEuNTM4MywwIDExLjkzMDcsMC4yOTU4OTggMTIuMDUzMywwLjcyNTU4NiBMMTMuOTYxNSw3LjQwMzMyIEMxMy45ODcxLDcuNDkzMTYgMTQsNy41ODU5NCAxNCw3LjY3ODcxIEwxNCwxMyBDMTQsMTMuNTUyNyAxMy41NTIyLDE0IDEzLDE0IEwxLDE0IEMwLjQ0Nzc1NCwxNCAwLDEzLjU1MjcgMCwxMyBMMCw3LjY3ODcxIEMwLDcuNTg1OTQgMC4wMTI5Mzk1LDcuNDkzMTYgMC4wMzg0NTIxLDcuNDAzMzIgTDEuOTQ2NjYsMC43MjU1ODYgQzIuMDY5MzQsMC4yOTU4OTggMi40NjE2NywwIDIuOTA4MiwwIEwxMS4wOTE4LDAgWiBNNC4yNzI3MSwxLjUgQzMuODM3MjgsMS41IDMuNDUxNzgsMS43ODIyMyAzLjMxOTgyLDIuMTk3MjcgTDEuOTE0NTUsNi42MTMyOCBDMS43MDk0Nyw3LjI1ODc5IDIuMTkwOCw3LjkxNjk5IDIuODY3NTUsNy45MTY5OSBMNC43MDgzNyw3LjkxNjk5IEM0LjcwODM3LDguOTM2NTIgNS4xNjY2MywxMC4xNjggNywxMC4xNjggQzguODMzMzcsMTAuMTY4IDkuMjkxNjMsOC45MzY1MiA5LjI5MTYzLDcuOTE2OTkgTDExLjE0NzgsNy44OTM1NSBDMTEuODIwMSw3Ljg4NDc3IDEyLjI5MjcsNy4yMjg1MiAxMi4wODc2LDYuNTg4ODcgTDEwLjY4MSwyLjE5NTMxIEMxMC41NDg1LDEuNzgxMjUgMTAuMTYzNSwxLjUgOS43Mjg2NCwxLjUgTDQuMjcyNzEsMS41IFpcIiB9KSB9KTtcbn1cblxuLy8gc3JjL3RoaXJkLXBhcnR5L2NvbGxlY3Rpb24tY2FyZC50c3hcbmltcG9ydCBcIm5vdGlvbi10eXBlc1wiO1xuaW1wb3J0IHsgZ2V0VGV4dENvbnRlbnQgYXMgZ2V0VGV4dENvbnRlbnQzIH0gZnJvbSBcIm5vdGlvbi11dGlsc1wiO1xuaW1wb3J0IHsgRnJhZ21lbnQgYXMgRnJhZ21lbnQ4LCBqc3ggYXMganN4NDksIGpzeHMgYXMganN4czEzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBDb2xsZWN0aW9uQ2FyZCh7XG4gIGNvbGxlY3Rpb24sXG4gIGJsb2NrLFxuICBjb3ZlcixcbiAgY292ZXJTaXplLFxuICBjb3ZlckFzcGVjdCxcbiAgcHJvcGVydGllcyxcbiAgY2xhc3NOYW1lLFxuICAuLi5yZXN0XG59KSB7XG4gIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZywgX2gsIF9pLCBfaiwgX2ssIF9sLCBfbTtcbiAgY29uc3QgY3R4MiA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgY29uc3Qge1xuICAgIGNvbXBvbmVudHMsXG4gICAgcmVjb3JkTWFwLFxuICAgIG1hcFBhZ2VVcmwsXG4gICAgbWFwSW1hZ2VVcmwsXG4gICAgaXNMaW5rQ29sbGVjdGlvblRvVXJsUHJvcGVydHlcbiAgfSA9IGN0eDI7XG4gIGxldCBjb3ZlckNvbnRlbnQgPSBudWxsO1xuICBjb25zdCB7IHBhZ2VfY292ZXJfcG9zaXRpb24gPSAwLjUsIGNhcmRfY292ZXJfcG9zaXRpb24gPSAwLjUgfSA9IGJsb2NrLmZvcm1hdCB8fCB7fTtcbiAgY29uc3QgY292ZXJQb3NpdGlvbiA9ICgxIC0gcGFnZV9jb3Zlcl9wb3NpdGlvbikgKiAxMDA7XG4gIGNvbnN0IGNhcmRDb3ZlclBvc2l0aW9uID0gKDEgLSBjYXJkX2NvdmVyX3Bvc2l0aW9uKSAqIDEwMDtcbiAgaWYgKChjb3ZlciA9PSBudWxsID8gdm9pZCAwIDogY292ZXIudHlwZSkgPT09IFwicGFnZV9jb250ZW50XCIpIHtcbiAgICBjb25zdCBjb250ZW50QmxvY2tJZCA9IChfYSA9IGJsb2NrLmNvbnRlbnQpID09IG51bGwgPyB2b2lkIDAgOiBfYS5maW5kKChibG9ja0lkKSA9PiB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgY29uc3QgYmxvY2syID0gKF9hMiA9IHJlY29yZE1hcC5ibG9ja1tibG9ja0lkXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi52YWx1ZTtcbiAgICAgIHJldHVybiAoYmxvY2syID09IG51bGwgPyB2b2lkIDAgOiBibG9jazIudHlwZSkgPT09IFwiaW1hZ2VcIjtcbiAgICB9KTtcbiAgICBpZiAoY29udGVudEJsb2NrSWQpIHtcbiAgICAgIGNvbnN0IGNvbnRlbnRCbG9jayA9IChfYiA9IHJlY29yZE1hcC5ibG9ja1tjb250ZW50QmxvY2tJZF0pID09IG51bGwgPyB2b2lkIDAgOiBfYi52YWx1ZTtcbiAgICAgIGNvbnN0IHNvdXJjZSA9IChfZyA9IChfZSA9IChfZCA9IChfYyA9IGNvbnRlbnRCbG9jay5wcm9wZXJ0aWVzKSA9PSBudWxsID8gdm9pZCAwIDogX2Muc291cmNlKSA9PSBudWxsID8gdm9pZCAwIDogX2RbMF0pID09IG51bGwgPyB2b2lkIDAgOiBfZVswXSkgIT0gbnVsbCA/IF9nIDogKF9mID0gY29udGVudEJsb2NrLmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9mLmRpc3BsYXlfc291cmNlO1xuICAgICAgaWYgKHNvdXJjZSkge1xuICAgICAgICBjb25zdCBzcmMgPSBtYXBJbWFnZVVybChzb3VyY2UsIGNvbnRlbnRCbG9jayk7XG4gICAgICAgIGNvbnN0IGNhcHRpb24gPSAoX2ogPSAoX2kgPSAoX2ggPSBjb250ZW50QmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9oLmNhcHRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfaVswXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9qWzBdO1xuICAgICAgICBjb3ZlckNvbnRlbnQgPSAvKiBAX19QVVJFX18gKi8ganN4NDkoXG4gICAgICAgICAgTGF6eUltYWdlLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgIGFsdDogY2FwdGlvbiB8fCBcIm5vdGlvbiBpbWFnZVwiLFxuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgb2JqZWN0Rml0OiBjb3ZlckFzcGVjdCxcbiAgICAgICAgICAgICAgb2JqZWN0UG9zaXRpb246IGBjZW50ZXIgJHtjYXJkQ292ZXJQb3NpdGlvbn0lYFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKCFjb3ZlckNvbnRlbnQpIHtcbiAgICAgIGNvdmVyQ29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBqc3g0OShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1jYXJkLWNvdmVyLWVtcHR5XCIgfSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKChjb3ZlciA9PSBudWxsID8gdm9pZCAwIDogY292ZXIudHlwZSkgPT09IFwicGFnZV9jb3ZlclwiKSB7XG4gICAgY29uc3QgeyBwYWdlX2NvdmVyIH0gPSBibG9jay5mb3JtYXQgfHwge307XG4gICAgaWYgKHBhZ2VfY292ZXIpIHtcbiAgICAgIGNvbnN0IGNvdmVyUG9zaXRpb24yID0gKDEgLSBwYWdlX2NvdmVyX3Bvc2l0aW9uKSAqIDEwMDtcbiAgICAgIGNvdmVyQ29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBqc3g0OShcbiAgICAgICAgTGF6eUltYWdlLFxuICAgICAgICB7XG4gICAgICAgICAgc3JjOiBtYXBJbWFnZVVybChwYWdlX2NvdmVyLCBibG9jayksXG4gICAgICAgICAgYWx0OiBnZXRUZXh0Q29udGVudDMoKF9rID0gYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9rLnRpdGxlKSxcbiAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgb2JqZWN0Rml0OiBjb3ZlckFzcGVjdCxcbiAgICAgICAgICAgIG9iamVjdFBvc2l0aW9uOiBgY2VudGVyICR7Y292ZXJQb3NpdGlvbjJ9JWBcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfVxuICB9IGVsc2UgaWYgKChjb3ZlciA9PSBudWxsID8gdm9pZCAwIDogY292ZXIudHlwZSkgPT09IFwicHJvcGVydHlcIikge1xuICAgIGNvbnN0IHsgcHJvcGVydHkgfSA9IGNvdmVyO1xuICAgIGlmICghcHJvcGVydHkpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IHNjaGVtYSA9IGNvbGxlY3Rpb24uc2NoZW1hW3Byb3BlcnR5XTtcbiAgICBjb25zdCBkYXRhID0gKF9sID0gYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9sW3Byb3BlcnR5XTtcbiAgICBpZiAoc2NoZW1hICYmIGRhdGEpIHtcbiAgICAgIGlmIChzY2hlbWEudHlwZSA9PT0gXCJmaWxlXCIpIHtcbiAgICAgICAgY29uc3QgZmlsZXMgPSBkYXRhLmZpbHRlcigodikgPT4gdi5sZW5ndGggPT09IDIpLm1hcCgoZikgPT4gZi5mbGF0KCkuZmxhdCgpKTtcbiAgICAgICAgY29uc3QgZmlsZSA9IGZpbGVzWzBdO1xuICAgICAgICBpZiAoZmlsZSkge1xuICAgICAgICAgIGNvdmVyQ29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBqc3g0OShcInNwYW5cIiwgeyBjbGFzc05hbWU6IGBub3Rpb24tcHJvcGVydHktJHtzY2hlbWEudHlwZX1gLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDQ5KFxuICAgICAgICAgICAgTGF6eUltYWdlLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBhbHQ6IGZpbGVbMF0sXG4gICAgICAgICAgICAgIHNyYzogbWFwSW1hZ2VVcmwoZmlsZVsyXSwgYmxvY2spLFxuICAgICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgIG9iamVjdEZpdDogY292ZXJBc3BlY3QsXG4gICAgICAgICAgICAgICAgb2JqZWN0UG9zaXRpb246IGBjZW50ZXIgJHtjb3ZlclBvc2l0aW9ufSVgXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICApIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb3ZlckNvbnRlbnQgPSAvKiBAX19QVVJFX18gKi8ganN4NDkoUHJvcGVydHksIHsgcHJvcGVydHlJZDogcHJvcGVydHksIHNjaGVtYSwgZGF0YSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgbGV0IGxpbmtQcm9wZXJ0aWVzID0gW107XG4gIGlmIChpc0xpbmtDb2xsZWN0aW9uVG9VcmxQcm9wZXJ0eSAmJiBwcm9wZXJ0aWVzKSB7XG4gICAgbGlua1Byb3BlcnRpZXMgPSBwcm9wZXJ0aWVzLmZpbHRlcihcbiAgICAgIChwKSA9PiBwLnZpc2libGUgJiYgcC5wcm9wZXJ0eSAhPT0gXCJ0aXRsZVwiICYmIGNvbGxlY3Rpb24uc2NoZW1hW3AucHJvcGVydHldXG4gICAgKS5maWx0ZXIoKHApID0+IHtcbiAgICAgIGlmICghYmxvY2sucHJvcGVydGllcykgcmV0dXJuIGZhbHNlO1xuICAgICAgY29uc3Qgc2NoZW1hID0gY29sbGVjdGlvbi5zY2hlbWFbcC5wcm9wZXJ0eV07XG4gICAgICByZXR1cm4gKHNjaGVtYSA9PSBudWxsID8gdm9pZCAwIDogc2NoZW1hLnR5cGUpID09PSBcInVybFwiO1xuICAgIH0pLm1hcCgocCkgPT4ge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIHJldHVybiAoX2EyID0gYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMltwLnByb3BlcnR5XTtcbiAgICB9KS5maWx0ZXIoKHApID0+IHAgPT0gbnVsbCA/IHZvaWQgMCA6IHBbMF0pO1xuICB9XG4gIGxldCB1cmwgPSBudWxsO1xuICBpZiAobGlua1Byb3BlcnRpZXMgJiYgbGlua1Byb3BlcnRpZXMubGVuZ3RoID4gMCAmJiBsaW5rUHJvcGVydGllc1swXS5sZW5ndGggPiAwICYmIGxpbmtQcm9wZXJ0aWVzWzBdWzBdLmxlbmd0aCA+IDApIHtcbiAgICB1cmwgPSBsaW5rUHJvcGVydGllc1swXVswXVswXTtcbiAgfVxuICBjb25zdCBpbm5lckNhcmQgPSAvKiBAX19QVVJFX18gKi8ganN4czEzKEZyYWdtZW50OCwgeyBjaGlsZHJlbjogW1xuICAgIChjb3ZlckNvbnRlbnQgfHwgKGNvdmVyID09IG51bGwgPyB2b2lkIDAgOiBjb3Zlci50eXBlKSAhPT0gXCJub25lXCIpICYmIC8qIEBfX1BVUkVfXyAqLyBqc3g0OShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1jYXJkLWNvdmVyXCIsIGNoaWxkcmVuOiBjb3ZlckNvbnRlbnQgfSksXG4gICAgLyogQF9fUFVSRV9fICovIGpzeHMxMyhcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1jYXJkLWJvZHlcIiwgY2hpbGRyZW46IFtcbiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g0OShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1jYXJkLXByb3BlcnR5XCIsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4NDkoXG4gICAgICAgIFByb3BlcnR5LFxuICAgICAgICB7XG4gICAgICAgICAgc2NoZW1hOiBjb2xsZWN0aW9uLnNjaGVtYS50aXRsZSxcbiAgICAgICAgICBkYXRhOiAoX20gPSBibG9jayA9PSBudWxsID8gdm9pZCAwIDogYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9tLnRpdGxlLFxuICAgICAgICAgIGJsb2NrLFxuICAgICAgICAgIGNvbGxlY3Rpb25cbiAgICAgICAgfVxuICAgICAgKSB9KSxcbiAgICAgIHByb3BlcnRpZXMgPT0gbnVsbCA/IHZvaWQgMCA6IHByb3BlcnRpZXMuZmlsdGVyKFxuICAgICAgICAocCkgPT4gcC52aXNpYmxlICYmIHAucHJvcGVydHkgIT09IFwidGl0bGVcIiAmJiBjb2xsZWN0aW9uLnNjaGVtYVtwLnByb3BlcnR5XVxuICAgICAgKS5tYXAoKHApID0+IHtcbiAgICAgICAgaWYgKCFibG9jay5wcm9wZXJ0aWVzIHx8ICFwLnByb3BlcnR5KSByZXR1cm4gbnVsbDtcbiAgICAgICAgY29uc3Qgc2NoZW1hID0gY29sbGVjdGlvbi5zY2hlbWFbcC5wcm9wZXJ0eV07XG4gICAgICAgIGNvbnN0IGRhdGEgPSBibG9jay5wcm9wZXJ0aWVzW3AucHJvcGVydHldO1xuICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDQ5KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1jb2xsZWN0aW9uLWNhcmQtcHJvcGVydHlcIiwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g0OShcbiAgICAgICAgICBQcm9wZXJ0eSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzY2hlbWEsXG4gICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgYmxvY2ssXG4gICAgICAgICAgICBjb2xsZWN0aW9uLFxuICAgICAgICAgICAgaW5saW5lOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICApIH0sIHAucHJvcGVydHkpO1xuICAgICAgfSlcbiAgICBdIH0pXG4gIF0gfSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NDkoXG4gICAgTm90aW9uQ29udGV4dFByb3ZpZGVyLFxuICAgIHtcbiAgICAgIC4uLmN0eDIsXG4gICAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIC4uLmN0eDIuY29tcG9uZW50cyxcbiAgICAgICAgLy8gRGlzYWJsZSA8YT4gdGFicyBpbiBhbGwgY2hpbGQgY29tcG9uZW50cyBzbyB3ZSBkb24ndCBjcmVhdGUgaW52YWxpZCBET01cbiAgICAgICAgLy8gdHJlZXMgd2l0aCBzdGFja2VkIDxhPiB0YWdzLlxuICAgICAgICBMaW5rOiAocHJvcHMpID0+IHtcbiAgICAgICAgICB2YXIgX2EyLCBfYjIsIF9jMjtcbiAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDQ5KFwiZm9ybVwiLCB7IGFjdGlvbjogcHJvcHMuaHJlZiwgdGFyZ2V0OiBcIl9ibGFua1wiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDQ5KFxuICAgICAgICAgICAgXCJpbnB1dFwiLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB0eXBlOiBcInN1Ym1pdFwiLFxuICAgICAgICAgICAgICB2YWx1ZTogKF9jMiA9IChfYjIgPSAoX2EyID0gcHJvcHMgPT0gbnVsbCA/IHZvaWQgMCA6IHByb3BzLmNoaWxkcmVuKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnByb3BzKSA9PSBudWxsID8gdm9pZCAwIDogX2IyLmNoaWxkcmVuKSAhPSBudWxsID8gX2MyIDogcHJvcHMuaHJlZixcbiAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5lc3RlZC1mb3JtLWxpbmsgbm90aW9uLWxpbmtcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgICkgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIFBhZ2VMaW5rOiBkdW1teUxpbmtcbiAgICAgIH0sXG4gICAgICBjaGlsZHJlbjogaXNMaW5rQ29sbGVjdGlvblRvVXJsUHJvcGVydHkgJiYgdXJsID8gLyogQF9fUFVSRV9fICovIGpzeDQ5KFxuICAgICAgICBjb21wb25lbnRzLkxpbmssXG4gICAgICAgIHtcbiAgICAgICAgICBjbGFzc05hbWU6IGNzKFxuICAgICAgICAgICAgXCJub3Rpb24tY29sbGVjdGlvbi1jYXJkXCIsXG4gICAgICAgICAgICBgbm90aW9uLWNvbGxlY3Rpb24tY2FyZC1zaXplLSR7Y292ZXJTaXplfWAsXG4gICAgICAgICAgICBjbGFzc05hbWVcbiAgICAgICAgICApLFxuICAgICAgICAgIGhyZWY6IHVybCxcbiAgICAgICAgICAuLi5yZXN0LFxuICAgICAgICAgIGNoaWxkcmVuOiBpbm5lckNhcmRcbiAgICAgICAgfVxuICAgICAgKSA6IC8qIEBfX1BVUkVfXyAqLyBqc3g0OShcbiAgICAgICAgY29tcG9uZW50cy5QYWdlTGluayxcbiAgICAgICAge1xuICAgICAgICAgIGNsYXNzTmFtZTogY3MoXG4gICAgICAgICAgICBcIm5vdGlvbi1jb2xsZWN0aW9uLWNhcmRcIixcbiAgICAgICAgICAgIGBub3Rpb24tY29sbGVjdGlvbi1jYXJkLXNpemUtJHtjb3ZlclNpemV9YCxcbiAgICAgICAgICAgIGNsYXNzTmFtZVxuICAgICAgICAgICksXG4gICAgICAgICAgaHJlZjogbWFwUGFnZVVybChibG9jay5pZCksXG4gICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICBjaGlsZHJlbjogaW5uZXJDYXJkXG4gICAgICAgIH1cbiAgICAgIClcbiAgICB9XG4gICk7XG59XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLWdyb3VwLnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDUwLCBqc3hzIGFzIGpzeHMxNCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gQ29sbGVjdGlvbkdyb3VwKHtcbiAgY29sbGVjdGlvblZpZXdDb21wb25lbnQ6IENvbGxlY3Rpb25WaWV3Q29tcG9uZW50LFxuICBjb2xsZWN0aW9uLFxuICBjb2xsZWN0aW9uR3JvdXAsXG4gIHNjaGVtYSxcbiAgdmFsdWUsXG4gIGhpZGRlbixcbiAgc3VtbWFyeVByb3BzLFxuICBkZXRhaWxzUHJvcHMsXG4gIC4uLnJlc3Rcbn0pIHtcbiAgaWYgKGhpZGRlbikgcmV0dXJuIG51bGw7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4czE0KFwiZGV0YWlsc1wiLCB7IG9wZW46IHRydWUsIGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1ncm91cFwiLCAuLi5kZXRhaWxzUHJvcHMsIGNoaWxkcmVuOiBbXG4gICAgLyogQF9fUFVSRV9fICovIGpzeDUwKFwic3VtbWFyeVwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1ncm91cC10aXRsZVwiLCAuLi5zdW1tYXJ5UHJvcHMsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4czE0KFwiZGl2XCIsIHsgY2hpbGRyZW46IFtcbiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g1MChQcm9wZXJ0eSwgeyBzY2hlbWEsIGRhdGE6IFtbdmFsdWVdXSwgY29sbGVjdGlvbiB9KSxcbiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g1MChcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWJvYXJkLXRoLWNvdW50XCIsIGNoaWxkcmVuOiBjb2xsZWN0aW9uR3JvdXAgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb25Hcm91cC50b3RhbCB9KVxuICAgIF0gfSkgfSksXG4gICAgLyogQF9fUFVSRV9fICovIGpzeDUwKFxuICAgICAgQ29sbGVjdGlvblZpZXdDb21wb25lbnQsXG4gICAgICB7XG4gICAgICAgIGNvbGxlY3Rpb24sXG4gICAgICAgIGNvbGxlY3Rpb25Hcm91cCxcbiAgICAgICAgLi4ucmVzdFxuICAgICAgfVxuICAgIClcbiAgXSB9KTtcbn1cblxuLy8gc3JjL3RoaXJkLXBhcnR5L2NvbGxlY3Rpb24tdXRpbHMudHNcbmZ1bmN0aW9uIGdldENvbGxlY3Rpb25Hcm91cHMoY29sbGVjdGlvbiwgY29sbGVjdGlvblZpZXcsIGNvbGxlY3Rpb25EYXRhLCAuLi5yZXN0KSB7XG4gIHZhciBfYTtcbiAgY29uc3QgZWxlbXMgPSAoKF9hID0gY29sbGVjdGlvblZpZXcgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb25WaWV3LmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmNvbGxlY3Rpb25fZ3JvdXBzKSB8fCBbXTtcbiAgcmV0dXJuIGVsZW1zLm1hcCgoeyBwcm9wZXJ0eSwgaGlkZGVuLCB2YWx1ZTogeyB2YWx1ZSwgdHlwZSB9IH0pID0+IHtcbiAgICB2YXIgX2EyLCBfYjtcbiAgICBjb25zdCBpc1VuY2F0ZWdvcml6ZWRWYWx1ZSA9IHZhbHVlID09PSB2b2lkIDA7XG4gICAgY29uc3QgaXNEYXRlVmFsdWUgPSB2YWx1ZSA9PSBudWxsID8gdm9pZCAwIDogdmFsdWUucmFuZ2U7XG4gICAgY29uc3QgcXVlcnlMYWJlbCA9IGlzVW5jYXRlZ29yaXplZFZhbHVlID8gXCJ1bmNhdGVnb3JpemVkXCIgOiBpc0RhdGVWYWx1ZSA/ICgoX2EyID0gdmFsdWUucmFuZ2UpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuc3RhcnRfZGF0ZSkgfHwgKChfYiA9IHZhbHVlLnJhbmdlKSA9PSBudWxsID8gdm9pZCAwIDogX2IuZW5kX2RhdGUpIDogKHZhbHVlID09IG51bGwgPyB2b2lkIDAgOiB2YWx1ZS52YWx1ZSkgfHwgdmFsdWU7XG4gICAgY29uc3QgY29sbGVjdGlvbkdyb3VwID0gY29sbGVjdGlvbkRhdGFbYHJlc3VsdHM6JHt0eXBlfToke3F1ZXJ5TGFiZWx9YF07XG4gICAgbGV0IHF1ZXJ5VmFsdWUgPSAhaXNVbmNhdGVnb3JpemVkVmFsdWUgJiYgKGlzRGF0ZVZhbHVlIHx8ICh2YWx1ZSA9PSBudWxsID8gdm9pZCAwIDogdmFsdWUudmFsdWUpIHx8IHZhbHVlKTtcbiAgICBsZXQgc2NoZW1hID0gY29sbGVjdGlvbi5zY2hlbWFbcHJvcGVydHldO1xuICAgIGlmICh0eXBlID09PSBcImNoZWNrYm94XCIgJiYgdmFsdWUpIHtcbiAgICAgIHF1ZXJ5VmFsdWUgPSBcIlllc1wiO1xuICAgIH1cbiAgICBpZiAoaXNEYXRlVmFsdWUpIHtcbiAgICAgIHNjaGVtYSA9IHtcbiAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgIG5hbWU6IFwidGV4dFwiXG4gICAgICB9O1xuICAgICAgcXVlcnlWYWx1ZSA9IGZvcm1hdChuZXcgRGF0ZShxdWVyeUxhYmVsKSwgXCJNTU0gZCwgWVlZIGhoOm1tIGFhXCIpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgY29sbGVjdGlvbkdyb3VwLFxuICAgICAgc2NoZW1hLFxuICAgICAgdmFsdWU6IHF1ZXJ5VmFsdWUgfHwgXCJObyBkZXNjcmlwdGlvblwiLFxuICAgICAgaGlkZGVuLFxuICAgICAgY29sbGVjdGlvbixcbiAgICAgIGNvbGxlY3Rpb25WaWV3LFxuICAgICAgY29sbGVjdGlvbkRhdGEsXG4gICAgICBibG9ja0lkczogY29sbGVjdGlvbkdyb3VwID09IG51bGwgPyB2b2lkIDAgOiBjb2xsZWN0aW9uR3JvdXAuYmxvY2tJZHMsXG4gICAgICAuLi5yZXN0XG4gICAgfTtcbiAgfSk7XG59XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLXZpZXctYm9hcmQudHN4XG5pbXBvcnQgeyBqc3ggYXMganN4NTEsIGpzeHMgYXMganN4czE1IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBDb2xsZWN0aW9uVmlld0JvYXJkKHtcbiAgY29sbGVjdGlvbixcbiAgY29sbGVjdGlvblZpZXcsXG4gIGNvbGxlY3Rpb25EYXRhLFxuICBwYWRkaW5nXG59KSB7XG4gIHZhciBfYTtcbiAgY29uc3QgaXNHcm91cGVkQ29sbGVjdGlvbiA9IChfYSA9IGNvbGxlY3Rpb25WaWV3ID09IG51bGwgPyB2b2lkIDAgOiBjb2xsZWN0aW9uVmlldy5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfYS5jb2xsZWN0aW9uX2dyb3VwX2J5O1xuICBpZiAoaXNHcm91cGVkQ29sbGVjdGlvbikge1xuICAgIGNvbnN0IGNvbGxlY3Rpb25Hcm91cHMgPSBnZXRDb2xsZWN0aW9uR3JvdXBzKFxuICAgICAgY29sbGVjdGlvbixcbiAgICAgIGNvbGxlY3Rpb25WaWV3LFxuICAgICAgY29sbGVjdGlvbkRhdGEsXG4gICAgICBwYWRkaW5nXG4gICAgKTtcbiAgICByZXR1cm4gY29sbGVjdGlvbkdyb3Vwcy5tYXAoKGdyb3VwLCBpbmRleCkgPT4gLyogQF9fUFVSRV9fICovIGpzeDUxKFxuICAgICAgQ29sbGVjdGlvbkdyb3VwLFxuICAgICAge1xuICAgICAgICAuLi5ncm91cCxcbiAgICAgICAgc3VtbWFyeVByb3BzOiB7XG4gICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgIHBhZGRpbmdMZWZ0OiBwYWRkaW5nXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBjb2xsZWN0aW9uVmlld0NvbXBvbmVudDogKHByb3BzKSA9PiAvKiBAX19QVVJFX18gKi8ganN4NTEoQm9hcmQsIHsgcGFkZGluZywgLi4ucHJvcHMgfSlcbiAgICAgIH0sXG4gICAgICBpbmRleFxuICAgICkpO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NTEoXG4gICAgQm9hcmQsXG4gICAge1xuICAgICAgcGFkZGluZyxcbiAgICAgIGNvbGxlY3Rpb25WaWV3LFxuICAgICAgY29sbGVjdGlvbixcbiAgICAgIGNvbGxlY3Rpb25EYXRhXG4gICAgfVxuICApO1xufVxuZnVuY3Rpb24gQm9hcmQoe1xuICBjb2xsZWN0aW9uVmlldyxcbiAgY29sbGVjdGlvbkRhdGEsXG4gIGNvbGxlY3Rpb24sXG4gIHBhZGRpbmdcbn0pIHtcbiAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICBjb25zdCB7IHJlY29yZE1hcCB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICBjb25zdCB7XG4gICAgYm9hcmRfY292ZXIgPSB7IHR5cGU6IFwibm9uZVwiIH0sXG4gICAgYm9hcmRfY292ZXJfc2l6ZSA9IFwibWVkaXVtXCIsXG4gICAgYm9hcmRfY292ZXJfYXNwZWN0ID0gXCJjb3ZlclwiXG4gIH0gPSAoY29sbGVjdGlvblZpZXcgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb25WaWV3LmZvcm1hdCkgfHwge307XG4gIGNvbnN0IGJvYXJkR3JvdXBzID0gKChfYSA9IGNvbGxlY3Rpb25WaWV3ID09IG51bGwgPyB2b2lkIDAgOiBjb2xsZWN0aW9uVmlldy5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfYS5ib2FyZF9jb2x1bW5zKSB8fCAoKF9iID0gY29sbGVjdGlvblZpZXcgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb25WaWV3LmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmJvYXJkX2dyb3VwczIpIHx8IFtdO1xuICBjb25zdCBib2FyZEdyb3VwQnkgPSAoX2QgPSAoX2MgPSBjb2xsZWN0aW9uVmlldyA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvblZpZXcuZm9ybWF0KSA9PSBudWxsID8gdm9pZCAwIDogX2MuYm9hcmRfY29sdW1uc19ieSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9kLmdyb3VwQnk7XG4gIGNvbnN0IGJvYXJkU3R5bGUgPSBSZWFjdDE3LnVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIHBhZGRpbmdMZWZ0OiBwYWRkaW5nXG4gICAgfSksXG4gICAgW3BhZGRpbmddXG4gICk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NTEoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWJvYXJkXCIsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4czE1KFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgY2xhc3NOYW1lOiBjcyhcbiAgICAgICAgXCJub3Rpb24tYm9hcmQtdmlld1wiLFxuICAgICAgICBgbm90aW9uLWJvYXJkLXZpZXctc2l6ZS0ke2JvYXJkX2NvdmVyX3NpemV9YFxuICAgICAgKSxcbiAgICAgIHN0eWxlOiBib2FyZFN0eWxlLFxuICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDUxKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1ib2FyZC1oZWFkZXJcIiwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g1MShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tYm9hcmQtaGVhZGVyLWlubmVyXCIsIGNoaWxkcmVuOiBib2FyZEdyb3Vwcy5tYXAoKHAsIGluZGV4KSA9PiB7XG4gICAgICAgICAgdmFyIF9hMiwgX2IyLCBfYzIsIF9kMjtcbiAgICAgICAgICBpZiAoISgoX2EyID0gY29sbGVjdGlvbkRhdGEuYm9hcmRfY29sdW1ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5yZXN1bHRzKSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IGdyb3VwID0gY29sbGVjdGlvbkRhdGEuYm9hcmRfY29sdW1ucy5yZXN1bHRzW2luZGV4XTtcbiAgICAgICAgICBjb25zdCBzY2hlbWEgPSBjb2xsZWN0aW9uLnNjaGVtYVtwLnByb3BlcnR5XTtcbiAgICAgICAgICBpZiAoIWdyb3VwIHx8ICFzY2hlbWEgfHwgcC5oaWRkZW4pIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDUxKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1ib2FyZC10aFwiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeHMxNShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tYm9hcmQtdGgtYm9keVwiLCBjaGlsZHJlbjogW1xuICAgICAgICAgICAgKChfYjIgPSBncm91cC52YWx1ZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iMi52YWx1ZSkgPyAvKiBAX19QVVJFX18gKi8ganN4NTEoXG4gICAgICAgICAgICAgIFByb3BlcnR5LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2NoZW1hLFxuICAgICAgICAgICAgICAgIGRhdGE6IFtcbiAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgKChfYzIgPSBncm91cC52YWx1ZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jMi52YWx1ZVtib2FyZEdyb3VwQnldKSB8fCAoKF9kMiA9IGdyb3VwLnZhbHVlKSA9PSBudWxsID8gdm9pZCAwIDogX2QyLnZhbHVlKVxuICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgY29sbGVjdGlvblxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApIDogLyogQF9fUFVSRV9fICovIGpzeHMxNShcInNwYW5cIiwgeyBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4NTEoRW1wdHlJY29uLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tYm9hcmQtdGgtZW1wdHlcIiB9KSxcbiAgICAgICAgICAgICAgKHNjaGVtYSA9PSBudWxsID8gdm9pZCAwIDogc2NoZW1hLm5hbWUpID8gYE5vICR7c2NoZW1hLm5hbWV9YCA6IFwiTm8gU2VsZWN0XCJcbiAgICAgICAgICAgIF0gfSksXG4gICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4NTEoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1ib2FyZC10aC1jb3VudFwiLCBjaGlsZHJlbjogZ3JvdXAudG90YWwgfSlcbiAgICAgICAgICBdIH0pIH0sIGluZGV4KTtcbiAgICAgICAgfSkgfSkgfSksXG4gICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g1MShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tYm9hcmQtaGVhZGVyLXBsYWNlaG9sZGVyXCIgfSksXG4gICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g1MShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tYm9hcmQtYm9keVwiLCBjaGlsZHJlbjogYm9hcmRHcm91cHMubWFwKChwLCBpbmRleCkgPT4ge1xuICAgICAgICAgIHZhciBfYTIsIF9iMiwgX2MyLCBfZDIsIF9lO1xuICAgICAgICAgIGNvbnN0IGJvYXJkUmVzdWx0cyA9IChfYTIgPSBjb2xsZWN0aW9uRGF0YS5ib2FyZF9jb2x1bW5zKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnJlc3VsdHM7XG4gICAgICAgICAgaWYgKCFib2FyZFJlc3VsdHMpIHJldHVybiBudWxsO1xuICAgICAgICAgIGlmICghKChfYjIgPSBwID09IG51bGwgPyB2b2lkIDAgOiBwLnZhbHVlKSA9PSBudWxsID8gdm9pZCAwIDogX2IyLnR5cGUpKSByZXR1cm4gbnVsbDtcbiAgICAgICAgICBjb25zdCBzY2hlbWEgPSBjb2xsZWN0aW9uLnNjaGVtYVtwLnByb3BlcnR5XTtcbiAgICAgICAgICBjb25zdCBncm91cCA9IGNvbGxlY3Rpb25EYXRhW2ByZXN1bHRzOiR7KF9jMiA9IHAgPT0gbnVsbCA/IHZvaWQgMCA6IHAudmFsdWUpID09IG51bGwgPyB2b2lkIDAgOiBfYzIudHlwZX06JHsoKF9kMiA9IHAgPT0gbnVsbCA/IHZvaWQgMCA6IHAudmFsdWUpID09IG51bGwgPyB2b2lkIDAgOiBfZDIudmFsdWUpIHx8IFwidW5jYXRlZ29yaXplZFwifWBdO1xuICAgICAgICAgIGlmICghZ3JvdXAgfHwgIXNjaGVtYSB8fCBwLmhpZGRlbikge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NTEoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWJvYXJkLWdyb3VwXCIsIGNoaWxkcmVuOiAoX2UgPSBncm91cC5ibG9ja0lkcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9lLm1hcCgoYmxvY2tJZCkgPT4ge1xuICAgICAgICAgICAgdmFyIF9hMywgX2IzO1xuICAgICAgICAgICAgY29uc3QgYmxvY2sgPSAoX2EzID0gcmVjb3JkTWFwLmJsb2NrW2Jsb2NrSWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2EzLnZhbHVlO1xuICAgICAgICAgICAgaWYgKCFibG9jaykgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDUxKFxuICAgICAgICAgICAgICBDb2xsZWN0aW9uQ2FyZCxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tYm9hcmQtZ3JvdXAtY2FyZFwiLFxuICAgICAgICAgICAgICAgIGNvbGxlY3Rpb24sXG4gICAgICAgICAgICAgICAgYmxvY2ssXG4gICAgICAgICAgICAgICAgY292ZXI6IGJvYXJkX2NvdmVyLFxuICAgICAgICAgICAgICAgIGNvdmVyU2l6ZTogYm9hcmRfY292ZXJfc2l6ZSxcbiAgICAgICAgICAgICAgICBjb3ZlckFzcGVjdDogYm9hcmRfY292ZXJfYXNwZWN0LFxuICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6IChfYjMgPSBjb2xsZWN0aW9uVmlldy5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfYjMuYm9hcmRfcHJvcGVydGllc1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBibG9ja0lkXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0pIH0sIGluZGV4KTtcbiAgICAgICAgfSkgfSlcbiAgICAgIF1cbiAgICB9XG4gICkgfSk7XG59XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLXZpZXctZ2FsbGVyeS50c3hcbmltcG9ydCBcIm5vdGlvbi10eXBlc1wiO1xuaW1wb3J0IHsganN4IGFzIGpzeDUyIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG52YXIgZGVmYXVsdEJsb2NrSWRzID0gW107XG5mdW5jdGlvbiBDb2xsZWN0aW9uVmlld0dhbGxlcnkoe1xuICBjb2xsZWN0aW9uLFxuICBjb2xsZWN0aW9uVmlldyxcbiAgY29sbGVjdGlvbkRhdGFcbn0pIHtcbiAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZTtcbiAgY29uc3QgaXNHcm91cGVkQ29sbGVjdGlvbiA9IChfYSA9IGNvbGxlY3Rpb25WaWV3ID09IG51bGwgPyB2b2lkIDAgOiBjb2xsZWN0aW9uVmlldy5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfYS5jb2xsZWN0aW9uX2dyb3VwX2J5O1xuICBpZiAoaXNHcm91cGVkQ29sbGVjdGlvbikge1xuICAgIGNvbnN0IGNvbGxlY3Rpb25Hcm91cHMgPSBnZXRDb2xsZWN0aW9uR3JvdXBzKFxuICAgICAgY29sbGVjdGlvbixcbiAgICAgIGNvbGxlY3Rpb25WaWV3LFxuICAgICAgY29sbGVjdGlvbkRhdGFcbiAgICApO1xuICAgIHJldHVybiBjb2xsZWN0aW9uR3JvdXBzLm1hcCgoZ3JvdXAsIGluZGV4KSA9PiAvKiBAX19QVVJFX18gKi8ganN4NTIoXG4gICAgICBDb2xsZWN0aW9uR3JvdXAsXG4gICAgICB7XG4gICAgICAgIC4uLmdyb3VwLFxuICAgICAgICBjb2xsZWN0aW9uVmlld0NvbXBvbmVudDogR2FsbGVyeVxuICAgICAgfSxcbiAgICAgIGluZGV4XG4gICAgKSk7XG4gIH1cbiAgY29uc3QgYmxvY2tJZHMgPSAoKF9lID0gKF9kID0gKF9iID0gY29sbGVjdGlvbkRhdGEuY29sbGVjdGlvbl9ncm91cF9yZXN1bHRzKSA9PSBudWxsID8gdm9pZCAwIDogX2IuYmxvY2tJZHMpICE9IG51bGwgPyBfZCA6IChfYyA9IGNvbGxlY3Rpb25EYXRhW1wicmVzdWx0czpyZWxhdGlvbjp1bmNhdGVnb3JpemVkXCJdKSA9PSBudWxsID8gdm9pZCAwIDogX2MuYmxvY2tJZHMpICE9IG51bGwgPyBfZSA6IGNvbGxlY3Rpb25EYXRhLmJsb2NrSWRzKSB8fCBkZWZhdWx0QmxvY2tJZHM7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NTIoXG4gICAgR2FsbGVyeSxcbiAgICB7XG4gICAgICBjb2xsZWN0aW9uVmlldyxcbiAgICAgIGNvbGxlY3Rpb24sXG4gICAgICBibG9ja0lkc1xuICAgIH1cbiAgKTtcbn1cbmZ1bmN0aW9uIEdhbGxlcnkoe1xuICBibG9ja0lkcyxcbiAgY29sbGVjdGlvblZpZXcsXG4gIGNvbGxlY3Rpb25cbn0pIHtcbiAgY29uc3QgeyByZWNvcmRNYXAgfSA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgY29uc3Qge1xuICAgIGdhbGxlcnlfY292ZXIgPSB7IHR5cGU6IFwibm9uZVwiIH0sXG4gICAgZ2FsbGVyeV9jb3Zlcl9zaXplID0gXCJtZWRpdW1cIixcbiAgICBnYWxsZXJ5X2NvdmVyX2FzcGVjdCA9IFwiY292ZXJcIlxuICB9ID0gY29sbGVjdGlvblZpZXcuZm9ybWF0IHx8IHt9O1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDUyKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1nYWxsZXJ5XCIsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4NTIoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWdhbGxlcnktdmlld1wiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDUyKFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgY2xhc3NOYW1lOiBjcyhcbiAgICAgICAgXCJub3Rpb24tZ2FsbGVyeS1ncmlkXCIsXG4gICAgICAgIGBub3Rpb24tZ2FsbGVyeS1ncmlkLXNpemUtJHtnYWxsZXJ5X2NvdmVyX3NpemV9YFxuICAgICAgKSxcbiAgICAgIGNoaWxkcmVuOiBibG9ja0lkcyA9PSBudWxsID8gdm9pZCAwIDogYmxvY2tJZHMubWFwKChibG9ja0lkKSA9PiB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIGNvbnN0IGJsb2NrID0gKF9hID0gcmVjb3JkTWFwLmJsb2NrW2Jsb2NrSWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2EudmFsdWU7XG4gICAgICAgIGlmICghYmxvY2spIHJldHVybiBudWxsO1xuICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDUyKFxuICAgICAgICAgIENvbGxlY3Rpb25DYXJkLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGNvbGxlY3Rpb24sXG4gICAgICAgICAgICBibG9jayxcbiAgICAgICAgICAgIGNvdmVyOiBnYWxsZXJ5X2NvdmVyLFxuICAgICAgICAgICAgY292ZXJTaXplOiBnYWxsZXJ5X2NvdmVyX3NpemUsXG4gICAgICAgICAgICBjb3ZlckFzcGVjdDogZ2FsbGVyeV9jb3Zlcl9hc3BlY3QsXG4gICAgICAgICAgICBwcm9wZXJ0aWVzOiAoX2IgPSBjb2xsZWN0aW9uVmlldy5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfYi5nYWxsZXJ5X3Byb3BlcnRpZXNcbiAgICAgICAgICB9LFxuICAgICAgICAgIGJsb2NrSWRcbiAgICAgICAgKTtcbiAgICAgIH0pXG4gICAgfVxuICApIH0pIH0pO1xufVxuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi12aWV3LWxpc3QudHN4XG5pbXBvcnQgXCJub3Rpb24tdHlwZXNcIjtcbmltcG9ydCB7IGpzeCBhcyBqc3g1MywganN4cyBhcyBqc3hzMTYgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBkZWZhdWx0QmxvY2tJZHMyID0gW107XG5mdW5jdGlvbiBDb2xsZWN0aW9uVmlld0xpc3Qoe1xuICBjb2xsZWN0aW9uLFxuICBjb2xsZWN0aW9uVmlldyxcbiAgY29sbGVjdGlvbkRhdGFcbn0pIHtcbiAgdmFyIF9hLCBfYiwgX2M7XG4gIGNvbnN0IGlzR3JvdXBlZENvbGxlY3Rpb24gPSAoX2EgPSBjb2xsZWN0aW9uVmlldyA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvblZpZXcuZm9ybWF0KSA9PSBudWxsID8gdm9pZCAwIDogX2EuY29sbGVjdGlvbl9ncm91cF9ieTtcbiAgaWYgKGlzR3JvdXBlZENvbGxlY3Rpb24pIHtcbiAgICBjb25zdCBjb2xsZWN0aW9uR3JvdXBzID0gZ2V0Q29sbGVjdGlvbkdyb3VwcyhcbiAgICAgIGNvbGxlY3Rpb24sXG4gICAgICBjb2xsZWN0aW9uVmlldyxcbiAgICAgIGNvbGxlY3Rpb25EYXRhXG4gICAgKTtcbiAgICByZXR1cm4gY29sbGVjdGlvbkdyb3Vwcy5tYXAoKGdyb3VwLCBrZXkpID0+IC8qIEBfX1BVUkVfXyAqLyBqc3g1MyhDb2xsZWN0aW9uR3JvdXAsIHsgLi4uZ3JvdXAsIGNvbGxlY3Rpb25WaWV3Q29tcG9uZW50OiBMaXN0IH0sIGtleSkpO1xuICB9XG4gIGNvbnN0IGJsb2NrSWRzID0gKChfYyA9IChfYiA9IGNvbGxlY3Rpb25EYXRhLmNvbGxlY3Rpb25fZ3JvdXBfcmVzdWx0cykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmJsb2NrSWRzKSAhPSBudWxsID8gX2MgOiBjb2xsZWN0aW9uRGF0YS5ibG9ja0lkcykgfHwgZGVmYXVsdEJsb2NrSWRzMjtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g1MyhcbiAgICBMaXN0LFxuICAgIHtcbiAgICAgIGJsb2NrSWRzLFxuICAgICAgY29sbGVjdGlvbixcbiAgICAgIGNvbGxlY3Rpb25WaWV3XG4gICAgfVxuICApO1xufVxuZnVuY3Rpb24gTGlzdCh7XG4gIGJsb2NrSWRzID0gW10sXG4gIGNvbGxlY3Rpb24sXG4gIGNvbGxlY3Rpb25WaWV3XG59KSB7XG4gIGNvbnN0IHsgY29tcG9uZW50cywgcmVjb3JkTWFwLCBtYXBQYWdlVXJsIH0gPSB1c2VOb3Rpb25Db250ZXh0KCk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NTMoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWxpc3QtY29sbGVjdGlvblwiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDUzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1saXN0LXZpZXdcIiwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g1MyhcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tbGlzdC1ib2R5XCIsIGNoaWxkcmVuOiBibG9ja0lkcyA9PSBudWxsID8gdm9pZCAwIDogYmxvY2tJZHMubWFwKChibG9ja0lkKSA9PiB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgIGNvbnN0IGJsb2NrID0gKF9hID0gcmVjb3JkTWFwLmJsb2NrW2Jsb2NrSWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2EudmFsdWU7XG4gICAgaWYgKCFibG9jaykgcmV0dXJuIG51bGw7XG4gICAgY29uc3QgdGl0bGVTY2hlbWEgPSBjb2xsZWN0aW9uLnNjaGVtYS50aXRsZTtcbiAgICBjb25zdCB0aXRsZURhdGEgPSAoX2IgPSBibG9jayA9PSBudWxsID8gdm9pZCAwIDogYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnRpdGxlO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4czE2KFxuICAgICAgY29tcG9uZW50cy5QYWdlTGluayxcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1saXN0LWl0ZW0gbm90aW9uLXBhZ2UtbGlua1wiLFxuICAgICAgICBocmVmOiBtYXBQYWdlVXJsKGJsb2NrLmlkKSxcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4NTMoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWxpc3QtaXRlbS10aXRsZVwiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDUzKFxuICAgICAgICAgICAgUHJvcGVydHksXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHNjaGVtYTogdGl0bGVTY2hlbWEsXG4gICAgICAgICAgICAgIGRhdGE6IHRpdGxlRGF0YSxcbiAgICAgICAgICAgICAgYmxvY2ssXG4gICAgICAgICAgICAgIGNvbGxlY3Rpb24sXG4gICAgICAgICAgICAgIGxpbmtUb1RpdGxlUGFnZTogZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApIH0pLFxuICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g1MyhcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tbGlzdC1pdGVtLWJvZHlcIiwgY2hpbGRyZW46IChfZCA9IChfYyA9IGNvbGxlY3Rpb25WaWV3LmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLmxpc3RfcHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9kLmZpbHRlcigocCkgPT4gcC52aXNpYmxlKS5tYXAoKHApID0+IHtcbiAgICAgICAgICAgIHZhciBfYTI7XG4gICAgICAgICAgICBjb25zdCBzY2hlbWEgPSBjb2xsZWN0aW9uLnNjaGVtYVtwLnByb3BlcnR5XTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBibG9jayAmJiAoKF9hMiA9IGJsb2NrLnByb3BlcnRpZXMpID09IG51bGwgPyB2b2lkIDAgOiBfYTJbcC5wcm9wZXJ0eV0pO1xuICAgICAgICAgICAgaWYgKCFzY2hlbWEpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDUzKFxuICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1saXN0LWl0ZW0tcHJvcGVydHlcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDUzKFxuICAgICAgICAgICAgICAgICAgUHJvcGVydHksXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNjaGVtYSxcbiAgICAgICAgICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgYmxvY2ssXG4gICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHAucHJvcGVydHlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSkgfSlcbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIGJsb2NrSWRcbiAgICApO1xuICB9KSB9KSB9KSB9KTtcbn1cblxuLy8gc3JjL3RoaXJkLXBhcnR5L2NvbGxlY3Rpb24tdmlldy10YWJsZS50c3hcbmltcG9ydCAqIGFzIFJlYWN0MTggZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBGcmFnbWVudCBhcyBGcmFnbWVudDksIGpzeCBhcyBqc3g1NCwganN4cyBhcyBqc3hzMTcgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBkZWZhdWx0QmxvY2tJZHMzID0gW107XG5mdW5jdGlvbiBDb2xsZWN0aW9uVmlld1RhYmxlKHtcbiAgY29sbGVjdGlvbixcbiAgY29sbGVjdGlvblZpZXcsXG4gIGNvbGxlY3Rpb25EYXRhLFxuICBwYWRkaW5nLFxuICB3aWR0aFxufSkge1xuICB2YXIgX2EsIF9iLCBfYztcbiAgY29uc3QgaXNHcm91cGVkQ29sbGVjdGlvbiA9IChfYSA9IGNvbGxlY3Rpb25WaWV3ID09IG51bGwgPyB2b2lkIDAgOiBjb2xsZWN0aW9uVmlldy5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfYS5jb2xsZWN0aW9uX2dyb3VwX2J5O1xuICBpZiAoaXNHcm91cGVkQ29sbGVjdGlvbikge1xuICAgIGNvbnN0IGNvbGxlY3Rpb25Hcm91cHMgPSBnZXRDb2xsZWN0aW9uR3JvdXBzKFxuICAgICAgY29sbGVjdGlvbixcbiAgICAgIGNvbGxlY3Rpb25WaWV3LFxuICAgICAgY29sbGVjdGlvbkRhdGEsXG4gICAgICBwYWRkaW5nLFxuICAgICAgd2lkdGhcbiAgICApO1xuICAgIHJldHVybiBjb2xsZWN0aW9uR3JvdXBzLm1hcCgoZ3JvdXAsIGluZGV4KSA9PiAvKiBAX19QVVJFX18gKi8ganN4NTQoXG4gICAgICBDb2xsZWN0aW9uR3JvdXAsXG4gICAgICB7XG4gICAgICAgIC4uLmdyb3VwLFxuICAgICAgICBjb2xsZWN0aW9uVmlld0NvbXBvbmVudDogKHByb3BzKSA9PiAvKiBAX19QVVJFX18gKi8ganN4NTQoVGFibGUsIHsgLi4ucHJvcHMsIHBhZGRpbmcsIHdpZHRoIH0pLFxuICAgICAgICBzdW1tYXJ5UHJvcHM6IHtcbiAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgcGFkZGluZ0xlZnQ6IHBhZGRpbmcsXG4gICAgICAgICAgICBwYWRkaW5nUmlnaHQ6IHBhZGRpbmdcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBpbmRleFxuICAgICkpO1xuICB9XG4gIGNvbnN0IGJsb2NrSWRzID0gKChfYyA9IChfYiA9IGNvbGxlY3Rpb25EYXRhLmNvbGxlY3Rpb25fZ3JvdXBfcmVzdWx0cykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmJsb2NrSWRzKSAhPSBudWxsID8gX2MgOiBjb2xsZWN0aW9uRGF0YS5ibG9ja0lkcykgfHwgZGVmYXVsdEJsb2NrSWRzMztcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g1NChcbiAgICBUYWJsZSxcbiAgICB7XG4gICAgICBibG9ja0lkcyxcbiAgICAgIGNvbGxlY3Rpb24sXG4gICAgICBjb2xsZWN0aW9uVmlldyxcbiAgICAgIHBhZGRpbmcsXG4gICAgICB3aWR0aFxuICAgIH1cbiAgKTtcbn1cbmZ1bmN0aW9uIFRhYmxlKHtcbiAgYmxvY2tJZHMgPSBbXSxcbiAgY29sbGVjdGlvbixcbiAgY29sbGVjdGlvblZpZXcsXG4gIHdpZHRoLFxuICBwYWRkaW5nXG59KSB7XG4gIHZhciBfYTtcbiAgY29uc3QgeyByZWNvcmRNYXAsIGxpbmtUYWJsZVRpdGxlUHJvcGVydGllcyB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICBjb25zdCB0YWJsZVN0eWxlID0gUmVhY3QxOC51c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICB3aWR0aCxcbiAgICAgIG1heFdpZHRoOiB3aWR0aFxuICAgIH0pLFxuICAgIFt3aWR0aF1cbiAgKTtcbiAgY29uc3QgdGFibGVWaWV3U3R5bGUgPSBSZWFjdDE4LnVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIHBhZGRpbmdMZWZ0OiBwYWRkaW5nLFxuICAgICAgcGFkZGluZ1JpZ2h0OiBwYWRkaW5nXG4gICAgfSksXG4gICAgW3BhZGRpbmddXG4gICk7XG4gIGxldCBwcm9wZXJ0aWVzID0gW107XG4gIGlmICgoX2EgPSBjb2xsZWN0aW9uVmlldy5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfYS50YWJsZV9wcm9wZXJ0aWVzKSB7XG4gICAgcHJvcGVydGllcyA9IGNvbGxlY3Rpb25WaWV3LmZvcm1hdC50YWJsZV9wcm9wZXJ0aWVzLmZpbHRlcihcbiAgICAgIChwKSA9PiBwLnZpc2libGUgJiYgY29sbGVjdGlvbi5zY2hlbWFbcC5wcm9wZXJ0eV1cbiAgICApO1xuICB9IGVsc2Uge1xuICAgIHByb3BlcnRpZXMgPSBbeyBwcm9wZXJ0eTogXCJ0aXRsZVwiIH1dLmNvbmNhdChcbiAgICAgIE9iamVjdC5rZXlzKGNvbGxlY3Rpb24uc2NoZW1hKS5maWx0ZXIoKHApID0+IHAgIT09IFwidGl0bGVcIikubWFwKChwcm9wZXJ0eSkgPT4gKHsgcHJvcGVydHkgfSkpXG4gICAgKTtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDU0KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi10YWJsZVwiLCBzdHlsZTogdGFibGVTdHlsZSwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g1NChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tdGFibGUtdmlld1wiLCBzdHlsZTogdGFibGVWaWV3U3R5bGUsIGNoaWxkcmVuOiAhIXByb3BlcnRpZXMubGVuZ3RoICYmIC8qIEBfX1BVUkVfXyAqLyBqc3hzMTcoRnJhZ21lbnQ5LCB7IGNoaWxkcmVuOiBbXG4gICAgLyogQF9fUFVSRV9fICovIGpzeDU0KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi10YWJsZS1oZWFkZXJcIiwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g1NChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tdGFibGUtaGVhZGVyLWlubmVyXCIsIGNoaWxkcmVuOiBwcm9wZXJ0aWVzLm1hcCgocCkgPT4ge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIGNvbnN0IHNjaGVtYSA9IChfYTIgPSBjb2xsZWN0aW9uLnNjaGVtYSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMltwLnByb3BlcnR5XTtcbiAgICAgIGNvbnN0IGlzVGl0bGUgPSBwLnByb3BlcnR5ID09PSBcInRpdGxlXCI7XG4gICAgICBjb25zdCBzdHlsZSA9IHt9O1xuICAgICAgaWYgKHAud2lkdGgpIHtcbiAgICAgICAgc3R5bGUud2lkdGggPSBwLndpZHRoO1xuICAgICAgfSBlbHNlIGlmIChpc1RpdGxlKSB7XG4gICAgICAgIHN0eWxlLndpZHRoID0gMjgwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3R5bGUud2lkdGggPSAyMDA7XG4gICAgICB9XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDU0KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi10YWJsZS10aFwiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDU0KFxuICAgICAgICBcImRpdlwiLFxuICAgICAgICB7XG4gICAgICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi10YWJsZS12aWV3LWhlYWRlci1jZWxsXCIsXG4gICAgICAgICAgc3R5bGUsXG4gICAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g1NChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tdGFibGUtdmlldy1oZWFkZXItY2VsbC1pbm5lclwiLCBjaGlsZHJlbjogc2NoZW1hICYmIC8qIEBfX1BVUkVfXyAqLyBqc3g1NChDb2xsZWN0aW9uQ29sdW1uVGl0bGUsIHsgc2NoZW1hIH0pIH0pXG4gICAgICAgIH1cbiAgICAgICkgfSwgcC5wcm9wZXJ0eSk7XG4gICAgfSkgfSkgfSksXG4gICAgLyogQF9fUFVSRV9fICovIGpzeDU0KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi10YWJsZS1oZWFkZXItcGxhY2Vob2xkZXJcIiB9KSxcbiAgICAvKiBAX19QVVJFX18gKi8ganN4NTQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLXRhYmxlLWJvZHlcIiwgY2hpbGRyZW46IGJsb2NrSWRzID09IG51bGwgPyB2b2lkIDAgOiBibG9ja0lkcy5tYXAoKGJsb2NrSWQpID0+IC8qIEBfX1BVUkVfXyAqLyBqc3g1NChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tdGFibGUtcm93XCIsIGNoaWxkcmVuOiBwcm9wZXJ0aWVzLm1hcCgocCkgPT4ge1xuICAgICAgdmFyIF9hMiwgX2IsIF9jO1xuICAgICAgY29uc3Qgc2NoZW1hID0gKF9hMiA9IGNvbGxlY3Rpb24uc2NoZW1hKSA9PSBudWxsID8gdm9pZCAwIDogX2EyW3AucHJvcGVydHldO1xuICAgICAgY29uc3QgYmxvY2sgPSAoX2IgPSByZWNvcmRNYXAuYmxvY2tbYmxvY2tJZF0pID09IG51bGwgPyB2b2lkIDAgOiBfYi52YWx1ZTtcbiAgICAgIGNvbnN0IGRhdGEgPSAoX2MgPSBibG9jayA9PSBudWxsID8gdm9pZCAwIDogYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9jW3AucHJvcGVydHldO1xuICAgICAgY29uc3QgaXNUaXRsZSA9IHAucHJvcGVydHkgPT09IFwidGl0bGVcIjtcbiAgICAgIGNvbnN0IHN0eWxlID0ge307XG4gICAgICBpZiAocC53aWR0aCkge1xuICAgICAgICBzdHlsZS53aWR0aCA9IHAud2lkdGg7XG4gICAgICB9IGVsc2UgaWYgKGlzVGl0bGUpIHtcbiAgICAgICAgc3R5bGUud2lkdGggPSAyODA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdHlsZS53aWR0aCA9IDIwMDtcbiAgICAgIH1cbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NTQoXG4gICAgICAgIFwiZGl2XCIsXG4gICAgICAgIHtcbiAgICAgICAgICBjbGFzc05hbWU6IGNzKFxuICAgICAgICAgICAgXCJub3Rpb24tdGFibGUtY2VsbFwiLFxuICAgICAgICAgICAgYG5vdGlvbi10YWJsZS1jZWxsLSR7c2NoZW1hID09IG51bGwgPyB2b2lkIDAgOiBzY2hlbWEudHlwZX1gXG4gICAgICAgICAgKSxcbiAgICAgICAgICBzdHlsZSxcbiAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDU0KFxuICAgICAgICAgICAgUHJvcGVydHksXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHNjaGVtYSxcbiAgICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgICAgYmxvY2ssXG4gICAgICAgICAgICAgIGNvbGxlY3Rpb24sXG4gICAgICAgICAgICAgIGxpbmtUb1RpdGxlUGFnZTogbGlua1RhYmxlVGl0bGVQcm9wZXJ0aWVzXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKVxuICAgICAgICB9LFxuICAgICAgICBwLnByb3BlcnR5XG4gICAgICApO1xuICAgIH0pIH0sIGJsb2NrSWQpKSB9KVxuICBdIH0pIH0pIH0pO1xufVxuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi12aWV3LnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDU1IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBDb2xsZWN0aW9uVmlld0ltcGwocHJvcHMpIHtcbiAgY29uc3QgeyBjb2xsZWN0aW9uVmlldyB9ID0gcHJvcHM7XG4gIHN3aXRjaCAoY29sbGVjdGlvblZpZXcudHlwZSkge1xuICAgIGNhc2UgXCJ0YWJsZVwiOlxuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g1NShDb2xsZWN0aW9uVmlld1RhYmxlLCB7IC4uLnByb3BzIH0pO1xuICAgIGNhc2UgXCJnYWxsZXJ5XCI6XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDU1KENvbGxlY3Rpb25WaWV3R2FsbGVyeSwgeyAuLi5wcm9wcyB9KTtcbiAgICBjYXNlIFwibGlzdFwiOlxuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g1NShDb2xsZWN0aW9uVmlld0xpc3QsIHsgLi4ucHJvcHMgfSk7XG4gICAgY2FzZSBcImJvYXJkXCI6XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDU1KENvbGxlY3Rpb25WaWV3Qm9hcmQsIHsgLi4ucHJvcHMgfSk7XG4gICAgZGVmYXVsdDpcbiAgICAgIGNvbnNvbGUud2FybihcInVuc3VwcG9ydGVkIGNvbGxlY3Rpb24gdmlld1wiLCBjb2xsZWN0aW9uVmlldyk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxudmFyIENvbGxlY3Rpb25WaWV3ID0gUmVhY3QxOS5tZW1vKENvbGxlY3Rpb25WaWV3SW1wbCk7XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9yZWFjdC11c2UudHNcbmltcG9ydCB7XG4gIHVzZUNhbGxiYWNrIGFzIHVzZUNhbGxiYWNrNCxcbiAgdXNlRWZmZWN0IGFzIHVzZUVmZmVjdDIsXG4gIHVzZUxheW91dEVmZmVjdCxcbiAgdXNlUmVmIGFzIHVzZVJlZjIsXG4gIHVzZVN0YXRlIGFzIHVzZVN0YXRlM1xufSBmcm9tIFwicmVhY3RcIjtcbnZhciBub29wID0gKCkgPT4ge1xufTtcbmZ1bmN0aW9uIG9uKG9iaiwgLi4uYXJncykge1xuICBpZiAob2JqICYmIG9iai5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgb2JqLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAuLi5hcmdzXG4gICAgKTtcbiAgfVxufVxuZnVuY3Rpb24gb2ZmKG9iaiwgLi4uYXJncykge1xuICBpZiAob2JqICYmIG9iai5yZW1vdmVFdmVudExpc3RlbmVyKSB7XG4gICAgb2JqLnJlbW92ZUV2ZW50TGlzdGVuZXIoXG4gICAgICAuLi5hcmdzXG4gICAgKTtcbiAgfVxufVxudmFyIGlzQnJvd3NlcjIgPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiO1xudmFyIHVzZVdpbmRvd1NpemUgPSAoaW5pdGlhbFdpZHRoID0gSW5maW5pdHksIGluaXRpYWxIZWlnaHQgPSBJbmZpbml0eSkgPT4ge1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVJhZlN0YXRlKHtcbiAgICB3aWR0aDogaXNCcm93c2VyMiA/IHdpbmRvdy5pbm5lcldpZHRoIDogaW5pdGlhbFdpZHRoLFxuICAgIGhlaWdodDogaXNCcm93c2VyMiA/IHdpbmRvdy5pbm5lckhlaWdodCA6IGluaXRpYWxIZWlnaHRcbiAgfSk7XG4gIHVzZUVmZmVjdDIoKCkgPT4ge1xuICAgIGlmIChpc0Jyb3dzZXIyKSB7XG4gICAgICBjb25zdCBoYW5kbGVyID0gKCkgPT4ge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgd2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoLFxuICAgICAgICAgIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0XG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICAgIG9uKHdpbmRvdywgXCJyZXNpemVcIiwgaGFuZGxlcik7XG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBvZmYod2luZG93LCBcInJlc2l6ZVwiLCBoYW5kbGVyKTtcbiAgICAgIH07XG4gICAgfVxuICB9LCBbXSk7XG4gIHJldHVybiBzdGF0ZTtcbn07XG52YXIgdXNlRWZmZWN0T25jZSA9IChlZmZlY3QpID0+IHtcbiAgdXNlRWZmZWN0MihlZmZlY3QsIFtdKTtcbn07XG52YXIgdXNlVW5tb3VudCA9IChmbikgPT4ge1xuICBjb25zdCBmblJlZiA9IHVzZVJlZjIoZm4pO1xuICBmblJlZi5jdXJyZW50ID0gZm47XG4gIHVzZUVmZmVjdE9uY2UoKCkgPT4gKCkgPT4gZm5SZWYuY3VycmVudCgpKTtcbn07XG52YXIgdXNlUmFmU3RhdGUgPSAoaW5pdGlhbFN0YXRlKSA9PiB7XG4gIGNvbnN0IGZyYW1lID0gdXNlUmVmMigwKTtcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZTMoaW5pdGlhbFN0YXRlKTtcbiAgY29uc3Qgc2V0UmFmU3RhdGUgPSB1c2VDYWxsYmFjazQoKHZhbHVlKSA9PiB7XG4gICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoZnJhbWUuY3VycmVudCk7XG4gICAgZnJhbWUuY3VycmVudCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICBzZXRTdGF0ZSh2YWx1ZSk7XG4gICAgfSk7XG4gIH0sIFtdKTtcbiAgdXNlVW5tb3VudCgoKSA9PiB7XG4gICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoZnJhbWUuY3VycmVudCk7XG4gIH0pO1xuICByZXR1cm4gW3N0YXRlLCBzZXRSYWZTdGF0ZV07XG59O1xudmFyIHVzZUxvY2FsU3RvcmFnZSA9IChrZXksIGluaXRpYWxWYWx1ZSwgb3B0aW9ucykgPT4ge1xuICBpZiAoIWlzQnJvd3NlcjIpIHtcbiAgICByZXR1cm4gW2luaXRpYWxWYWx1ZSwgbm9vcCwgbm9vcF07XG4gIH1cbiAgaWYgKCFrZXkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1c2VMb2NhbFN0b3JhZ2Uga2V5IG1heSBub3QgYmUgZmFsc3lcIik7XG4gIH1cbiAgY29uc3QgZGVzZXJpYWxpemVyID0gb3B0aW9ucyA/IG9wdGlvbnMucmF3ID8gKHZhbHVlKSA9PiB2YWx1ZSA6IG9wdGlvbnMuZGVzZXJpYWxpemVyIDogSlNPTi5wYXJzZTtcbiAgY29uc3QgaW5pdGlhbGl6ZXIgPSB1c2VSZWYyKChrZXkyKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHNlcmlhbGl6ZXIgPSBvcHRpb25zID8gb3B0aW9ucy5yYXcgPyBTdHJpbmcgOiBvcHRpb25zLnNlcmlhbGl6ZXIgOiBKU09OLnN0cmluZ2lmeTtcbiAgICAgIGNvbnN0IGxvY2FsU3RvcmFnZVZhbHVlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5Mik7XG4gICAgICBpZiAobG9jYWxTdG9yYWdlVmFsdWUgIT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGRlc2VyaWFsaXplcihsb2NhbFN0b3JhZ2VWYWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaW5pdGlhbFZhbHVlKSB7XG4gICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5Miwgc2VyaWFsaXplcihpbml0aWFsVmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5pdGlhbFZhbHVlO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBpbml0aWFsVmFsdWU7XG4gICAgfVxuICB9KTtcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZTMoXG4gICAgKCkgPT4gaW5pdGlhbGl6ZXIuY3VycmVudChrZXkpXG4gICk7XG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiBzZXRTdGF0ZShpbml0aWFsaXplci5jdXJyZW50KGtleSkpLCBba2V5XSk7XG4gIGNvbnN0IHNldCA9IHVzZUNhbGxiYWNrNChcbiAgICAodmFsT3JGdW5jKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBuZXdTdGF0ZSA9IHR5cGVvZiB2YWxPckZ1bmMgPT09IFwiZnVuY3Rpb25cIiA/IHZhbE9yRnVuYyhzdGF0ZSkgOiB2YWxPckZ1bmM7XG4gICAgICAgIGlmIChuZXdTdGF0ZSA9PT0gdm9pZCAwKSByZXR1cm47XG4gICAgICAgIGxldCB2YWx1ZTtcbiAgICAgICAgaWYgKG9wdGlvbnMpXG4gICAgICAgICAgaWYgKG9wdGlvbnMucmF3KVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBuZXdTdGF0ZSA9PT0gXCJzdHJpbmdcIikgdmFsdWUgPSBuZXdTdGF0ZTtcbiAgICAgICAgICAgIGVsc2UgdmFsdWUgPSBKU09OLnN0cmluZ2lmeShuZXdTdGF0ZSk7XG4gICAgICAgICAgZWxzZSBpZiAob3B0aW9ucy5zZXJpYWxpemVyKSB2YWx1ZSA9IG9wdGlvbnMuc2VyaWFsaXplcihuZXdTdGF0ZSk7XG4gICAgICAgICAgZWxzZSB2YWx1ZSA9IEpTT04uc3RyaW5naWZ5KG5ld1N0YXRlKTtcbiAgICAgICAgZWxzZSB2YWx1ZSA9IEpTT04uc3RyaW5naWZ5KG5ld1N0YXRlKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCB2YWx1ZSk7XG4gICAgICAgIHNldFN0YXRlKGRlc2VyaWFsaXplcih2YWx1ZSkpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgfVxuICAgIH0sXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICAgIFtrZXksIHNldFN0YXRlXVxuICApO1xuICBjb25zdCByZW1vdmUgPSB1c2VDYWxsYmFjazQoKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgICAgc2V0U3RhdGUodm9pZCAwKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgfVxuICB9LCBba2V5LCBzZXRTdGF0ZV0pO1xuICByZXR1cm4gW3N0YXRlLCBzZXQsIHJlbW92ZV07XG59O1xuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi50c3hcbmltcG9ydCB7IEZyYWdtZW50IGFzIEZyYWdtZW50MTAsIGpzeCBhcyBqc3g1NiwganN4cyBhcyBqc3hzMTggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBpc1NlcnZlcjIgPSB0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiO1xuZnVuY3Rpb24gQ29sbGVjdGlvbih7XG4gIGJsb2NrLFxuICBjbGFzc05hbWUsXG4gIGN0eDogY3R4MlxufSkge1xuICBjb25zdCBjb250ZXh0ID0gUmVhY3QyMC51c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICAuLi5jdHgyXG4gICAgfSksXG4gICAgW2N0eDJdXG4gICk7XG4gIGlmIChibG9jay50eXBlID09PSBcInBhZ2VcIikge1xuICAgIGlmIChibG9jay5wYXJlbnRfdGFibGUgIT09IFwiY29sbGVjdGlvblwiKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g1NihOb3Rpb25Db250ZXh0UHJvdmlkZXIsIHsgLi4uY29udGV4dCwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g1NihcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1wYWdlLXByb3BlcnRpZXNcIiwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g1NihcbiAgICAgIENvbGxlY3Rpb25Sb3csXG4gICAgICB7XG4gICAgICAgIGJsb2NrLFxuICAgICAgICBwYWdlSGVhZGVyOiB0cnVlLFxuICAgICAgICBjbGFzc05hbWVcbiAgICAgIH1cbiAgICApIH0pIH0pO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4NTYoTm90aW9uQ29udGV4dFByb3ZpZGVyLCB7IC4uLmNvbnRleHQsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4NTYoQ29sbGVjdGlvblZpZXdCbG9jaywgeyBibG9jaywgY2xhc3NOYW1lIH0pIH0pO1xuICB9XG59XG5mdW5jdGlvbiBDb2xsZWN0aW9uVmlld0Jsb2NrKHtcbiAgYmxvY2ssXG4gIGNsYXNzTmFtZVxufSkge1xuICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gIGNvbnN0IHsgcmVjb3JkTWFwLCBzaG93Q29sbGVjdGlvblZpZXdEcm9wZG93biB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICBjb25zdCB7IHZpZXdfaWRzOiB2aWV3SWRzIH0gPSBibG9jaztcbiAgY29uc3QgY29sbGVjdGlvbklkID0gZ2V0QmxvY2tDb2xsZWN0aW9uSWQoYmxvY2ssIHJlY29yZE1hcCk7XG4gIGNvbnN0IFtpc01vdW50ZWQsIHNldElzTW91bnRlZF0gPSBSZWFjdDIwLnVzZVN0YXRlKGZhbHNlKTtcbiAgUmVhY3QyMC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldElzTW91bnRlZCh0cnVlKTtcbiAgfSwgW10pO1xuICBjb25zdCBkZWZhdWx0Q29sbGVjdGlvblZpZXdJZCA9IHZpZXdJZHNbMF07XG4gIGNvbnN0IFtjb2xsZWN0aW9uU3RhdGUsIHNldENvbGxlY3Rpb25TdGF0ZV0gPSB1c2VMb2NhbFN0b3JhZ2UoYmxvY2suaWQsIHtcbiAgICBjb2xsZWN0aW9uVmlld0lkOiBkZWZhdWx0Q29sbGVjdGlvblZpZXdJZFxuICB9KTtcbiAgY29uc3QgY29sbGVjdGlvblZpZXdJZCA9IGlzTW91bnRlZCAmJiB2aWV3SWRzLmZpbmQoKGlkKSA9PiBpZCAmJiBpZCA9PT0gKGNvbGxlY3Rpb25TdGF0ZSA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvblN0YXRlLmNvbGxlY3Rpb25WaWV3SWQpKSB8fCBkZWZhdWx0Q29sbGVjdGlvblZpZXdJZDtcbiAgY29uc3Qgb25DaGFuZ2VWaWV3ID0gUmVhY3QyMC51c2VDYWxsYmFjayhcbiAgICAoY29sbGVjdGlvblZpZXdJZDIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKFwiY2hhbmdlIGNvbGxlY3Rpb24gdmlld1wiLCBjb2xsZWN0aW9uVmlld0lkMik7XG4gICAgICBzZXRDb2xsZWN0aW9uU3RhdGUoe1xuICAgICAgICAuLi5jb2xsZWN0aW9uU3RhdGUsXG4gICAgICAgIGNvbGxlY3Rpb25WaWV3SWQ6IGNvbGxlY3Rpb25WaWV3SWQyXG4gICAgICB9KTtcbiAgICB9LFxuICAgIFtjb2xsZWN0aW9uU3RhdGUsIHNldENvbGxlY3Rpb25TdGF0ZV1cbiAgKTtcbiAgbGV0IHsgd2lkdGg6IHdpbmRvd1dpZHRoIH0gPSB1c2VXaW5kb3dTaXplKCk7XG4gIGlmIChpc1NlcnZlcjIpIHtcbiAgICB3aW5kb3dXaWR0aCA9IDEwMjQ7XG4gIH1cbiAgY29uc3QgY29sbGVjdGlvbiA9IChfYSA9IHJlY29yZE1hcC5jb2xsZWN0aW9uW2NvbGxlY3Rpb25JZF0pID09IG51bGwgPyB2b2lkIDAgOiBfYS52YWx1ZTtcbiAgY29uc3QgY29sbGVjdGlvblZpZXcgPSAoX2IgPSByZWNvcmRNYXAuY29sbGVjdGlvbl92aWV3W2NvbGxlY3Rpb25WaWV3SWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2IudmFsdWU7XG4gIGNvbnN0IGNvbGxlY3Rpb25EYXRhID0gKF9jID0gcmVjb3JkTWFwLmNvbGxlY3Rpb25fcXVlcnlbY29sbGVjdGlvbklkXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jW2NvbGxlY3Rpb25WaWV3SWRdO1xuICBjb25zdCBwYXJlbnRQYWdlID0gZ2V0QmxvY2tQYXJlbnRQYWdlMihibG9jaywgcmVjb3JkTWFwKTtcbiAgY29uc3QgeyB3aWR0aCwgcGFkZGluZyB9ID0gUmVhY3QyMC51c2VNZW1vKCgpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIGNvbnN0IHN0eWxlID0ge307XG4gICAgaWYgKChjb2xsZWN0aW9uVmlldyA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvblZpZXcudHlwZSkgIT09IFwidGFibGVcIiAmJiAoY29sbGVjdGlvblZpZXcgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb25WaWV3LnR5cGUpICE9PSBcImJvYXJkXCIpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN0eWxlLFxuICAgICAgICB3aWR0aDogMCxcbiAgICAgICAgcGFkZGluZzogMFxuICAgICAgfTtcbiAgICB9XG4gICAgY29uc3Qgd2lkdGgyID0gd2luZG93V2lkdGg7XG4gICAgY29uc3QgbWF4Tm90aW9uQm9keVdpZHRoID0gNzA4O1xuICAgIGxldCBub3Rpb25Cb2R5V2lkdGggPSBtYXhOb3Rpb25Cb2R5V2lkdGg7XG4gICAgaWYgKChfYTIgPSBwYXJlbnRQYWdlID09IG51bGwgPyB2b2lkIDAgOiBwYXJlbnRQYWdlLmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5wYWdlX2Z1bGxfd2lkdGgpIHtcbiAgICAgIG5vdGlvbkJvZHlXaWR0aCA9IE1hdGgudHJ1bmMod2lkdGgyIC0gMiAqIE1hdGgubWluKDk2LCB3aWR0aDIgKiAwLjA4KSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5vdGlvbkJvZHlXaWR0aCA9IHdpZHRoMiA8IG1heE5vdGlvbkJvZHlXaWR0aCA/IE1hdGgudHJ1bmMod2lkdGgyIC0gd2lkdGgyICogMC4wMikgOiBtYXhOb3Rpb25Cb2R5V2lkdGg7XG4gICAgfVxuICAgIGNvbnN0IHBhZGRpbmcyID0gaXNTZXJ2ZXIyICYmICFpc01vdW50ZWQgPyA5NiA6IE1hdGgudHJ1bmMoKHdpZHRoMiAtIG5vdGlvbkJvZHlXaWR0aCkgLyAyKTtcbiAgICBzdHlsZS5wYWRkaW5nTGVmdCA9IHBhZGRpbmcyO1xuICAgIHN0eWxlLnBhZGRpbmdSaWdodCA9IHBhZGRpbmcyO1xuICAgIHJldHVybiB7XG4gICAgICBzdHlsZSxcbiAgICAgIHdpZHRoOiB3aWR0aDIsXG4gICAgICBwYWRkaW5nOiBwYWRkaW5nMlxuICAgIH07XG4gIH0sIFt3aW5kb3dXaWR0aCwgcGFyZW50UGFnZSwgY29sbGVjdGlvblZpZXcgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb25WaWV3LnR5cGUsIGlzTW91bnRlZF0pO1xuICBpZiAoIShjb2xsZWN0aW9uICYmIGNvbGxlY3Rpb25WaWV3ICYmIGNvbGxlY3Rpb25EYXRhKSkge1xuICAgIGNvbnNvbGUud2FybihcInNraXBwaW5nIG1pc3NpbmcgY29sbGVjdGlvbiB2aWV3IGZvciBibG9ja1wiLCBibG9jay5pZCwge1xuICAgICAgY29sbGVjdGlvbklkLFxuICAgICAgY29sbGVjdGlvblZpZXdJZCxcbiAgICAgIGNvbGxlY3Rpb25WaWV3LFxuICAgICAgY29sbGVjdGlvbkRhdGEsXG4gICAgICByZWNvcmRNYXBcbiAgICB9KTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCB0aXRsZSA9IGdldFRleHRDb250ZW50NChjb2xsZWN0aW9uLm5hbWUpLnRyaW0oKTtcbiAgY29uc3Qgc2hvd1RpdGxlID0gKChfZCA9IGNvbGxlY3Rpb25WaWV3LmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9kLmhpZGVfbGlua2VkX2NvbGxlY3Rpb25fbmFtZSkgIT09IHRydWUgJiYgdGl0bGU7XG4gIGlmIChjb2xsZWN0aW9uLmljb24pIHtcbiAgICBibG9jay5mb3JtYXQgPSB7XG4gICAgICAuLi5ibG9jay5mb3JtYXQsXG4gICAgICBwYWdlX2ljb246IGNvbGxlY3Rpb24uaWNvblxuICAgIH07XG4gIH1cbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzMTgoRnJhZ21lbnQxMCwgeyBjaGlsZHJlbjogW1xuICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzMTgoXCJkaXZcIiwgeyBjaGlsZHJlbjogW1xuICAgICAgLyogQF9fUFVSRV9fICovIGpzeDU2KFwiZGl2XCIsIHsgY2hpbGRyZW46IHZpZXdJZHMubGVuZ3RoID4gMSAmJiBzaG93Q29sbGVjdGlvblZpZXdEcm9wZG93biAmJiAvKiBAX19QVVJFX18gKi8ganN4NTYoXG4gICAgICAgIENvbGxlY3Rpb25WaWV3VGFicyxcbiAgICAgICAge1xuICAgICAgICAgIGNvbGxlY3Rpb25WaWV3SWQsXG4gICAgICAgICAgdmlld0lkcyxcbiAgICAgICAgICBvbkNoYW5nZVZpZXdcbiAgICAgICAgfVxuICAgICAgKSB9KSxcbiAgICAgIHNob3dUaXRsZSAmJiAvKiBAX19QVVJFX18gKi8ganN4NTYoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24taGVhZGVyXCIsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4czE4KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1jb2xsZWN0aW9uLWhlYWRlci10aXRsZVwiLCBjaGlsZHJlbjogW1xuICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4NTYoXG4gICAgICAgICAgUGFnZUljb24sXG4gICAgICAgICAge1xuICAgICAgICAgICAgYmxvY2ssXG4gICAgICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLXBhZ2UtdGl0bGUtaWNvblwiLFxuICAgICAgICAgICAgaGlkZURlZmF1bHRJY29uOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICApLFxuICAgICAgICB0aXRsZVxuICAgICAgXSB9KSB9KVxuICAgIF0gfSksXG4gICAgLyogQF9fUFVSRV9fICovIGpzeDU2KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBjcyhcIm5vdGlvbi1jb2xsZWN0aW9uXCIsIGNsYXNzTmFtZSksIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4NTYoXG4gICAgICBDb2xsZWN0aW9uVmlldyxcbiAgICAgIHtcbiAgICAgICAgY29sbGVjdGlvbixcbiAgICAgICAgY29sbGVjdGlvblZpZXcsXG4gICAgICAgIGNvbGxlY3Rpb25EYXRhLFxuICAgICAgICBwYWRkaW5nLFxuICAgICAgICB3aWR0aFxuICAgICAgfVxuICAgICkgfSlcbiAgXSB9KTtcbn1cbmZ1bmN0aW9uIENvbGxlY3Rpb25WaWV3VGFicyh7XG4gIGNvbGxlY3Rpb25WaWV3SWQsXG4gIHZpZXdJZHMsXG4gIG9uQ2hhbmdlVmlld1xufSkge1xuICBjb25zdCB7IHJlY29yZE1hcCB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDU2KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcIm5vdGlvbi1jb2xsZWN0aW9uLXZpZXctdGFicy1yb3dcIiwgY2hpbGRyZW46IHZpZXdJZHMubWFwKCh2aWV3SWQpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3g1NihcbiAgICAgIFwiYnV0dG9uXCIsXG4gICAgICB7XG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IG9uQ2hhbmdlVmlldyh2aWV3SWQpLFxuICAgICAgICBjbGFzc05hbWU6IGNzKFxuICAgICAgICAgIFwibm90aW9uLWNvbGxlY3Rpb24tdmlldy10YWJzLWNvbnRlbnQtaXRlbVwiLFxuICAgICAgICAgIGNvbGxlY3Rpb25WaWV3SWQgPT09IHZpZXdJZCAmJiBcIm5vdGlvbi1jb2xsZWN0aW9uLXZpZXctdGFicy1jb250ZW50LWl0ZW0tYWN0aXZlXCJcbiAgICAgICAgKSxcbiAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3g1NihcbiAgICAgICAgICBDb2xsZWN0aW9uVmlld0NvbHVtbkRlc2MsXG4gICAgICAgICAge1xuICAgICAgICAgICAgY29sbGVjdGlvblZpZXc6IChfYSA9IHJlY29yZE1hcC5jb2xsZWN0aW9uX3ZpZXdbdmlld0lkXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnZhbHVlXG4gICAgICAgICAgfVxuICAgICAgICApXG4gICAgICB9LFxuICAgICAgdmlld0lkXG4gICAgKTtcbiAgfSkgfSk7XG59XG5mdW5jdGlvbiBDb2xsZWN0aW9uVmlld0NvbHVtbkRlc2Moe1xuICBjb2xsZWN0aW9uVmlldyxcbiAgY2xhc3NOYW1lLFxuICBjaGlsZHJlbixcbiAgLi4ucmVzdFxufSkge1xuICBpZiAoIWNvbGxlY3Rpb25WaWV3KSByZXR1cm4gbnVsbDtcbiAgY29uc3QgeyB0eXBlIH0gPSBjb2xsZWN0aW9uVmlldztcbiAgY29uc3QgbmFtZSA9IGNvbGxlY3Rpb25WaWV3Lm5hbWUgfHwgYCR7dHlwZVswXS50b1VwcGVyQ2FzZSgpfSR7dHlwZS5zbGljZSgxKX0gdmlld2A7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4czE4KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBjcyhcIm5vdGlvbi1jb2xsZWN0aW9uLXZpZXctdHlwZVwiLCBjbGFzc05hbWUpLCAuLi5yZXN0LCBjaGlsZHJlbjogW1xuICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g1NihcbiAgICAgIENvbGxlY3Rpb25WaWV3SWNvbixcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1jb2xsZWN0aW9uLXZpZXctdHlwZS1pY29uXCIsXG4gICAgICAgIHR5cGVcbiAgICAgIH1cbiAgICApLFxuICAgIC8qIEBfX1BVUkVfXyAqLyBqc3g1NihcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24tdmlldy10eXBlLXRpdGxlXCIsIGNoaWxkcmVuOiBuYW1lIH0pLFxuICAgIGNoaWxkcmVuXG4gIF0gfSk7XG59XG5leHBvcnQge1xuICBDb2xsZWN0aW9uLFxuICBQcm9wZXJ0eUltcGxNZW1vIGFzIFByb3BlcnR5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29sbGVjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/react-notion-x@7.2.3_@babel_fc7c182c64d09662684b10b18db5ed4a/node_modules/react-notion-x/build/third-party/collection.js\n"));

/***/ })

}]);